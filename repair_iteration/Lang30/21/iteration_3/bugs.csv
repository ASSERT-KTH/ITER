bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
2	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
3	[BUG]  [BUGGY]  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
4	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
5	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  false;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  false;	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
6	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  false;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  false;	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
7	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchChars[j  +  1]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchChars[j  +  1]);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  j,  searchChars[j  +  1]);	  aughtExceptionHandler.handleMissingName(cs,    i,    searchChars[j    +    1]);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
8	[BUG]  [BUGGY]  Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    	non-compiled	[CE]  <identifier>  expected	115	None	replace
9	[BUG]  [BUGGY]  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    	non-compiled	[CE]  <identifier>  expected	115	None	replace
10	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    	non-compiled	[CE]  <identifier>  expected	115	None	replace
11	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    	non-compiled	[CE]  <identifier>  expected	115	None	replace
12	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	73	None	replace
13	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i  +  1);  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i  +  1);	  char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	73	None	replace
14	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i  +  1,  searchLen);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i  +  1,  searchLen);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i  +  1,  searchLen);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	73	None	replace
15	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  if(j    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	145	None	replace
16	[BUG]  [BUGGY]  CharSequence  cs  =  cs.charAt(i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CharSequence  cs  =  cs.charAt(i);  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CharSequence  cs  =  cs.charAt(i);	  if(searchChars[j]!=    ch)    {    if(i    >    0    &&    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
17	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    len)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	125	None	replace
18	[BUG]  [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(j    <    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
19	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  searchLength  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  searchLength  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  searchLength  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(j    <    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
20	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  searchLen  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  searchLen  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  searchLen  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(j    <    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
21	[BUG]  [BUGGY]  if(j  <  0  ||  j  >  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  >  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  >  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(j    <    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
22	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  false;  }	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
23	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  false;  }	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
24	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	2	None	replace
25	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i  +  1,  searchLength);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i  +  1,  searchLength);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i  +  1,  searchLength);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch)    	non-compiled	[CE]  <identifier>  expected	53	None	replace
27	[BUG]  [BUGGY]  Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch)    	non-compiled	[CE]  <identifier>  expected	53	None	replace
28	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch)    	non-compiled	[CE]  <identifier>  expected	53	None	replace
29	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLength))  {  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLength))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLength))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
30	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  searchLength))  {  return  true;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  searchLength))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  searchLength))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
31	[BUG]  [BUGGY]  ||(j  <  csLast  &&  i  <  searchLength))  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  csLast  &&  i  <  searchLength))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  csLast  &&  i  <  searchLength))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
32	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  searchLength))  {  return  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  searchLength))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  searchLength))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
33	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  cs[j  +  1])  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  cs[j  +  1])  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  cs[j  +  1])  {  return  false;  }	  if(searchChars[j    +    1]!=    cs[j    +    1])    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
34	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs[j  +  1]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs[j  +  1]))  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs[j  +  1]))  {  return  false;  }	  if(searchChars[j    +    1]!=    cs[j    +    1])    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
35	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  1)||!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  1)||!found)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs.charAt(i  +  1)||!found)  {  return  false;  }	  if(searchChars[j    +    1]    ==    cs.charAt(i    +    1)||!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
36	[BUG]  [BUGGY]  ||(searchChars[j  +  1]  ==  cs.charAt(i  +  1)&&!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j  +  1]  ==  cs.charAt(i  +  1)&&!found)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j  +  1]  ==  cs.charAt(i  +  1)&&!found)  {  return  false;  }	  if(searchChars[j    +    1]    ==    cs.charAt(i    +    1)||!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
37	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  if(searchChars[j  +  1]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  if(searchChars[j  +  1]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLength)  {  if(searchChars[j  +  1]  ==  ch)  {  return  false;  }	  if(searchChars[j    +    1]    ==    ch)    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLength  +  1)  {  if(searchChars[j  +  1]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLength  +  1)  {  if(searchChars[j  +  1]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLength  +  1)  {  if(searchChars[j  +  1]  ==  ch)  {  return  false;  }	  if(searchChars[j    +    1]    ==    ch)    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
39	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  ch)  {	  if(searchChars[j    +    1]    ==    ch)    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
40	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  ch)  {  return  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  ch)  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  ch)  {  return  false;	  if(searchChars[j    +    1]    ==    ch)    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
41	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  0))  {  return  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  0))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  0))  {  return  false;	  ||(i    <    csLast    &&    j    <    0))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
42	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  0))  {  return  true;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  0))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  0))  {  return  true;	  ||(i    <    csLast    &&    j    <    0))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
43	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  j  <  0))  {  return  true;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  j  <  0))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  j  <  0))  {  return  true;	  ||(i    <    csLast    &&    j    <    0))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
44	[BUG]  [BUGGY]  ||(j  <  csLast  &&  ch  <  =  0))  {  return  true;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  csLast  &&  ch  <  =  0))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  csLast  &&  ch  <  =  0))  {  return  true;	  ||(i    <    csLast    &&    j    <    0))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
45	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  =  searchLength))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  =  searchLength))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  =  searchLength))  {  return  false;  }	  ||(i    >    0    &&    j    <    searchLength))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
46	[BUG]  [BUGGY]  ||(i  <  0  &&  j  <  searchLength))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  0  &&  j  <  searchLength))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  0  &&  j  <  searchLength))  {  return  false;  }	  ||(i    >    0    &&    j    <    searchLength))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
47	[BUG]  [BUGGY]  ||(i  >=  0  &&  j  <  searchLength))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >=  0  &&  j  <  searchLength))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >=  0  &&  j  <  searchLength))  {  return  false;  }	  ||(i    >    0    &&    j    <    searchLength))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
48	[BUG]  [BUGGY]  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(j    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	131	None	replace
49	[BUG]  [BUGGY]  Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(j    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	131	None	replace
50	[BUG]  [BUGGY]  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {	  if(j    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	131	None	replace
51	[BUG]  [BUGGY]  if(j  >  0  ||  i  <  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  i  <  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  i  <  searchLength)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
52	[BUG]  [BUGGY]  ||  j  <  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLength)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
53	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
54	[BUG]  [BUGGY]  ||(j  <  csLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  csLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  csLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
55	[BUG]  [BUGGY]  ||(searchChars[j  +  1]  ==  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j  +  1]  ==  ch))  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j  +  1]  ==  ch))  {  return  false;  }	  ||(searchChars[j    +    1]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
56	[BUG]  [BUGGY]  ||(searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }	  ||(searchChars[j    +    1]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
57	[BUG]  [BUGGY]  ||(searchChars[j  +  1]!=  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j  +  1]!=  ch))  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j  +  1]!=  ch))  {  return  false;  }	  ||(searchChars[j    +    1]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
58	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
59	[BUG]  [BUGGY]  ||(j  <  csLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  csLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  csLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
60	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  =  0)||(searchChars[j]  ==  ch))  {  return  true;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  =  0)||(searchChars[j]  ==  ch))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  =  0)||(searchChars[j]  ==  ch))  {  return  true;	  if(searchChars[j]!=    ch)    {    if(i    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
61	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  searchChars[j]!=  ch))  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  searchChars[j]!=  ch))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  searchChars[j]!=  ch))  {  return  true;	  if(searchChars[j]!=    ch)    {    if(i    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
62	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  =  0)||(searchChars[j]!=  ch))  {  return  true;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  =  0)||(searchChars[j]!=  ch))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  =  0)||(searchChars[j]!=  ch))  {  return  true;	  if(searchChars[j]!=    ch)    {    if(i    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
63	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  0)||(searchChars[j]  ==  ch))  {  return  true;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  0)||(searchChars[j]  ==  ch))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  0)||(searchChars[j]  ==  ch))  {  return  true;	  if(searchChars[j]!=    ch)    {    if(i    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
64	[BUG]  [BUGGY]  if(i  <  csLast  ||  j  <  0  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  ||  j  <  0  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  ||  j  <  0  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    0    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
65	[BUG]  [BUGGY]  if(j  <  0  ||  i  <  csLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  i  <  csLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  i  <  csLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    0    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
66	[BUG]  [BUGGY]  ||  j  <  0  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  0  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  0  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    0    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
67	[BUG]  [BUGGY]  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    0    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
68	[BUG]  [BUGGY]  ||  searchChars[j]!=  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j]!=  ch)  {  return  false;  }	  ||    searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
69	[BUG]  [BUGGY]  ||  searchChars[j]!=  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j]!=  ch)  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j]!=  ch)  {  return  true;  }	  ||    searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
70	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
71	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
72	[BUG]  [BUGGY]  if(j  >  0  ||  i  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  i  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  i  <  0)  {  return  true;  }	  if(i    >    0    ||    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
73	[BUG]  [BUGGY]  ||  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  0)  {  return  true;  }	  if(i    >    0    ||    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
74	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  =  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  =  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  =  0)  {  return  true;  }	  if(i    >    0    ||    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
75	[BUG]  [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	147	None	replace
76	[BUG]  [BUGGY]  if(j  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	147	None	replace
77	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return	  if(i    >    0    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	144	None	replace
78	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)	  if(i    >    0    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	144	None	replace
79	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
80	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
81	[BUG]  [BUGGY]  if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	78	None	replace
82	[BUG]  [BUGGY]  if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	78	None	replace
83	[BUG]  [BUGGY]  if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	96	None	replace
84	[BUG]  [BUGGY]  if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	96	None	replace
85	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  0))  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  0))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  0))  {  return  false;	  if(searchChars[j]    ==    ch)    {    if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
86	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  0))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  0))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  0))  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
87	[BUG]  [BUGGY]  ||  searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j]  ==  ch)  {	  if(searchChars[j]    ==    ch)    {    if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
88	[BUG]  [BUGGY]  ||(i  +  1  <  searchLength  &&  searchChars[j  +]  ==  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  +  1  <  searchLength  &&  searchChars[j  +]  ==  ch))  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  +  1  <  searchLength  &&  searchChars[j  +]  ==  ch))  {  return  false;  }	  if(searchChars[j    +    1]    ==    cs.charAt(i    +    2))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
89	[BUG]  [BUGGY]  if(j  >  0  ||  i  <  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  i  <  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  i  <  0)  {  return  false;  }	  if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
90	[BUG]  [BUGGY]  ||  j  <  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  0)  {  return  false;  }	  if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
91	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  =  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  =  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  =  0)  {  return  false;  }	  if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
92	[BUG]  [BUGGY]  if(i  <  0  ||  j  <  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  0  ||  j  <  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  0  ||  j  <  0)  {  return  false;  }	  if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
93	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(j    <    0    ||    searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	163	None	replace
94	[BUG]  [BUGGY]  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(j    <    0    ||    searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	163	None	replace
95	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  if(!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  if(!found)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  if(!found)  {  return  false;  }	  if(searchChars[j    +    1]!=    cs.charAt(i    +    1))    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
96	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {	  if(searchChars[j    +    1]!=    cs.charAt(i    +    1))    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
97	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  ch)  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  ch)  {  return  false;  }	  if(searchChars[j    +    1]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
98	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
99	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
100	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
101	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  searchLength)  {  if(i  >  0  ||  j  <  searchLast)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  searchLength)  {  if(i  >  0  ||  j  <  searchLast)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  searchLength)  {  if(i  >  0  ||  j  <  searchLast)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    0    ||    j    <    =    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	158	None	replace
102	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  searchLength)  {  if(i  >  0  ||  j  <  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  searchLength)  {  if(i  >  0  ||  j  <  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  searchLength)  {  if(i  >  0  ||  j  <  searchLength)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    0    ||    j    <    =    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	158	None	replace
103	[BUG]  [BUGGY]  if(j  <  csLast  ||  j  >  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  j  >  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  j  >  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    >    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
104	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  >  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  >  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  >  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    >    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
105	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  =  searchLength))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  =  searchLength))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  =  searchLength))  {  return  true;  }	  ||(i    >    0    &&    j    <    searchLength))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
106	[BUG]  [BUGGY]  ||(i  <  0  &&  j  <  searchLength))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  0  &&  j  <  searchLength))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  0  &&  j  <  searchLength))  {  return  true;  }	  ||(i    >    0    &&    j    <    searchLength))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
107	[BUG]  [BUGGY]  ||(j  >  0  &&  j  <  searchLength))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  >  0  &&  j  <  searchLength))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  >  0  &&  j  <  searchLength))  {  return  true;  }	  ||(i    >    0    &&    j    <    searchLength))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
108	[BUG]  [BUGGY]  CharacterIterator  it  =  this.searchChars.iterator();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CharacterIterator  it  =  this.searchChars.iterator();  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CharacterIterator  it  =  this.searchChars.iterator();	  CharacterIterator    it    =    searchChars.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
109	[BUG]  [BUGGY]  CharacterIterator  it  =  cs.iterator();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CharacterIterator  it  =  cs.iterator();  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CharacterIterator  it  =  cs.iterator();	  CharacterIterator    it    =    searchChars.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
110	[BUG]  [BUGGY]  CharacterIterator  it  =  searchChars!=  null?  searchChars.iterator()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CharacterIterator  it  =  searchChars!=  null?  searchChars.iterator()  :  null;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CharacterIterator  it  =  searchChars!=  null?  searchChars.iterator()  :  null;	  CharacterIterator    it    =    searchChars.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
111	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  =  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  =  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  =  0)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
112	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	89	None	replace
113	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(i    >    0    ||    j    <    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	113	None	replace
114	[BUG]  [BUGGY]  Character  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  Character  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	Character  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  Character    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	54	None	replace
115	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  Character    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	54	None	replace
116	[BUG]  [BUGGY]  CharSequence  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CharSequence  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CharSequence  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  Character    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	54	None	replace
117	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    return    	non-compiled	[CE]  <identifier>  expected	56	None	replace
118	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    return    	non-compiled	[CE]  <identifier>  expected	56	None	replace
119	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    return    	non-compiled	[CE]  <identifier>  expected	56	None	replace
120	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    <    csLast    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	72	None	replace
121	[BUG]  [BUGGY]  if(j  >  0  ||  i  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  i  <  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  i  <  searchLength)  {  return  true;  }	  if(i    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
122	[BUG]  [BUGGY]  ||  j  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLength)  {  return  true;  }	  if(i    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
123	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(i    >    0    ||    j    <    len)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	130	None	replace
124	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  if(!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  if(!found)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  if(!found)  {  return  false;  }	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
125	[BUG]  [BUGGY]  ||  searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  if(!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  if(!found)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  if(!found)  {  return  false;  }	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
126	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
127	[BUG]  [BUGGY]  ||  searchChars[j  +  3]  ==  cs.charAt(i  +  1))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  3]  ==  cs.charAt(i  +  1))  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  3]  ==  cs.charAt(i  +  1))  {	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
128	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs[j  +  1])  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs[j  +  1])  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs[j  +  1])  {  return  false;  }	  if(searchChars[j    +    1]    ==    cs[j    +    1])    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
129	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]  ==  cs[j  +  1]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]  ==  cs[j  +  1]))  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  searchChars[j  +  1]  ==  cs[j  +  1]))  {  return  false;  }	  if(searchChars[j    +    1]    ==    cs[j    +    1])    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
130	[BUG]  [BUGGY]  ||(searchChars[j  +  1]  ==  cs[j  +  1]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j  +  1]  ==  cs[j  +  1]))  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j  +  1]  ==  cs[j  +  1]))  {  return  false;  }	  if(searchChars[j    +    1]    ==    cs[j    +    1])    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
131	[BUG]  [BUGGY]  ||(searchChars[j  +  1]  ==  cs[i  +  1]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j  +  1]  ==  cs[i  +  1]))  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j  +  1]  ==  cs[i  +  1]))  {  return  false;  }	  ||(searchChars[j    +    1]    ==    cs[j    +    1]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
132	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	150	None	replace
133	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	150	None	replace
134	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE))  {  return  false;	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	150	None	replace
135	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
136	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
137	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
138	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
139	[BUG]  [BUGGY]  CHAR  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CHAR  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CHAR  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	55	None	replace
140	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i  +  1,  searchLength);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i  +  1,  searchLength);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i  +  1,  searchLength);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	55	None	replace
141	[BUG]  [BUGGY]  ||(i  +  1  <  searchLength  &&  searchChars[j  +]  <  =  ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  +  1  <  searchLength  &&  searchChars[j  +]  <  =  ch))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  +  1  <  searchLength  &&  searchChars[j  +]  <  =  ch))  {  return  true;  }	  ||(i    +    1    <    searchLength    &&    searchChars[j    +]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
142	[BUG]  [BUGGY]  ||(j  +  1  <  searchLength  &&  searchChars[j  +]  ==  ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  +  1  <  searchLength  &&  searchChars[j  +]  ==  ch))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  +  1  <  searchLength  &&  searchChars[j  +]  ==  ch))  {  return  true;  }	  ||(i    +    1    <    searchLength    &&    searchChars[j    +]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
143	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  ch)  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  ch)  {  return  false;  }	  ||    searchChars[j    +    1]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
144	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >>    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
145	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch)    	non-compiled	[CE]  <identifier>  expected	114	None	replace
146	[BUG]  [BUGGY]  ||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
147	[BUG]  [BUGGY]  ||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
148	[BUG]  [BUGGY]  ||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
149	[BUG]  [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
150	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
151	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
152	[BUG]  [BUGGY]  if(i  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
153	[BUG]  [BUGGY]  ||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
154	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
155	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
156	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
157	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	97	None	replace
158	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	152	None	replace
159	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE))  {  return  false;	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	152	None	replace
160	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
161	[BUG]  [BUGGY]  ||(j  <  csLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  csLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  csLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
162	[BUG]  [BUGGY]  ||(j  <  csLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  csLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  csLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
163	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  ch)return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  ch)return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  ch)return  true;  }	  if(searchChars[j    +    1]    ==    ch)return    false;    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
164	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  return  false;  }	  if(searchChars[j    +    1]    ==    ch)return    false;    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
165	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	111	None	replace
166	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  searchChars[j  +  1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  searchChars[j  +  1]);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  searchChars[j  +  1]);	  aughtExceptionHandler.handleMissingName(ch,    searchChars[j    +    1]);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
167	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
168	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
169	[BUG]  [BUGGY]  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
170	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  =  searchLength))  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  =  searchLength))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  =  searchLength))  {  return  false;	  ||(i    >    0    &&    j    <    searchLength))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
171	[BUG]  [BUGGY]  ||(i  <  0  &&  j  <  searchLength))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  0  &&  j  <  searchLength))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  0  &&  j  <  searchLength))  {  return  false;	  ||(i    >    0    &&    j    <    searchLength))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
172	[BUG]  [BUGGY]  ||(j  >  0  &&  j  <  searchLength))  {  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  >  0  &&  j  <  searchLength))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  >  0  &&  j  <  searchLength))  {  return  false;	  ||(i    >    0    &&    j    <    searchLength))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
173	[BUG]  [BUGGY]  cs.charAt(i  +  1,  j);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  cs.charAt(i  +  1,  j);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	cs.charAt(i  +  1,  j);	  cs.charAt(i    +    1,    ch);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
174	[BUG]  [BUGGY]  cs.charAt(i  +  1,  ch  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  cs.charAt(i  +  1,  ch  +  1);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	cs.charAt(i  +  1,  ch  +  1);	  cs.charAt(i    +    1,    ch);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
175	[BUG]  [BUGGY]  cs.charAt(j  +  1,  ch);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  cs.charAt(j  +  1,  ch);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	cs.charAt(j  +  1,  ch);	  cs.charAt(i    +    1,    ch);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
176	[BUG]  [BUGGY]  cs.charAt(i  +  1,  ch  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  cs.charAt(i  +  1,  ch  -  1);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	cs.charAt(i  +  1,  ch  -  1);	  cs.charAt(i    +    1,    ch);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
177	[BUG]  [BUGGY]  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	71	None	replace
178	[BUG]  [BUGGY]  if(j  <  0  ||  i  <  csLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  i  <  csLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  i  <  csLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    0    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
179	[BUG]  [BUGGY]  ||  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    0    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
180	[BUG]  [BUGGY]  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    0    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
181	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  =  searchLast))  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  =  searchLast))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  =  searchLast))  {  return  true;	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    =    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
182	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast))  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    =    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
183	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  =  searchLength))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  =  searchLength))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  =  searchLength))  {  return  true;	  ||(i    >    0    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
184	[BUG]  [BUGGY]  ||(j  >  0  &&  j  <  searchLength))  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  >  0  &&  j  <  searchLength))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  >  0  &&  j  <  searchLength))  {  return  true;	  ||(i    >    0    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
185	[BUG]  [BUGGY]  ||  j  <  searchLength  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLength  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLength  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;	  ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
186	[BUG]  [BUGGY]  ||  j  <  searchLen  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLen  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLen  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;	  ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
187	[BUG]  [BUGGY]  ||  j  <  searchLimit  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLimit  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLimit  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;	  ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
188	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	146	None	replace
189	[BUG]  [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	146	None	replace
190	[BUG]  [BUGGY]  if(i  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	146	None	replace
191	[BUG]  [BUGGY]  ||(searchChars[j]!=  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j]!=  ch))  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j]!=  ch))  {  return  false;  }	  ||(searchChars[j]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
192	[BUG]  [BUGGY]  ||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
193	[BUG]  [BUGGY]  ||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
194	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
195	[BUG]  [BUGGY]  if(i  <  csLast  ||  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  ||  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  ||  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	126	None	replace
196	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	116	None	replace
197	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchChars,  ch);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchChars,  ch);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  j,  searchChars,  ch);	  aughtExceptionHandler.handleMissingName(cs,    j,    searchLength,    ch);    	non-compiled	[CE]  <identifier>  expected	141	None	replace
198	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchChars[j],  ch);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchChars[j],  ch);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  j,  searchChars[j],  ch);	  aughtExceptionHandler.handleMissingName(cs,    j,    searchLength,    ch);    	non-compiled	[CE]  <identifier>  expected	141	None	replace
199	[BUG]  [BUGGY]  ||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs[j  +  1]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs[j  +  1]))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs[j  +  1]))  {  return  true;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs[j    +    1]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
200	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]  ==  cs[j  +  2]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]  ==  cs[j  +  2]))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  searchChars[j  +  1]  ==  cs[j  +  2]))  {  return  true;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs[j    +    1]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
201	[BUG]  [BUGGY]  if(j  >  0  ||  i  >=  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  i  >=  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  i  >=  searchLength)  {  return  false;  }	  if(i    >    0    ||    j    >=    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
202	[BUG]  [BUGGY]  ||  j  >=  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  >=  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  >=  searchLength)  {  return  false;  }	  if(i    >    0    ||    j    >=    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
203	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength)return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength)return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength)return  false;  }	  if(i    >    0    ||    j    >=    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
204	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs)  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs)  {  return  true;  }	  if(searchChars[j    +    1]    ==    cs)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
205	[BUG]  [BUGGY]  ||(searchChars[j  +  1]  ==  cs[i  +  1)))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j  +  1]  ==  cs[i  +  1)))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j  +  1]  ==  cs[i  +  1)))  {  return  true;  }	  if(searchChars[j    +    1]    ==    cs)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
206	[BUG]  [BUGGY]  if(j  <  csLast  ||  j  <  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  j  <  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  j  <  searchLast)  {  return  true;  }	  if(i    <    csLast    ||    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
207	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLast)  {  return  true;  }	  if(i    <    csLast    ||    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
208	[BUG]  [BUGGY]  ||  j  <  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast)  {  return  true;  }	  if(i    <    csLast    ||    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
209	[BUG]  [BUGGY]  if(j  <  csLast  ||  i  <  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  i  <  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  i  <  searchLast)  {  return  true;  }	  if(i    <    csLast    ||    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
210	[BUG]  [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
211	[BUG]  [BUGGY]  if(j  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
212	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
213	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
214	[BUG]  [BUGGY]  if(i  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
215	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }  else  {  return  INDEX_NOT_FOUND;  }	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
216	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
217	[BUG]  [BUGGY]  ||(i  +  1  <  searchLength  &&  j  <  =  0))  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  +  1  <  searchLength  &&  j  <  =  0))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  +  1  <  searchLength  &&  j  <  =  0))  {  return  true;	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
218	[BUG]  [BUGGY]  ||(i  +  1  <  searchLength  &&  j  <  =  0))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  +  1  <  searchLength  &&  j  <  =  0))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  +  1  <  searchLength  &&  j  <  =  0))  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
219	[BUG]  [BUGGY]  CharSequence  ts  =  cs.charAt(i  +  1,  searchChars[j]);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CharSequence  ts  =  cs.charAt(i  +  1,  searchChars[j]);  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CharSequence  ts  =  cs.charAt(i  +  1,  searchChars[j]);	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
220	[BUG]  [BUGGY]  CHARS[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CHARS[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CHARS[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }	  if(searchChars[j    +    1]!=    cs.charAt(i    +    1))    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
221	[BUG]  [BUGGY]  CHARS[j]  =  cs.charAt(i  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CHARS[j]  =  cs.charAt(i  +  1);  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CHARS[j]  =  cs.charAt(i  +  1);	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
222	[BUG]  [BUGGY]  if(j  <  0  ||  i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	164	None	replace
223	[BUG]  [BUGGY]  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	164	None	replace
224	[BUG]  [BUGGY]  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	164	None	replace
225	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  0)||(searchChars[j]!=  ch))  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  0)||(searchChars[j]!=  ch))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  0)||(searchChars[j]!=  ch))  {  return  true;	  if(searchChars[j]!=    ch)    {    if(i    <    csLast    &&    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
226	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
227	[BUG]  [BUGGY]  Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
228	[BUG]  [BUGGY]  Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	88	None	replace
229	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	88	None	replace
230	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  0))  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  0))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  0))  {  return  true;	  if(searchChars[j]!=    ch)    {    if(i    >    0    ||    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
231	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  0))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  0))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  0))  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    ||    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
232	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
233	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
234	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i,  searchChars,  ch);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i,  searchChars,  ch);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  i,  searchChars,  ch);	  aughtExceptionHandler.handleMissingName(cs,    i,    searchLength,    ch);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
235	[BUG]  [BUGGY]  if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false    	non-compiled	[CE]  <identifier>  expected	84	None	replace
236	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false    	non-compiled	[CE]  <identifier>  expected	84	None	replace
237	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false    	non-compiled	[CE]  <identifier>  expected	84	None	replace
238	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs[i  +  1])  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs[i  +  1])  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs[i  +  1])  {  return  true;  }	  ||    searchChars[j    +    1]    ==    cs[j    +    1])    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
239	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs[j  +  2])  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs[j  +  2])  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs[j  +  2])  {  return  true;  }	  ||    searchChars[j    +    1]    ==    cs[j    +    1])    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
240	[BUG]  [BUGGY]  ||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
241	[BUG]  [BUGGY]  ||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
242	[BUG]  [BUGGY]  ||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
243	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(i    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	32	None	replace
244	[BUG]  [BUGGY]  if(j  <  0  ||  i  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  i  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  i  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
245	[BUG]  [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	80	None	replace
246	[BUG]  [BUGGY]  Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	Character  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	98	None	replace
247	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	98	None	replace
248	[BUG]  [BUGGY]  if(j  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
249	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
250	[BUG]  [BUGGY]  if(i  <  csLast  ||  j  >  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  ||  j  >  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  ||  j  >  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
251	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast)||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast)||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  j  <  searchLast)||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
252	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
253	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
254	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
255	[BUG]  [BUGGY]  ||(j  <  csLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  csLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  csLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
256	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
257	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
258	[BUG]  [BUGGY]  ||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
259	[BUG]  [BUGGY]  ||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
260	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
261	[BUG]  [BUGGY]  if(j  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
262	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
263	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    <    csLast    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	1	None	replace
264	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  searchLength)  {  return  true;  }	  if(j    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
265	[BUG]  [BUGGY]  if(j  >=  0  ||  j  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >=  0  ||  j  <  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >=  0  ||  j  <  searchLength)  {  return  true;  }	  if(j    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
266	[BUG]  [BUGGY]  ||(i  <  csLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
267	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
268	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
269	[BUG]  [BUGGY]  ||(i  <  ch  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  ch  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  ch  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
270	[BUG]  [BUGGY]  ||(searchChars[j]!=  ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j]!=  ch))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j]!=  ch))  {  return  true;  }	  ||(searchChars[j]    ==    ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
271	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  ch)  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  ch)  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  ch)  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }	  if(searchChars[j    +    1]!=    ch)    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
272	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  ch)  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  ch)  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  ch)  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }	  if(searchChars[j    +    1]!=    ch)    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
273	[BUG]  [BUGGY]  CHARS[j  +  1]  ==  ch)  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CHARS[j  +  1]  ==  ch)  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CHARS[j  +  1]  ==  ch)  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }	  if(searchChars[j    +    1]!=    ch)    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
274	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]  ==  ch))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]  ==  ch))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  searchChars[j  +  1]  ==  ch))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }	  if(searchChars[j    +    1]!=    ch)    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
275	[BUG]  [BUGGY]  ||  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
276	[BUG]  [BUGGY]  if(j  <  0  ||  i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
277	[BUG]  [BUGGY]  ||  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
278	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
279	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast))  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  j  <  searchLast))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
280	[BUG]  [BUGGY]  ||(j  <  csLast  &&  ch  <  =  SearchLast.MIN_VALUE))  {  return  true;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  csLast  &&  ch  <  =  SearchLast.MIN_VALUE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  csLast  &&  ch  <  =  SearchLast.MIN_VALUE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
281	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i    +    1);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	3	None	replace
282	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit    	non-compiled	[CE]  <identifier>  expected	117	None	replace
283	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit    	non-compiled	[CE]  <identifier>  expected	117	None	replace
284	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs[j  +  1])return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  cs[j  +  1])return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs[j  +  1])return  true;  }	  if(searchChars[j    +    1]    ==    cs[j    +    1])return    false;    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
285	[BUG]  [BUGGY]  if(i  <  csLast  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
286	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  searchLength)  {  return  false;  }	  if(j    >    0    ||    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
287	[BUG]  [BUGGY]  if(j  >=  0  ||  j  <  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >=  0  ||  j  <  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >=  0  ||  j  <  searchLength)  {  return  false;  }	  if(j    >    0    ||    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
288	[BUG]  [BUGGY]  ||(j  <  csLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  csLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  csLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
289	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	148	None	replace
290	[BUG]  [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	148	None	replace
291	[BUG]  [BUGGY]  if(i  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	148	None	replace
292	[BUG]  [BUGGY]  if(j  <  0  ||  i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
293	[BUG]  [BUGGY]  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
294	[BUG]  [BUGGY]  cs.charAt(i  +  1,  ch);  return  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  cs.charAt(i  +  1,  ch);  return  false;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	cs.charAt(i  +  1,  ch);  return  false;	  cs.charAt(i    +    1,    ch);    return    true;    	non-compiled	[CE]  <identifier>  expected	133	None	replace
295	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  ch)  {  cs.charAt(i  +  1,  ch);  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  ch)  {  cs.charAt(i  +  1,  ch);  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  ch)  {  cs.charAt(i  +  1,  ch);  return  true;  }	  cs.charAt(i    +    1,    ch);    return    true;    	non-compiled	[CE]  <identifier>  expected	133	None	replace
296	[BUG]  [BUGGY]  cs.charAt(i  +  1,  j);  return  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  cs.charAt(i  +  1,  j);  return  false;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	cs.charAt(i  +  1,  j);  return  false;	  cs.charAt(i    +    1,    ch);    return    true;    	non-compiled	[CE]  <identifier>  expected	133	None	replace
297	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
298	[BUG]  [BUGGY]  if(i  <  csLast  ||  j  >  csLast)  {  if(j  <  0  ||  j  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  ||  j  >  csLast)  {  if(j  <  0  ||  j  <  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  ||  j  >  csLast)  {  if(j  <  0  ||  j  <  searchLength)  {  return  true;  }	  if(j    <    0    ||    j    >    csLast)    {    if(i    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
299	[BUG]  [BUGGY]  ||  j  <  csLast)  {  if(i  >  0  ||  j  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  csLast)  {  if(i  >  0  ||  j  <  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  csLast)  {  if(i  >  0  ||  j  <  searchLength)  {  return  true;  }	  if(j    <    0    ||    j    >    csLast)    {    if(i    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
300	[BUG]  [BUGGY]  if(i  <  csLast  ||  j  <  searchLength)  {  if(j  <  0  ||  j  <  len)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  ||  j  <  searchLength)  {  if(j  <  0  ||  j  <  len)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  ||  j  <  searchLength)  {  if(j  <  0  ||  j  <  len)  {  return  true;  }	  if(j    <    0    ||    j    >    csLast)    {    if(i    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
301	[BUG]  [BUGGY]  ||(j  <  0  &&  i  <  searchLength))  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0  &&  i  <  searchLength))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0  &&  i  <  searchLength))  {  return  true;	  ||(i    <    0    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
302	[BUG]  [BUGGY]  ||(i  <  0  &&  j  <  =  searchLength))  {  return  true;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  0  &&  j  <  =  searchLength))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  0  &&  j  <  =  searchLength))  {  return  true;	  ||(i    <    0    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
303	[BUG]  [BUGGY]  ||(i  <  0  &&  j  <  6))  {  return  true;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  0  &&  j  <  6))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  0  &&  j  <  6))  {  return  true;	  ||(i    <    0    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
304	[BUG]  [BUGGY]  CharSequence  ts  =  cs.charAt(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CharSequence  ts  =  cs.charAt(i);  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CharSequence  ts  =  cs.charAt(i);	  if(searchChars[j]    ==    ch)    {    if(i    >    csLast    &&    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	165	None	replace
305	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  ch)  {  if(!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  ch)  {  if(!found)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  ch)  {  if(!found)  {  return  false;  }	  if(searchChars[j    +    1]!=    ch)    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
306	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  ch)  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  ch)  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  ch)  {  return  false;	  if(searchChars[j    +    1]!=    ch)    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
307	[BUG]  [BUGGY]  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;	  ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
308	[BUG]  [BUGGY]  ||  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;	  ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
309	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  true;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  true;	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
310	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    len)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	125	None	replace
311	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  len)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  len)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  len)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    len)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	125	None	replace
312	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  true;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  true;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  true;	  if(searchChars[j    +    1]!=    cs.charAt(i    +    1))    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
313	[BUG]  [BUGGY]  if(!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(!found)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(!found)  {  return  false;  }	  if(searchChars[j    +    1]!=    ch)    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
314	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  =  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  =  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  =  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	97	None	replace
315	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch)    	non-compiled	[CE]  <identifier>  expected	53	None	replace
316	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  &&  j  <  =  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  &&  j  <  =  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]!=  ch)  {  if(i  >  0  &&  j  <  =  0)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    &&    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
317	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  =  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  =  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  =  0)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    &&    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
318	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  searchLength)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    &&    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
319	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  =  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  =  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  =  0)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    &&    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
320	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  j  <  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
321	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
322	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  5)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  5)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  5)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
323	[BUG]  [BUGGY]  ||(i  >=  csLast  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >=  csLast  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >=  csLast  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
324	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast)||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast)||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  searchLast)||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
325	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  5)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  5)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  5)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
326	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  2))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  2))  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  cs.charAt(i  +  2))  {	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
327	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  >=  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  >=  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  >=  0)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
328	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
329	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
330	[BUG]  [BUGGY]  if(i  <  searchLength  &&  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  searchLength  &&  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  searchLength  &&  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    0    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
331	[BUG]  [BUGGY]  if(i  >=  csLast  &&  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >=  csLast  &&  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >=  csLast  &&  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    0    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
332	[BUG]  [BUGGY]  if(i  >  csLast  &&  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast  &&  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast  &&  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    0    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
333	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	116	None	replace
334	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	116	None	replace
335	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  searchLength)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    0    ||    j    <    =    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
336	[BUG]  [BUGGY]  if(i  >  0  ||  j  >=  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  >=  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  >=  searchLength)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    0    ||    j    <    =    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
337	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs[j  +  1])  return  true;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  cs[j  +  1])  return  true;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs[j  +  1])  return  true;	  if(searchChars[j    +    1]    ==    cs[j    +    1])return    false;    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
338	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  >=  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  >=  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  >=  searchLength)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    0    ||    j    <    =    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	158	None	replace
339	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	111	None	replace
340	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
341	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
342	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
343	[BUG]  [BUGGY]  if(i  >  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	164	None	replace
344	[BUG]  [BUGGY]  if(i  <  searchLen  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  searchLen  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  searchLen  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	164	None	replace
345	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	164	None	replace
346	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  true;  }	  ||    searchChars[j    +    1]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
347	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  ch)  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  ch)  {  return  true;  }	  ||    searchChars[j    +    1]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
348	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
349	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
350	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
351	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	147	None	replace
352	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit    	non-compiled	[CE]  <identifier>  expected	117	None	replace
353	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  +  1  <  csLast  &&  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  +  1  <  csLast  &&  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]!=  ch)  {  if(i  +  1  <  csLast  &&  j  <  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
354	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  &&  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  &&  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  &&  j  <  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
355	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  &&  j  <  =  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  &&  j  <  =  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  &&  j  <  =  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
356	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchChars[j]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchChars[j]);  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchChars[j]);	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
357	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchChars[j]));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchChars[j]));  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchChars[j]));	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
358	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(ch,  searchChars[j]));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(ch,  searchChars[j]));  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(ch,  searchChars[j]));	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
359	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(ch,  searchChars[i]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(ch,  searchChars[i]);  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(ch,  searchChars[i]);	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
360	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
361	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  5)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  5)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  5)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
362	[BUG]  [BUGGY]  ||(i  >=  csLast  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >=  csLast  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >=  csLast  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
363	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  6))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  6))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  6))  {  return  true;  }	  ||(i    >    0    &&    j    <    searchLength))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
364	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	152	None	replace
365	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	152	None	replace
366	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(j    <    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
367	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
368	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
369	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  len))  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  len))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  len))  {  return  false;	  ||(i    >    0    &&    j    <    searchLength))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
370	[BUG]  [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	80	None	replace
371	[BUG]  [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	80	None	replace
372	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	80	None	replace
373	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i);  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i);	  Character    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	54	None	replace
374	[BUG]  [BUGGY]  CharSequence  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CharSequence  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CharSequence  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  Character    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	54	None	replace
375	[BUG]  [BUGGY]  if(j  <  0  ||  j  >=  csLast)  {  if(i  >  0  ||  j  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  >=  csLast)  {  if(i  >  0  ||  j  <  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  >=  csLast)  {  if(i  >  0  ||  j  <  searchLength)  {  return  true;  }	  if(j    <    0    ||    j    >    csLast)    {    if(i    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
376	[BUG]  [BUGGY]  if(j  <  0  ||  j  >  csLast)  {  if(i  >  0  ||  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  >  csLast)  {  if(i  >  0  ||  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  >  csLast)  {  if(i  >  0  ||  j  <  0)  {  return  true;  }	  if(j    <    0    ||    j    >    csLast)    {    if(i    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
377	[BUG]  [BUGGY]  if(j  <  0  ||  j  >  MIN_SIZE)  {  if(i  >  MIN_SIZE  ||  j  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  >  MIN_SIZE)  {  if(i  >  MIN_SIZE  ||  j  <  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  >  MIN_SIZE)  {  if(i  >  MIN_SIZE  ||  j  <  searchLength)  {  return  true;  }	  if(j    <    0    ||    j    >    csLast)    {    if(i    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
378	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  ch)  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  ch)  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  ch)  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }	  if(searchChars[j    +    1]!=    ch)    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
379	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  &&  j  <  =  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  &&  j  <  =  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]!=  ch)  {  if(i  >  0  &&  j  <  =  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    &&    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
380	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  =  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  =  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  =  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    &&    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
381	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  =  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  =  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  =  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    &&    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
382	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
383	[BUG]  [BUGGY]  if(i  <  searchLen  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  searchLen  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  searchLen  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
384	[BUG]  [BUGGY]  if(i  >  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
385	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
386	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    return    	non-compiled	[CE]  <identifier>  expected	56	None	replace
387	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    return    	non-compiled	[CE]  <identifier>  expected	56	None	replace
388	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  searchLength);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  searchLength);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  searchLength);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(i    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	32	None	replace
389	[BUG]  [BUGGY]  if(searchChars[i  +  1]!=  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[i  +  1]!=  ch)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[i  +  1]!=  ch)  {  return  false;  }	  if(searchChars[j    +    1]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
390	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchLength,  ch);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchLength,  ch);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchLength,  ch);	  aughtExceptionHandler.handleMissingName(cs,    i,    searchLength,    ch);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
391	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  <  csLast  &&  j  <  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  <  csLast  &&  j  <  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]!=  ch)  {  if(i  <  csLast  &&  j  <  searchLast)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    =    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
392	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  =  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  =  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  =  0)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    =    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
393	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	126	None	replace
394	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	126	None	replace
395	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j  +  1]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j  +  1]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  if(searchChars[j  +  1]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(searchChars[j    +    1]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
396	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j  +  1]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j  +  1]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  if(searchChars[j  +  1]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true	  if(searchChars[j    +    1]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
397	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j  +  1]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j  +  1]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  if(searchChars[j  +  1]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(searchChars[j    +    1]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
398	[BUG]  [BUGGY]  if(j  >  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0)  {  return  false;  }	  if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
399	[BUG]  [BUGGY]  ||(i  +  1  <  searchLength  &&  searchChars[j  +]!=  ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  +  1  <  searchLength  &&  searchChars[j  +]!=  ch))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  +  1  <  searchLength  &&  searchChars[j  +]!=  ch))  {  return  true;  }	  ||(i    +    1    <    searchLength    &&    searchChars[j    +]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
400	[BUG]  [BUGGY]  ||(i  +  1  <  ch  &&  searchChars[j  +]  ==  ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  +  1  <  ch  &&  searchChars[j  +]  ==  ch))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  +  1  <  ch  &&  searchChars[j  +]  ==  ch))  {  return  true;  }	  ||(i    +    1    <    searchLength    &&    searchChars[j    +]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
401	[BUG]  [BUGGY]  ||(i  +  1  <  searchLength  &&  searchChars[j  +]  >=  ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  +  1  <  searchLength  &&  searchChars[j  +]  >=  ch))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  +  1  <  searchLength  &&  searchChars[j  +]  >=  ch))  {  return  true;  }	  ||(i    +    1    <    searchLength    &&    searchChars[j    +]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
402	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    len)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	149	None	replace
403	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  len)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  len)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  len)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    len)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	149	None	replace
404	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchChars[j  +  1]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchChars[j  +  1]);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchChars[j  +  1]);	  aughtExceptionHandler.handleMissingName(cs,    i,    searchChars[j    +    1]);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
405	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  true;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  true;	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
406	[BUG]  [BUGGY]  ||(j  <  0  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
407	[BUG]  [BUGGY]  if(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
408	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
409	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  =  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  =  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  =  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
410	[BUG]  [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	try  ==  [Delete]  catch(Throwable  t)  {	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
411	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(j    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	131	None	replace
412	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {	  if(j    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	131	None	replace
413	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	87	None	replace
414	[BUG]  [BUGGY]  ||(j  <  csLast  &&  j  <  searchLength))  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  csLast  &&  j  <  searchLength))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  csLast  &&  j  <  searchLength))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
415	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  5))  {  return  true;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  5))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  5))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
416	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  6))  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  6))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  6))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
417	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
418	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
419	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  false;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
420	[BUG]  [BUGGY]  if(i  >  0)  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	2	None	replace
421	[BUG]  [BUGGY]  if(i  >  csLast  &&  i  <  searchLength)  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast  &&  i  <  searchLength)  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast  &&  i  <  searchLength)  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	2	None	replace
422	[BUG]  [BUGGY]  ||(j  <  0  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
423	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
424	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
425	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
426	[BUG]  [BUGGY]  ||(searchChars[j  +  1]  ==  cs[i  +  1]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j  +  1]  ==  cs[i  +  1]))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j  +  1]  ==  cs[i  +  1]))  {  return  true;  }	  ||(searchChars[j    +    1]    ==    cs[j    +    1]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
427	[BUG]  [BUGGY]  ||(searchChars[j  +  1]  ==  cs[j  +  2]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j  +  1]  ==  cs[j  +  2]))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j  +  1]  ==  cs[j  +  2]))  {  return  true;  }	  ||(searchChars[j    +    1]    ==    cs[j    +    1]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
428	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	153	None	replace
429	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  2))  {  if(!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  cs.charAt(i  +  2))  {  if(!found)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  cs.charAt(i  +  2))  {  if(!found)  {  return  false;  }	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
430	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLength)  {  return  true;  }	  if(i    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
431	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
432	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  true;  }	  if(searchChars[j    +    1]    ==    cs.charAt(i    +    2))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
433	[BUG]  [BUGGY]  if(searchChars[j  +  1]!=  cs.charAt(i  +  2))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]!=  cs.charAt(i  +  2))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]!=  cs.charAt(i  +  2))  {  return  true;  }	  if(searchChars[j    +    1]    ==    cs.charAt(i    +    2))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
434	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  false;	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
435	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
436	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  5)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  5)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  5)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
437	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  6)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  6)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  6)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
438	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
439	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
440	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
441	[BUG]  [BUGGY]  if(searchChars[j  +  1]!=  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]!=  ch)  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]!=  ch)  {  return  true;  }	  if(searchChars[j    +    1]    ==    cs)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
442	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs[i  +  1))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  cs[i  +  1))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs[i  +  1))  {  return  true;  }	  if(searchChars[j    +    1]    ==    cs)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
443	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {	  if(j    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	145	None	replace
444	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit	  if(j    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	145	None	replace
445	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	146	None	replace
446	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	146	None	replace
447	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  2);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  2);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i  +  2);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	98	None	replace
448	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs[j  +  1]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs[j  +  1]))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs[j  +  1]))  {  return  true;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs[j    +    1]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
449	[BUG]  [BUGGY]  if(j  <  csLast  ||  j  >  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  j  >  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  j  >  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    >    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
450	[BUG]  [BUGGY]  if(j  ==  0)  {  if(i  +  1  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  ==  0)  {  if(i  +  1  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  ==  0)  {  if(i  +  1  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
451	[BUG]  [BUGGY]  if(i  +  1  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  +  1  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  +  1  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
452	[BUG]  [BUGGY]  if(i  +  1  <  csLast  &&  j  <  0  &&  ch  >=  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  +  1  <  csLast  &&  j  <  0  &&  ch  >=  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  +  1  <  csLast  &&  j  <  0  &&  ch  >=  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
453	[BUG]  [BUGGY]  if(i  +  1  <  csLast  &&  j  <  0  &&  ch  >=  =  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  +  1  <  csLast  &&  j  <  0  &&  ch  >=  =  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  +  1  <  csLast  &&  j  <  0  &&  ch  >=  =  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
454	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	150	None	replace
455	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchLimit,  ch);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchLimit,  ch);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  j,  searchLimit,  ch);	  aughtExceptionHandler.handleMissingName(cs,    j,    searchLength,    ch);    	non-compiled	[CE]  <identifier>  expected	141	None	replace
456	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchLen,  ch);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchLen,  ch);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  j,  searchLen,  ch);	  aughtExceptionHandler.handleMissingName(cs,    j,    searchLength,    ch);    	non-compiled	[CE]  <identifier>  expected	141	None	replace
457	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
458	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
459	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
460	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i    +    1);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	3	None	replace
461	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i    +    1);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	3	None	replace
462	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(j    <    0    ||    searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	163	None	replace
463	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  searchChars[j  +  1]!=  cs.charAt(i  +  1)))  {  return  true;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
464	[BUG]  [BUGGY]  ||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
465	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	73	None	replace
466	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
467	[BUG]  [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
468	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
469	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  csLast  &&  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  csLast  &&  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]!=  ch)  {  if(i  >  csLast  &&  j  <  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    <    csLast    &&    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
470	[BUG]  [BUGGY]  if(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	154	None	replace
471	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	154	None	replace
472	[BUG]  [BUGGY]  if(i  >  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	154	None	replace
473	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  =  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  =  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  =  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	154	None	replace
474	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    ||    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
475	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  >=  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  >=  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]!=  ch)  {  if(i  >  0  ||  j  >=  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    ||    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
476	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  0)  {  return  true;  }	  if(i    >    0    ||    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
477	[BUG]  [BUGGY]  if(j  >  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0)  {  return  true;  }	  if(i    >    0    ||    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
478	[BUG]  [BUGGY]  cs.charAt(i  +  1,  j);  return  true;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  cs.charAt(i  +  1,  j);  return  true;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	cs.charAt(i  +  1,  j);  return  true;	  cs.charAt(i    +    1,    ch);    return    true;    	non-compiled	[CE]  <identifier>  expected	133	None	replace
479	[BUG]  [BUGGY]  if(i  >  csLast  &&  j  <  =  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast  &&  j  <  =  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast  &&  j  <  =  0)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    csLast    &&    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	165	None	replace
480	[BUG]  [BUGGY]  if(i  >  csLast  &&  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast  &&  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast  &&  j  <  0)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    csLast    &&    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	165	None	replace
481	[BUG]  [BUGGY]  if(i  +  1  <  csLast  &&  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  +  1  <  csLast  &&  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  +  1  <  csLast  &&  j  <  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
482	[BUG]  [BUGGY]  if(j  >  0  &&  j  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  &&  j  <  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  &&  j  <  searchLength)  {  return  true;  }	  if(j    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
483	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(i    >    0    ||    j    <    len)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	130	None	replace
484	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {	  if(i    >    0    ||    j    <    len)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	130	None	replace
485	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
486	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  =  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  =  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  =  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
487	[BUG]  [BUGGY]  if(i  >=  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >=  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >=  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    <    csLast    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	1	None	replace
488	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
489	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  5)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  5)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  5)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
490	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  6)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  6)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  6)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
491	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
492	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  0  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
493	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  true;  }	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
494	[BUG]  [BUGGY]  if(searchChars[j  +  1]!=  cs[j  +  1])  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]!=  cs[j  +  1])  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]!=  cs[j  +  1])  {  return  true;  }	  if(searchChars[j    +    1]!=    cs[j    +    1])    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
495	[BUG]  [BUGGY]  ||(searchChars[j  +  1]!=  cs[j  +  1]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j  +  1]!=  cs[j  +  1]))  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j  +  1]!=  cs[j  +  1]))  {  return  false;  }	  if(searchChars[j    +    1]!=    cs[j    +    1])    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
496	[BUG]  [BUGGY]  cs[j  +  1]  {  searchChars[j  +  1])  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  cs[j  +  1]  {  searchChars[j  +  1])  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	cs[j  +  1]  {  searchChars[j  +  1])  {  return  false;  }	  if(searchChars[j    +    1]    ==    cs[j    +    1])    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
497	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  =  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  =  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  =  searchLength)  {  return  false;  }	  if(j    >    0    ||    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
498	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  0)  {  return  false;  }	  if(j    >    0    ||    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
499	[BUG]  [BUGGY]  if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	55	None	replace
500	[BUG]  [BUGGY]  if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	55	None	replace
501	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
502	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  6)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  6)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  6)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
503	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	99	None	replace
504	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  0)  {  char  ch  =  cs.charAt(i  +  1);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	99	None	replace
505	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  return  false;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  return  false;	  if(searchChars[j    +    1]    ==    ch)return    false;    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
506	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLength)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
507	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  =  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  =  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  =  searchLength)  {  return  false;  }	  if(i    >    0    ||    j    >=    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
508	[BUG]  [BUGGY]  if(i  >=  csLast  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >=  csLast  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >=  csLast  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    <    csLast    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	72	None	replace
509	[BUG]  [BUGGY]  if(i  >  csLast  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    <    csLast    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	72	None	replace
510	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  len))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  len))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  len))  {  return  false;  }	  ||(i    >    0    &&    j    <    searchLength))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
511	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  5))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  5))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  5))  {  return  false;  }	  ||(i    >    0    &&    j    <    searchLength))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
512	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    	non-compiled	[CE]  <identifier>  expected	115	None	replace
513	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    	non-compiled	[CE]  <identifier>  expected	115	None	replace
514	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j  +  1]  ==  ch)  {  if(!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j  +  1]  ==  ch)  {  if(!found)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  if(searchChars[j  +  1]  ==  ch)  {  if(!found)  {  return  false;  }	  if(searchChars[j    +    1]    ==    ch)    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
515	[BUG]  [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  =  Character.MAX_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  =  Character.MAX_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  =  Character.MAX_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	78	None	replace
516	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
517	[BUG]  [BUGGY]  ||(j  <  0  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
518	[BUG]  [BUGGY]  if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit	  char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	143	None	replace
519	[BUG]  [BUGGY]  ||(j  <  0  &&  j  <  searchLength))  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0  &&  j  <  searchLength))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0  &&  j  <  searchLength))  {  return  true;	  ||(i    <    0    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
520	[BUG]  [BUGGY]  ||(i  >=  0  &&  j  <  searchLength))  {  return  true;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >=  0  &&  j  <  searchLength))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >=  0  &&  j  <  searchLength))  {  return  true;	  ||(i    <    0    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
521	[BUG]  [BUGGY]  char[]  searchChars  =  cs.charAt(i  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char[]  searchChars  =  cs.charAt(i  +  1);  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char[]  searchChars  =  cs.charAt(i  +  1);	  if(searchChars[j    +    1]!=    cs.charAt(i    +    1))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
522	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  =  0))  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  =  0))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  =  0))  {  return  true;	  ||(i    <    csLast    &&    j    <    0))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
523	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(i    >    0    ||    j    <    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	113	None	replace
524	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {	  if(i    >    0    ||    j    <    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	113	None	replace
525	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  searchLength);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  searchLength);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  searchLength);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	88	None	replace
526	[BUG]  [BUGGY]  if(i  <  searchLen  &&  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  searchLen  &&  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  searchLen  &&  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
527	[BUG]  [BUGGY]  ||(i  >=  csLast  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >=  csLast  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >=  csLast  &&  j  <  searchLast)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >>    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
528	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  if(i    >    0    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	144	None	replace
529	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {	  if(i    >    0    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	144	None	replace
530	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)	  if(i    >    0    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	144	None	replace
531	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  return	  if(i    >    0    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	144	None	replace
532	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	89	None	replace
533	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1)&&!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1)&&!found)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs.charAt(i  +  1)&&!found)  {  return  false;  }	  if(searchChars[j    +    1]    ==    cs.charAt(i    +    1)||!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
534	[BUG]  [BUGGY]  if(searchChars[j  +  1]!=  cs.charAt(i  +  1)||!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]!=  cs.charAt(i  +  1)||!found)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]!=  cs.charAt(i  +  1)||!found)  {  return  false;  }	  if(searchChars[j    +    1]    ==    cs.charAt(i    +    1)||!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
535	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)return  true;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)return  true;	  if(searchChars[j]    ==    ch)return    false;    }    	non-compiled	[CE]  <identifier>  expected	159	None	replace
536	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs[j  +  3])  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs[j  +  3])  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs[j  +  3])  {  return  true;  }	  ||    searchChars[j    +    1]    ==    cs[j    +    1])    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
537	[BUG]  [BUGGY]  ||(searchChars[j  +  1]!=  ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j  +  1]!=  ch))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j  +  1]!=  ch))  {  return  true;  }	  ||(searchChars[j    +    1]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
538	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	148	None	replace
539	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	148	None	replace
540	[BUG]  [BUGGY]  if(i  >=  csLast  &&  j  <  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >=  csLast  &&  j  <  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >=  csLast  &&  j  <  searchLast)  {  return  true;  }	  if(i    <    csLast    ||    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
541	[BUG]  [BUGGY]  if(j  <  csLast  ||  j  >  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  j  >  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  j  >  searchLast)  {  return  true;  }	  if(i    <    csLast    ||    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
542	[BUG]  [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false    	non-compiled	[CE]  <identifier>  expected	84	None	replace
543	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  =  Character.MAX_HIGH_SURROGATE)  {  return  false  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  =  Character.MAX_HIGH_SURROGATE)  {  return  false  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  =  Character.MAX_HIGH_SURROGATE)  {  return  false	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false    	non-compiled	[CE]  <identifier>  expected	84	None	replace
544	[BUG]  [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false    	non-compiled	[CE]  <identifier>  expected	84	None	replace
545	[BUG]  [BUGGY]  CharacterIterator  it  =  ts.iterator();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  CharacterIterator  it  =  ts.iterator();  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	CharacterIterator  it  =  ts.iterator();	  CharacterIterator    it    =    searchChars.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
546	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  6))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  6))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  6))  {  return  true;	  ||(i    >    0    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
547	[BUG]  [BUGGY]  if(i  <  searchLen  &&  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  searchLen  &&  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  searchLen  &&  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
548	[BUG]  [BUGGY]  if(j  <  0  ||  i  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  i  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  i  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
549	[BUG]  [BUGGY]  if(i  >=  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >=  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >=  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(i    <    csLast    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	31	None	replace
550	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  =  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  =  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  =  searchLast)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    <    csLast    &&    j    <    =    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	168	None	replace
551	[BUG]  [BUGGY]  if(i  >  0  ||  searchChars.length  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  searchChars.length  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  searchChars.length  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  if(j    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	145	None	replace
552	[BUG]  [BUGGY]  ||(j  <  0  &&  ch  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0  &&  ch  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0  &&  ch  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
553	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
554	[BUG]  [BUGGY]  if(j  <  csLast  ||  j  >=  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  j  >=  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  j  >=  searchLast)  {  return  true;  }	  if(i    <    csLast    ||    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
555	[BUG]  [BUGGY]  if(j  <  csLast  ||  j  <  searchLast)return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  j  <  searchLast)return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  j  <  searchLast)return  true;  }	  if(i    <    csLast    ||    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
556	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	164	None	replace
557	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	164	None	replace
558	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(searchChars[j    +    1]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
559	[BUG]  [BUGGY]  ||(j  <  0)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
560	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
561	[BUG]  [BUGGY]  if(j  <  0  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    0    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
562	[BUG]  [BUGGY]  ||(j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
563	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
564	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  j);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  j);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  j);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(i    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	32	None	replace
565	[BUG]  [BUGGY]  if(j  <  csLast  ||  j  >  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  j  >  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  j  >  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    >    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
566	[BUG]  [BUGGY]  if(j  <  =  0  ||  j  >  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  =  0  ||  j  >  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  =  0  ||  j  >  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    >    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
567	[BUG]  [BUGGY]  if(j  <  csLast  ||  j  >  MIN_HIGH_SURROGATE  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  j  >  MIN_HIGH_SURROGATE  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  j  >  MIN_HIGH_SURROGATE  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    ||    j    >    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
568	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  +  1  <  csLast  &&  j  <  =  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  +  1  <  csLast  &&  j  <  =  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  +  1  <  csLast  &&  j  <  =  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
569	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  &&  j  <  =  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  &&  j  <  =  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  &&  j  <  =  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
570	[BUG]  [BUGGY]  if(i  +  1  <  searchLength  &&  j  <  =  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  +  1  <  searchLength  &&  j  <  =  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  +  1  <  searchLength  &&  j  <  =  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
571	[BUG]  [BUGGY]  ||(j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
572	[BUG]  [BUGGY]  if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  &&  j  <  =  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch)	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch)    	non-compiled	[CE]  <identifier>  expected	114	None	replace
573	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  }	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    	non-compiled	[CE]  <identifier>  expected	115	None	replace
574	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    	non-compiled	[CE]  <identifier>  expected	115	None	replace
575	[BUG]  [BUGGY]  ||(j  <  0)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
576	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  =  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  =  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  =  searchLast)||(ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
577	[BUG]  [BUGGY]  if(j  >  0  ||  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
578	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  <  csLast  &&  j  <  =  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  <  csLast  &&  j  <  =  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  <  csLast  &&  j  <  =  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    <    csLast    &&    j    <    =    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
579	[BUG]  [BUGGY]  ||(searchChars[j  +  1]  ==  cs))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j  +  1]  ==  cs))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j  +  1]  ==  cs))  {  return  true;  }	  ||(searchChars[j    +    1]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
580	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  =  SearchLength.MAX_VALUE))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  =  SearchLength.MAX_VALUE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  =  SearchLength.MAX_VALUE))  {  return  true;	  ||(i    >    0    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
581	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLen)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
582	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
583	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs[i  +  1])  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  cs[i  +  1])  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs[i  +  1])  {  return  false;  }	  if(searchChars[j    +    1]    ==    cs[j    +    1])    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
584	[BUG]  [BUGGY]  if(i  >  csLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	143	None	replace
585	[BUG]  [BUGGY]  if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	143	None	replace
586	[BUG]  [BUGGY]  if(searchChars[i]  ==  cs.charAt(i  +  1))  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[i]  ==  cs.charAt(i  +  1))  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[i]  ==  cs.charAt(i  +  1))  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	143	None	replace
587	[BUG]  [BUGGY]  if(i  >  csLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(i    <    csLast    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	31	None	replace
588	[BUG]  [BUGGY]  ||(j  <  0)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0)||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
589	[BUG]  [BUGGY]  ||(j  <  0)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
590	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  =  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  =  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  =  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
591	[BUG]  [BUGGY]  ||  searchChars[j  +  i]  ==  cs.charAt(i  +  1))  {  if(!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  i]  ==  cs.charAt(i  +  1))  {  if(!found)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  i]  ==  cs.charAt(i  +  1))  {  if(!found)  {  return  false;  }	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
592	[BUG]  [BUGGY]  ||(i  <  searchLength  &&  j  <  =  searchLast))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLength  &&  j  <  =  searchLast))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLength  &&  j  <  =  searchLast))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
593	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  searchLast))  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  searchLast))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  searchLast))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
594	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  =  SearchLength.MAX_VALUE))  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  =  SearchLength.MAX_VALUE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  =  SearchLength.MAX_VALUE))  {  return  false;	  ||(i    >    0    &&    j    <    searchLength))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
595	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  0)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
596	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  0)return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  0)return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  0)return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
597	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  =  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  =  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  =  0)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
598	[BUG]  [BUGGY]  if(i  >  csLast)  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast)  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast)  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	2	None	replace
599	[BUG]  [BUGGY]  if(i  >  csLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	2	None	replace
600	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	2	None	replace
601	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLast)  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLast)  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLast)  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	2	None	replace
602	[BUG]  [BUGGY]  if(i  >  csLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    <    csLast    ||    j    <    searchLen)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	72	None	replace
603	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  j);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  j);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  j);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	88	None	replace
604	[BUG]  [BUGGY]  if(i  >  0  ||  searchChars.length  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  searchChars.length  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  searchChars.length  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	88	None	replace
605	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(ch,  searchChars[j  +  1,  cs.charAt(i  +  1)]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(ch,  searchChars[j  +  1,  cs.charAt(i  +  1)]);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(ch,  searchChars[j  +  1,  cs.charAt(i  +  1)]);	  aughtExceptionHandler.handleMissingName(ch,    searchChars[j    +    1]);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
606	[BUG]  [BUGGY]  ||(j  >  0  &&  j  <  searchLength))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  >  0  &&  j  <  searchLength))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  >  0  &&  j  <  searchLength))  {  return  false;  }	  ||(i    >    0    &&    j    <    searchLength))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
607	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  =  SearchLength.MAX_VALUE))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  =  SearchLength.MAX_VALUE))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  =  SearchLength.MAX_VALUE))  {  return  false;  }	  ||(i    >    0    &&    j    <    searchLength))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
608	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	96	None	replace
609	[BUG]  [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	96	None	replace
610	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	96	None	replace
611	[BUG]  [BUGGY]  if(j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
612	[BUG]  [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]  ==  cs.charAt(i  +  2))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }	  ||    searchChars[j    +    1]    ==    cs.charAt(i    +    1))    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
613	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchChars,  ch);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchChars,  ch);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  i  +  1,  searchChars,  ch);	  aughtExceptionHandler.handleMissingName(cs,    i,    searchLength,    ch);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
614	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i,  searchChars[j],  ch);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  i,  searchChars[j],  ch);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  i,  searchChars[j],  ch);	  aughtExceptionHandler.handleMissingName(cs,    i,    searchLength,    ch);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
615	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  searchLength)return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  searchLength)return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  searchLength)return  true;	  if(i    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
616	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  searchLength)return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  searchLength)return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  searchLength)return  true;  }	  if(i    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
617	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  cs)  {  return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs)  {  return  false;  }	  if(searchChars[j    +    1]    ==    cs)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
618	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs)return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  cs)return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs)return  true;  }	  if(searchChars[j    +    1]    ==    cs)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
619	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
620	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
621	[BUG]  [BUGGY]  ||(searchChars[j  +  1]  ==  cs[j  +  3]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j  +  1]  ==  cs[j  +  3]))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j  +  1]  ==  cs[j  +  3]))  {  return  true;  }	  ||(searchChars[j    +    1]    ==    cs[j    +    1]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
622	[BUG]  [BUGGY]  ||(searchChars[j]  ==  ch))  {  return  null;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(searchChars[j]  ==  ch))  {  return  null;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(searchChars[j]  ==  ch))  {  return  null;  }	  ||(searchChars[j]    ==    ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
623	[BUG]  [BUGGY]  ||(j  <  0  &&  ch  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0  &&  ch  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0  &&  ch  <  =  Character.MAX_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
624	[BUG]  [BUGGY]  if(i  <  csLast  ||  j  <  =  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  ||  j  <  =  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  ||  j  <  =  searchLast)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    =    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
625	[BUG]  [BUGGY]  if(i  >  csLast  &&  j  <  =  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast  &&  j  <  =  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast  &&  j  <  =  searchLast)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    =    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
626	[BUG]  [BUGGY]  if(i  >  0  ||  searchChars.length  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  searchChars.length  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  searchChars.length  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return	  if(j    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	131	None	replace
627	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  continue  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  continue  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  continue	  if(j    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	131	None	replace
628	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  searchLength)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    0    &&    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
629	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  searchLength)return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  searchLength)return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  searchLength)return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    0    &&    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
630	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
631	[BUG]  [BUGGY]  if(searchChars[j  +  1]!=  cs[j  +  1])return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]!=  cs[j  +  1])return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]!=  cs[j  +  1])return  true;  }	  if(searchChars[j    +    1]    ==    cs[j    +    1])return    false;    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
632	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  >  0  &&  j  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  >  0  &&  j  <  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  >  0  &&  j  <  searchLength)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    &&    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
633	[BUG]  [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	78	None	replace
634	[BUG]  [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;	  ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
635	[BUG]  [BUGGY]  ||  j  <  len  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  j  <  len  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  j  <  len  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;	  ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
636	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
637	[BUG]  [BUGGY]  ||(j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
638	[BUG]  [BUGGY]  ||(j  <  0  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0  &&  ch  >=  Character.MAX_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MAX_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
639	[BUG]  [BUGGY]  if(i  +  1  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  +  1  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  +  1  <  searchLen  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
640	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  if(i  +  1  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HI  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  if(i  +  1  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HI  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  if(i  +  1  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HI	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
641	[BUG]  [BUGGY]  if(searchChars[j  +  1]!=  cs[j  +  1])return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]!=  cs[j  +  1])return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]!=  cs[j  +  1])return  false;  }	  if(searchChars[j    +    1]!=    cs[j    +    1])    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
642	[BUG]  [BUGGY]  cs.charAt(j  +  1,  ch);  return  true;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  cs.charAt(j  +  1,  ch);  return  true;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	cs.charAt(j  +  1,  ch);  return  true;	  cs.charAt(i    +    1,    ch);    return    true;    	non-compiled	[CE]  <identifier>  expected	133	None	replace
643	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(ch,  j,  searchLength,  cs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(ch,  j,  searchLength,  cs);  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(ch,  j,  searchLength,  cs);	  aughtExceptionHandler.handleMissingName(cs,    j,    searchLength,    ch);    	non-compiled	[CE]  <identifier>  expected	141	None	replace
644	[BUG]  [BUGGY]  if(j  >  0  ||  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	148	None	replace
645	[BUG]  [BUGGY]  ||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    true;    }    else    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
646	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  =  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  =  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  =  searchLength)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    0    ||    j    <    =    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
647	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  =  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  =  searchLength)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  =  searchLength)  {  return  true;  }	  if(j    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
648	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  searchLen)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  searchLen)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  searchLen)  {  return  true;  }	  if(j    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
649	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  if(!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  if(!found)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  if(!found)  {  return  false;  }	  if(searchChars[j    +    1]    ==    ch)    {    if(!found)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
650	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  <  csLast  &&  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  <  csLast  &&  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  <  csLast  &&  j  <  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    <    csLast    &&    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
651	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs)return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j  +  1]  ==  cs)return  false;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs)return  false;  }	  if(searchChars[j    +    1]    ==    ch)return    false;    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
652	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  &&  j  <  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  &&  j  <  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  &&  j  <  searchLast)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
653	[BUG]  [BUGGY]  if(i  +  1  <  csLast  ||  j  <  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  +  1  <  csLast  ||  j  <  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  +  1  <  csLast  ||  j  <  searchLast)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
654	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  ||  j  <  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  ||  j  <  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  if(i  +  1  <  csLast  ||  j  <  searchLast)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    +    1    <    csLast    &&    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
655	[BUG]  [BUGGY]  ||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
656	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  searchLength)return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  searchLength)return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  searchLength)return  false;  }	  if(j    >    0    ||    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
657	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  searchLength)return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  searchLength)return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  searchLength)return  false;	  if(j    >    0    ||    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
658	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  searchLen)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  searchLen)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  searchLen)  {  return  false;  }	  if(j    >    0    ||    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
659	[BUG]  [BUGGY]  if(j  >  0  ||  j  >=  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  >=  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  >=  searchLength)  {  return  false;  }	  if(i    >    0    ||    j    >=    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
660	[BUG]  [BUGGY]  if(j  >  0  ||  j  >=  searchLength)return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  >=  searchLength)return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  >=  searchLength)return  false;  }	  if(i    >    0    ||    j    >=    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
661	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
662	[BUG]  [BUGGY]  ||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  0  &&  searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  false;	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs.charAt(i    +    1)))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
663	[BUG]  [BUGGY]  try  {  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  try  {  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	try  {  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
664	[BUG]  [BUGGY]  try  {  if(i  >  0  ||  j  <  searchLast  ||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  try  {  if(i  >  0  ||  j  <  searchLast  ||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	try  {  if(i  >  0  ||  j  <  searchLast  ||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
665	[BUG]  [BUGGY]  try  {  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HI  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  try  {  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HI  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	try  {  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HI	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
666	[BUG]  [BUGGY]  try  {  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  try  {  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	try  {  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
667	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  =  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  =  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  =  0)  {  return  true;  }	  if(i    >    0    ||    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
668	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	73	None	replace
669	[BUG]  [BUGGY]  ||(i  >  0  &&  j  <  =  SearchLength.MAX_VALUE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  >  0  &&  j  <  =  SearchLength.MAX_VALUE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  >  0  &&  j  <  =  SearchLength.MAX_VALUE))  {  return  true;  }	  ||(i    >    0    &&    j    <    searchLength))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
670	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  if(i  >  0  &&  j  <  searchLength)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    &&    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
671	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  >  0  &&  j  <  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  >  0  &&  j  <  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  >  0  &&  j  <  searchLength)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    &&    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
672	[BUG]  [BUGGY]  ||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs[j  +  1]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs[j  +  1]))  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  searchLength  &&  searchChars[j  +  1]  ==  cs[j  +  1]))  {  return  true;  }	  ||(i    <    searchLength    &&    searchChars[j    +    1]    ==    cs[j    +    1]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
673	[BUG]  [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  searchLast  &&  j  <  =  Character.MIN_HIGH_SURROGATE)||  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast)||    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
674	[BUG]  [BUGGY]  ||(j  <  0)||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0)||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0)||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
675	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  =  searchLength))  {  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  =  searchLength))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  =  searchLength))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
676	[BUG]  [BUGGY]  ||(j  <  csLast  &&  ch  <  =  SearchLength.MAX_VALUE))  {  return  true;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  csLast  &&  ch  <  =  SearchLength.MAX_VALUE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  csLast  &&  ch  <  =  SearchLength.MAX_VALUE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
677	[BUG]  [BUGGY]  ||(j  <  csLast  &&  ch  <  =  searchLength))  {  return  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  csLast  &&  ch  <  =  searchLength))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  csLast  &&  ch  <  =  searchLength))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLength))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
678	[BUG]  [BUGGY]  if(i  <  csLast  ||  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  ||  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  ||  j  <  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    <    csLast    &&    j    <    0    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
679	[BUG]  [BUGGY]  if(j  >  0  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
680	[BUG]  [BUGGY]  ||(j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  }	  ||(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
681	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  len)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {	  if(i    >    0    ||    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j    +    1]    ==    ch)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
682	[BUG]  [BUGGY]  if(j  >  0  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  true;  }	  if(i    >    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	146	None	replace
683	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    ||    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
684	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  0)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    ||    j    <    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
685	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchLast,  ch);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchLast,  ch);  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  j,  searchLast,  ch);	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
686	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  [Delete]  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	[Delete]	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
687	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchLength,  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchLength,  4);  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  j,  searchLength,  4);	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MAX_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
688	[BUG]  [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  false  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  false  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  false	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false    	non-compiled	[CE]  <identifier>  expected	84	None	replace
689	[BUG]  [BUGGY]  if(j!=  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  false  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j!=  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  false  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j!=  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  false	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false    	non-compiled	[CE]  <identifier>  expected	84	None	replace
690	[BUG]  [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  false	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false    	non-compiled	[CE]  <identifier>  expected	84	None	replace
691	[BUG]  [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  return  false	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false    	non-compiled	[CE]  <identifier>  expected	84	None	replace
692	[BUG]  [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  j);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  j);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  char  ch  =  cs.charAt(i  +  1,  j);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	98	None	replace
693	[BUG]  [BUGGY]  if(i  >  0  ||  searchChars.length  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  searchChars.length  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  searchChars.length  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	98	None	replace
694	[BUG]  [BUGGY]  if(!Character.isDigit(ch))  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(!Character.isDigit(ch))  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(!Character.isDigit(ch))  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	55	None	replace
695	[BUG]  [BUGGY]  if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	55	None	replace
696	[BUG]  [BUGGY]  if(searchChars[i]  ==  cs.charAt(i  +  1))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[i]  ==  cs.charAt(i  +  1))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[i]  ==  cs.charAt(i  +  1))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	55	None	replace
697	[BUG]  [BUGGY]  if(searchChars[i]  ==  cs.charAt(i))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[i]  ==  cs.charAt(i))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[i]  ==  cs.charAt(i))  {  CHAR  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return	  CHAR    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit(ch))    {    return    	non-compiled	[CE]  <identifier>  expected	55	None	replace
698	[BUG]  [BUGGY]  ||(j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  searchLast  &&  ch  <  =  Character.MIN_HIGH_SURROGATE))  {  return  false;	  ||(i    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
699	[BUG]  [BUGGY]  try  {  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  if(i  <  csLast  &&  j  <  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  try  {  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  if(i  <  csLast  &&  j  <  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	try  {  if(i  >  0  ||  j  <  searchLast  ||  ch  >=  Character.MAX_HIGH_SURROGATE)  {  if(i  <  csLast  &&  j  <	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
700	[BUG]  [BUGGY]  if(j  <  0  ||  j  >  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  >  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  >  0  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }	  if(j    <    0    ||    j    <    searchLast    ||    ch    >=    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
701	[BUG]  [BUGGY]  if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[i  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }	  if(searchChars[j    +    1]!=    cs.charAt(i    +    1))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
702	[BUG]  [BUGGY]  if(j  <  0  ||  j  >=  csLast)  {  if(i  >  0  ||  j  <  searchLength)return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  >=  csLast)  {  if(i  >  0  ||  j  <  searchLength)return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  >=  csLast)  {  if(i  >  0  ||  j  <  searchLength)return  true;  }	  if(j    <    0    ||    j    >    csLast)    {    if(i    >    0    ||    j    <    searchLength)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
703	[BUG]  [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  ==  0)  {  if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch!=  Character.MAX_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	80	None	replace
704	[BUG]  [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch  ||  j  <  searchLast  ||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0)  {  if(searchChars[j]  ==  ch  ||  j  <  searchLast  ||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0)  {  if(searchChars[j]  ==  ch  ||  j  <  searchLast  ||  ch!=  Character.MIN_HIGH_SURROGATE)  {  return  true	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true    	non-compiled	[CE]  <identifier>  expected	80	None	replace
705	[BUG]  [BUGGY]  ||(j  <  0)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(j  <  0)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(j  <  0)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
706	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  =  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  =  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  =  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
707	[BUG]  [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||(i  <  csLast  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||(i  <  csLast  &&  j  <  searchLast)||(ch  >=  Character.MIN_HIGH_SURROGATE))  {  return  true;  }	  ||(i    <    csLast    &&    j    <    searchLast)||(ch    >=    Character.MIN_HIGH_SURROGATE))    {    return    true;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
708	[BUG]  [BUGGY]  if(i  >  csLast  ||  j  <  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast  ||  j  <  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast  ||  j  <  searchLast)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    csLast    &&    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	165	None	replace
709	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  >  csLast  &&  j  <  =  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)  {  if(i  >  csLast  &&  j  <  =  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  if(i  >  csLast  &&  j  <  =  searchLast)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    csLast    &&    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	165	None	replace
710	[BUG]  [BUGGY]  if(i  >  csLast  ||  j  <  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  csLast  ||  j  <  0)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  csLast  ||  j  <  0)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    csLast    &&    j    <    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	165	None	replace
711	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchLength);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  aughtExceptionHandler.handleMissingName(cs,  j,  searchLength);  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	aughtExceptionHandler.handleMissingName(cs,  j,  searchLength);	  if(i    >    0)    {    if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch!=    Character.MIN_HIGH_SURROGATE)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
712	[BUG]  [BUGGY]  if(j  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	89	None	replace
713	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  =  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	89	None	replace
714	[BUG]  [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  searchChars[j]!=  ch)  {  if(i  >  0  ||  j  <  0)  {  return  false;  }	  if(searchChars[j]!=    ch)    {    if(i    >    0    ||    j    <    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
715	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  0  ||  searchLen  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  0  ||  searchLen  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  0  ||  searchLen  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	99	None	replace
716	[BUG]  [BUGGY]  if(j  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return	  if(i    >    0    ||    j    <    0)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    	non-compiled	[CE]  <identifier>  expected	99	None	replace
717	[BUG]  [BUGGY]  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	150	None	replace
718	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLast  ||  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HI  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLast  ||  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HI  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLast  ||  ch  <  =  Character.MAX_HIGH_SURROGATE)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  Character.MIN_HI	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	150	None	replace
719	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  0)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLast  ||  ch  <  =  Character.MIN_HIGH_SURROGATE)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  <  =  0)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    <    csLast    &&    j    <    searchLast    &&    ch    <    =    Character.MIN_HIGH_SURROGATE)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	150	None	replace
720	[BUG]  [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(!Character.isDigit  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(!Character.isDigit  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(!Character.isDigit	  if(i    >    0    &&    j    <    searchLength)    {    char    ch    =    cs.charAt(i);    for(int    j    =    0;    j    <    searchLength;    j++)    {    if(!Character.isDigit    	non-compiled	[CE]  <identifier>  expected	117	None	replace
721	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  searchLength)return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  searchLength)return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  searchLength)return  false;  }	  if(i    >    0    ||    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
722	[BUG]  [BUGGY]  if(j  >  0  ||  j  <  searchLength)return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  >  0  ||  j  <  searchLength)return  false;  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  >  0  ||  j  <  searchLength)return  false;	  if(i    >    0    ||    j    <    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
723	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)return  null;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(searchChars[j]  ==  ch)return  null;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)return  null;  }	  if(searchChars[j]    ==    ch)return    true;    }    	non-compiled	[CE]  <identifier>  expected	160	None	replace
724	[BUG]  [BUGGY]  ||  searchChars[j  +  1]!=  cs[j  +  1])  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  ||  searchChars[j  +  1]!=  cs[j  +  1])  {  return  true;  }  [BUGGY]      }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	||  searchChars[j  +  1]!=  cs[j  +  1])  {  return  true;  }	  ||    searchChars[j    +    1]    ==    cs[j    +    1])    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
725	[BUG]  [BUGGY]  if(j  <  0  ||  j  <  =  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  0  ||  j  <  =  searchLength)  {  return  false;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  0  ||  j  <  =  searchLength)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    if(i    >    0    ||    j    <    =    searchLength)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	158	None	replace
726	[BUG]  [BUGGY]  if(j  <  csLast  ||  j  >  0)  {  if(i  <  csLast  &&  j  <  =  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {        [BUGGY]  if(j  <  csLast  ||  j  >  0)  {  if(i  <  csLast  &&  j  <  =  searchLast)  {  return  true;  }  [BUGGY]      return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(j  <  csLast  ||  j  >  0)  {  if(i  <  csLast  &&  j  <  =  searchLast)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    if(i    <    csLast    &&    j    <    =    searchLast)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	168	None	replace
