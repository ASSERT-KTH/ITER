bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (searchChars  ==  null  ||  cs  ==  null)  {  if  (searchChars  ==  null  ||  cs  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if  (searchChars  ==  null  ||  cs  ==  null)  {  if  (searchChars  ==  null  ||  cs  ==  null)  {  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if    (searchChars    ==    null    ||    cs    ==    null)    {    if  (searchChars  ==  null  ||  cs  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
2	[BUG]  [BUGGY]  if  (searchChars  ==  null  ||  cs  ==  null)  {  if  (searchChars  ==  null  ||  cs!=  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if  (searchChars  ==  null  ||  cs  ==  null)  {  if  (searchChars  ==  null  ||  cs!=  null)  {  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if    (searchChars    ==    null    ||    cs    ==    null)    {    if  (searchChars  ==  null  ||  cs!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
3	[BUG]  [BUGGY]  if  (searchChars  ==  null  ||  cs  ==  null)  {  If  (searchChars  ==  null  ||  cs  ==  null)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if  (searchChars  ==  null  ||  cs  ==  null)  {  If  (searchChars  ==  null  ||  cs  ==  null)  {  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if    (searchChars    ==    null    ||    cs    ==    null)    {    If  (searchChars  ==  null  ||  cs  ==  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
4	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char  ch  =  cs.charAt(i);  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	char  ch  =  cs.charAt(i);	      char    ch    =    cs.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  char  ch  =  cs.charAt(searchChars.length);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char  ch  =  cs.charAt(searchChars.length);  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	char  ch  =  cs.charAt(searchChars.length);	      char    ch    =    cs.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  char  ch  =  searchChars.charAt(0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char  ch  =  searchChars.charAt(0);  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	char  ch  =  searchChars.charAt(0);	      char    ch    =    cs.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  if  (searchChars  ==  null  ||  searchChars  ==  null)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if  (searchChars  ==  null  ||  searchChars  ==  null)  {  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if  (searchChars  ==  null  ||  searchChars  ==  null)  {	  if    (searchChars    ==    null    ||    cs    ==    null)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
8	[BUG]  [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(cs    ==    null    ||    searchChars    ==    null)    {    return    true;    }    if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	10	None	add
9	[BUG]  [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  if(cs  ==  null  ||  searchChars!=  null)  {  return  true;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  if(cs  ==  null  ||  searchChars!=  null)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(cs    ==    null    ||    searchChars    ==    null)    {    return    true;    }    if(cs  ==  null  ||  searchChars!=  null)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	10	None	add
10	[BUG]  [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  if(cs!=  null  ||  searchChars  ==  null)  {  return  true;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  if(cs!=  null  ||  searchChars  ==  null)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(cs    ==    null    ||    searchChars    ==    null)    {    return    true;    }    if(cs!=  null  ||  searchChars  ==  null)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	10	None	add
11	[BUG]  [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  If(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  If(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(cs    ==    null    ||    searchChars    ==    null)    {    return    true;    }    If(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	10	None	add
12	[BUG]  [BUGGY]      if(searchChars  ==  null)  {  return  true;  }  if(searchChars  ==  null)  {  return  true;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(searchChars  ==  null)  {  return  true;  }  if(searchChars  ==  null)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(searchChars    ==    null)    {    return    true;    }    if(searchChars  ==  null)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	12	None	add
13	[BUG]  [BUGGY]      if(searchChars  ==  null)  {  return  true;  }  if(searchChars!=  null)  {  return  true;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(searchChars  ==  null)  {  return  true;  }  if(searchChars!=  null)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(searchChars    ==    null)    {    return    true;    }    if(searchChars!=  null)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	12	None	add
14	[BUG]  [BUGGY]      if(searchChars  ==  null)  {  return  true;  }  If(searchChars  ==  null)  {  return  true;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(searchChars  ==  null)  {  return  true;  }  If(searchChars  ==  null)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(searchChars    ==    null)    {    return    true;    }    If(searchChars  ==  null)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	12	None	add
15	[BUG]  [BUGGY]      if(searchChars  ==  null)  {  return  true;  }  if(searchChars  >=  null)  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(searchChars  ==  null)  {  return  true;  }  if(searchChars  >=  null)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(searchChars    ==    null)    {    return    true;    }    if(searchChars  >=  null)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	12	None	add
16	[BUG]  [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(cs    ==    null    ||    searchChars    ==    null)    {    return    false;    }    if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
17	[BUG]  [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  if(cs  ==  null  ||  searchChars!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  if(cs  ==  null  ||  searchChars!=  null)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(cs    ==    null    ||    searchChars    ==    null)    {    return    false;    }    if(cs  ==  null  ||  searchChars!=  null)  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
18	[BUG]  [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  if(cs!=  null  ||  searchChars  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  if(cs!=  null  ||  searchChars  ==  null)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(cs    ==    null    ||    searchChars    ==    null)    {    return    false;    }    if(cs!=  null  ||  searchChars  ==  null)  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
19	[BUG]  [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  If(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  If(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(cs    ==    null    ||    searchChars    ==    null)    {    return    false;    }    If(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
20	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  true;  }  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  true;  }  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  }  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  }  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  ||(searchChars  ==  null  &&  searchChars.length  >  0)||(searchChars.length  >  0))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  ||(searchChars  ==  null  &&  searchChars.length  >  0)||(searchChars.length  >  0))  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	||(searchChars  ==  null  &&  searchChars.length  >  0)||(searchChars.length  >  0))  {  return  false;  }	      if(searchChars    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
25	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  cs.length()  ==  0)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||  cs.length()  ==  0)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null  ||  cs.length()  ==  0)  {  return  true;  }	      if(cs    ==    null    ||    searchChars    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(searchChars);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char[]  searchChars  =  cs.getChars(searchChars);  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	char[]  searchChars  =  cs.getChars(searchChars);	      char[]    searchChars    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getSequenceChars();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char[]  searchChars  =  cs.getSequenceChars();  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	char[]  searchChars  =  cs.getSequenceChars();	      char[]    searchChars    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char[]  searchChars  =  cs.getString();  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	char[]  searchChars  =  cs.getString();	      char[]    searchChars    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  if(cs  ==  null  ||  searchChars  ==  null)return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(cs  ==  null  ||  searchChars  ==  null)return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(cs  ==  null  ||  searchChars  ==  null)return  false;  }	      if(cs    ==    null    ||    searchChars    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  cs.length()  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||  cs.length()  ==  0)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null  ||  cs.length()  ==  0)  {  return  false;  }	      if(cs    ==    null    ||    searchChars    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  int  searchLen  =  cs.length;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  cs.length;  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	int  searchLen  =  cs.length;	      int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
32	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  searchChars.length  -  1;  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	int  searchLen  =  searchChars.length  -  1;	      int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  searchChars.length  -  2;  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	int  searchLen  =  searchChars.length  -  2;	      int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  int  searchLen  =  this.searchChars.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  this.searchChars.length;  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	int  searchLen  =  this.searchChars.length;	      int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
35	[BUG]  [BUGGY]      if(searchChars  ==  null)  {  return  false;  }  if(searchChars  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(searchChars  ==  null)  {  return  false;  }  if(searchChars  ==  null)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(searchChars    ==    null)    {    return    false;    }    if(searchChars  ==  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
36	[BUG]  [BUGGY]      if(searchChars  ==  null)  {  return  false;  }  if(searchChars!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(searchChars  ==  null)  {  return  false;  }  if(searchChars!=  null)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(searchChars    ==    null)    {    return    false;    }    if(searchChars!=  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
37	[BUG]  [BUGGY]      if(searchChars  ==  null)  {  return  false;  }  If(searchChars  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(searchChars  ==  null)  {  return  false;  }  If(searchChars  ==  null)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(searchChars    ==    null)    {    return    false;    }    If(searchChars  ==  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
38	[BUG]  [BUGGY]      if(searchChars  ==  null)  {  return  false;  }  if(searchChars  >=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(searchChars  ==  null)  {  return  false;  }  if(searchChars  >=  null)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(searchChars    ==    null)    {    return    false;    }    if(searchChars  >=  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
39	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  searchChars.length();  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	int  searchLen  =  searchChars.length();	      int    searchLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
40	[BUG]  [BUGGY]  int  searchLen  =  cs.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  cs.length()  +  searchChars.length;  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	int  searchLen  =  cs.length()  +  searchChars.length;	      int    searchLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
41	[BUG]  [BUGGY]  int  searchLen  =  cs.length()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  cs.length()  +  1;  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	int  searchLen  =  cs.length()  +  1;	      int    searchLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
42	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char  ch  =  cs.charAt(j);  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	char  ch  =  cs.charAt(j);	      char    ch    =    cs.charAt(searchLen);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  ||(searchChars  ==  null  &&  searchChars.length  >  0)||(cs.charAt(searchChars.length  -  1)!=  '/'))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  ||(searchChars  ==  null  &&  searchChars.length  >  0)||(cs.charAt(searchChars.length  -  1)!=  '/'))  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	||(searchChars  ==  null  &&  searchChars.length  >  0)||(cs.charAt(searchChars.length  -  1)!=  '/'))  {  return  true;  }	      if(searchChars    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
44	[BUG]  [BUGGY]  ||(searchChars  ==  null  &&  searchChars.length  >  0)||(cs.charAt(searchChars.length  -  1)  ==  '/'))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  ||(searchChars  ==  null  &&  searchChars.length  >  0)||(cs.charAt(searchChars.length  -  1)  ==  '/'))  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	||(searchChars  ==  null  &&  searchChars.length  >  0)||(cs.charAt(searchChars.length  -  1)  ==  '/'))  {  return  true;  }	      if(searchChars    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
45	[BUG]  [BUGGY]  int  csLen  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  csLen  =  searchChars.length();  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	int  csLen  =  searchChars.length();	      int    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  char  csLen  =  cs.length();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char  csLen  =  cs.length();  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	char  csLen  =  cs.length();	      int    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
47	[BUG]  [BUGGY]  int  csLen  =  cs.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  csLen  =  cs.length()  +  searchChars.length;  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	int  csLen  =  cs.length()  +  searchChars.length;	      int    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  Integer  csLen  =  cs.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  Integer  csLen  =  cs.length();  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	Integer  csLen  =  cs.length();	      int    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  if(cs!=  null  ||  searchChars  ==  null)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(cs!=  null  ||  searchChars  ==  null)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(cs!=  null  ||  searchChars  ==  null)  {  return  true;  }	      if(cs    ==    null    ||    searchChars    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
50	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  return  true;  }	      if(searchChars    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
51	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  0)  {  return  true;  }	      if(searchChars    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
52	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  return  false;  }	      if(searchChars    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
53	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  0)  {  return  false;  }	      if(searchChars    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
54	[BUG]  [BUGGY]  if(cs!=  null  ||  searchChars  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(cs!=  null  ||  searchChars  ==  null)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(cs!=  null  ||  searchChars  ==  null)  {  return  false;  }	      if(cs    ==    null    ||    searchChars    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  int  csLen  =  searchChars.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  csLen  =  searchChars.length;  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	int  csLen  =  searchChars.length;	      int    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
56	[BUG]  [BUGGY]  char  ch  =  cs.charAt(0,  searchChars.length);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char  ch  =  cs.charAt(0,  searchChars.length);  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	char  ch  =  cs.charAt(0,  searchChars.length);	      char    ch    =    cs.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
57	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getSearchChars();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char[]  searchChars  =  cs.getSearchChars();  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	char[]  searchChars  =  cs.getSearchChars();	      char[]    searchChars    =    cs.getChars();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  searchChars.length  +  1;  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	int  searchLen  =  searchChars.length  +  1;	      int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
59	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs[i];  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs[i];  }  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs[i];  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
61	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  false;  }  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
62	[BUG]  [BUGGY]      if(searchChars  ==  null)  {  return  false;  }  if(searchChars  {  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(searchChars  ==  null)  {  return  false;  }  if(searchChars  {  null)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(searchChars    ==    null)    {    return    false;    }    if(searchChars  {  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
63	[BUG]  [BUGGY]  if  (searchChars  ==  null  ||  cs  ==  null)  {  if  (searchChars!=  null  ||  cs  ==  null)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if  (searchChars  ==  null  ||  cs  ==  null)  {  if  (searchChars!=  null  ||  cs  ==  null)  {  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if    (searchChars    ==    null    ||    cs    ==    null)    {    if  (searchChars!=  null  ||  cs  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
64	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  cs.length  ==  0)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||  cs.length  ==  0)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null  ||  cs.length  ==  0)  {  return  true;  }	      if(cs    ==    null    ||    searchChars    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
65	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  return  false;  }	      if(searchChars    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
66	[BUG]  [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  if(cs  {  null  ||  searchChars  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  if(cs  {  null  ||  searchChars  ==  null)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(cs    ==    null    ||    searchChars    ==    null)    {    return    false;    }    if(cs  {  null  ||  searchChars  ==  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
67	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  cs.length  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||  cs.length  ==  0)  {  return  false;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null  ||  cs.length  ==  0)  {  return  false;  }	      if(cs    ==    null    ||    searchChars    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
69	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
70	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ' "')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ' "')  {  return  false;  }  [BUGGY]    return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ' "')  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
71	[BUG]  [BUGGY]  char  ch  =  cs.charAt(index);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char  ch  =  cs.charAt(index);  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	char  ch  =  cs.charAt(index);	      char    ch    =    cs.charAt(searchLen);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
72	[BUG]  [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  if(cs  {  null  ||  searchChars  ==  null)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  if(cs  {  null  ||  searchChars  ==  null)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(cs    ==    null    ||    searchChars    ==    null)    {    return    true;    }    if(cs  {  null  ||  searchChars  ==  null)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  type	10	None	add
73	[BUG]  [BUGGY]      if(searchChars  ==  null)  {  return  true;  }  if(searchChars  {  null)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]      if(searchChars  ==  null)  {  return  true;  }  if(searchChars  {  null)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	        if(searchChars    ==    null)    {    return    true;    }    if(searchChars  {  null)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
74	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  return  true;  }  [BUGGY]    if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  return  true;  }	      if(searchChars    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
