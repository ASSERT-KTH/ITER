bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]  if  (searchChars  ==  null  ||  cs  ==  null)  {  [BUGGY]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	add	if  (searchChars  ==  null  ||  cs  ==  null)  {	if  (cs  ==  null  ||  searchChars  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	1	10	replace
2	[BUG]  [BUGGY]  if  (searchChars  ==  null  ||  cs  ==  null)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]  if  (searchChars  ==  null  ||  cs  ==  null)  {  [BUGGY]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	if  (searchChars  ==  null  ||  cs  ==  null)  {	if  (cs  ==  null  ||  searchChars  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	1	10	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    [BUGGY]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	  	if  (cs  ==  null  ||  searchChars  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]    int  csLen  =  cs.length();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    int  csLen  =  cs.length();  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	    int  csLen  =  cs.length();		non-compiled	[CE]  illegal  start  of  type	2	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	add	    if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	2	11	add
6	[BUG]  [BUGGY]    if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	    if(cs  ==  null  ||  searchChars  ==  null)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	2	11	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    if(searchChars  ==  null)  {  return  false;  }  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	add	    if(searchChars  ==  null)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	2	11	add
8	[BUG]  [BUGGY]    if(searchChars  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    if(searchChars  ==  null)  {  return  false;  }  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	    if(searchChars  ==  null)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	2	11	add
9	[BUG]  [BUGGY]    char[]  searchChars  =  cs.getChars();  [CE]  variable  searchChars  is  already  defined  in  method  containsNone(CharSequence,char[])  [FE]          AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    char[]  searchChars  =  cs.getChars();  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	    char[]  searchChars  =  cs.getChars();		non-compiled	[CE]  variable  searchChars  is  already  defined  in  method  containsNone(CharSequence,char[])	2	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	add	    if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }		compilable	  [FE]  AssertionFailedError  	2	10	add
11	[BUG]  [BUGGY]    if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	    if(cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }		compilable	  [FE]  AssertionFailedError  	2	10	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    if(searchChars  ==  null)  {  return  true;  }  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	add	    if(searchChars  ==  null)  {  return  true;  }		compilable	  [FE]  AssertionFailedError  	2	10	add
13	[BUG]  [BUGGY]    if(searchChars  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    if(searchChars  ==  null)  {  return  true;  }  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	    if(searchChars  ==  null)  {  return  true;  }		compilable	  [FE]  AssertionFailedError  	2	10	add
14	[BUG]  [BUGGY]    int  searchLen  =  cs.length();  [CE]  variable  searchLen  is  already  defined  in  method  containsNone(CharSequence,char[])  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    int  searchLen  =  cs.length();  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	    int  searchLen  =  cs.length();		non-compiled	[CE]  variable  searchLen  is  already  defined  in  method  containsNone(CharSequence,char[])	2	None	add
15	[BUG]  [BUGGY]    char  ch  =  cs.charAt(searchLen);  [CE]  cannot  find  symbol  searchLen  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    char  ch  =  cs.charAt(searchLen);  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	    char  ch  =  cs.charAt(searchLen);		non-compiled	[CE]  cannot  find  symbol  searchLen	2	None	add
16	[BUG]  [BUGGY]    char  ch  =  cs.charAt(0);  [CE]  variable  ch  is  already  defined  in  method  containsNone(CharSequence,char[])  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    char  ch  =  cs.charAt(0);  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	    char  ch  =  cs.charAt(0);		non-compiled	[CE]  variable  ch  is  already  defined  in  method  containsNone(CharSequence,char[])	2	None	add
17	[BUG]  [BUGGY]    int  searchLen  =  searchChars.length;  [CE]  variable  searchLen  is  already  defined  in  method  containsNone(CharSequence,char[])  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  [BUGGY]    int  searchLen  =  searchChars.length;  [BUGGY]  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	    int  searchLen  =  searchChars.length;		non-compiled	[CE]  variable  searchLen  is  already  defined  in  method  containsNone(CharSequence,char[])	2	None	add
