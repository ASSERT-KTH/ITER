bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  csLen  =  searchChars.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  Integer  csLen  =  searchChars.length();  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	Integer  csLen  =  searchChars.length();	  int    csLen    =    searchChars.length()    +    2;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
2	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    i    	non-compiled	[CE]  <identifier>  expected	29	None	replace
3	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    i    	non-compiled	[CE]  <identifier>  expected	29	None	replace
4	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    i    	non-compiled	[CE]  <identifier>  expected	29	None	replace
5	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  len  =  searchChars.length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  len  =  searchChars.length  -  1;	  int    len    =    searchChars.length();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
6	[BUG]  [BUGGY]  int  len  =  searchChars.length()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  len  =  searchChars.length()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  len  =  searchChars.length()  -  1;	  int    len    =    searchChars.length();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
7	[BUG]  [BUGGY]  int  len  =  searchChars.length()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  len  =  searchChars.length()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  len  =  searchChars.length()  +  1;	  int    len    =    searchChars.length();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
8	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
9	[BUG]  [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
10	[BUG]  [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
11	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ' "')  {  return  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ' "')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ' "')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    =='   "')    {    return    i    	non-compiled	[CE]  <identifier>  expected	18	None	replace
12	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  'n')  {  return  i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  'n')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  'n')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    >=    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    =='   "')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
15	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
16	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen.length();  i++)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  csLen.length();  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  csLen.length();  i++)  {	  for(int    i    =    0;    i    <    searchLen.length();    i++)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen.length()  +  1;  i++)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  searchLen.length()  +  1;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  searchLen.length()  +  1;  i++)  {	  for(int    i    =    0;    i    <    searchLen.length();    i++)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen.length()  +  2;  i++)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  searchLen.length()  +  2;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  searchLen.length()  +  2;  i++)  {	  for(int    i    =    0;    i    <    searchLen.length();    i++)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
24	[BUG]  [BUGGY]  char  csLen  =  searchChars.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  char  csLen  =  searchChars.length();  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	char  csLen  =  searchChars.length();	  char    csLen    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
25	[BUG]  [BUGGY]  String  csLen  =  cs.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  String  csLen  =  cs.length();  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	String  csLen  =  cs.length();	  char    csLen    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
26	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
27	[BUG]  [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
28	[BUG]  [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
29	[BUG]  [BUGGY]  int  len  =  cs.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  len  =  cs.length;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  len  =  cs.length;	  int    len    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
30	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  len  =  searchChars.length  -  2;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  len  =  searchChars.length  -  2;	  int    len    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
31	[BUG]  [BUGGY]  int  len  =  searchChars.length  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  len  =  searchChars.length  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  len  =  searchChars.length  +  1;	  int    len    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
32	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i;  }  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
33	[BUG]  [BUGGY]  Integer  csLimit  =  searchChars.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  Integer  csLimit  =  searchChars.length();  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	Integer  csLimit  =  searchChars.length();	  int    csLimit    =    searchChars.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    i    	non-compiled	[CE]  <identifier>  expected	48	None	replace
35	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i    	non-compiled	[CE]  <identifier>  expected	23	None	replace
36	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i    	non-compiled	[CE]  <identifier>  expected	23	None	replace
37	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i    	non-compiled	[CE]  <identifier>  expected	23	None	replace
38	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  -  3;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  csLen  =  searchChars.length  -  3;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  csLen  =  searchChars.length  -  3;	  int    csLen    =    searchChars.length    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
39	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }	  if(searchLen    ==    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
40	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  csLimit  =  searchChars.length  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  csLimit  =  searchChars.length  +  1;	  int    csLimit    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
41	[BUG]  [BUGGY]  int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }	  for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
42	[BUG]  [BUGGY]  int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }	  for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
43	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }	  for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
44	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
45	[BUG]  [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
46	[BUG]  [BUGGY]  int  len  =  cs.length()  +  searchLen;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  len  =  cs.length()  +  searchLen;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  len  =  cs.length()  +  searchLen;	  int    len    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
47	[BUG]  [BUGGY]  int  len  =  cs.length()  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  len  =  cs.length()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  len  =  cs.length()  +  1;	  int    len    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }	  for(int    i    =    0;    i    <    csLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
50	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }	  for(int    i    =    0;    i    <    csLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
51	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }	  for(int    i    =    0;    i    <    csLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen.length  -  1;  i++)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  csLen.length  -  1;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  csLen.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    searchLen.length    -    1;    i++)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen.length  -  2;  i++)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  searchLen.length  -  2;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  searchLen.length  -  2;  i++)  {	  for(int    i    =    0;    i    <    searchLen.length    -    1;    i++)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen.length  -  4;  i++)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  searchLen.length  -  4;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  searchLen.length  -  4;  i++)  {	  for(int    i    =    0;    i    <    searchLen.length    -    1;    i++)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
55	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  INDEX_NOT_FOUND;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
56	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i;  }	  if(searchLen    ==    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  csLen;  i++)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  1;  i  <  csLen;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  1;  i  <  csLen;  i++)  {	  for(int    i    =    1;    i    <    searchLen;    i++)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
58	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  searchLen;  i++)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  For(int  i  =  0;  i  <  searchLen;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	For(int  i  =  0;  i  <  searchLen;  i++)  {	  for(int    i    =    1;    i    <    searchLen;    i++)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
59	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  3;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  csLimit  =  searchChars.length  -  3;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  csLimit  =  searchChars.length  -  3;	  int    csLimit    =    searchChars.length    -    2;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
60	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    i    	non-compiled	[CE]  <identifier>  expected	21	None	replace
61	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    i    	non-compiled	[CE]  <identifier>  expected	21	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  searchChars.length;  i++)  {	  for(int    i    =    0;    i    <    cs.length;    i++)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cs.length();  i++)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  cs.length();  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  cs.length();  i++)  {	  for(int    i    =    0;    i    <    cs.length;    i++)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
64	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  searchLen.length;  i++)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  For(int  i  =  0;  i  <  searchLen.length;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	For(int  i  =  0;  i  <  searchLen.length;  i++)  {	  For(int    i    =    0;    i    <    csLen;    i++)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
65	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }	  if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
66	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]!=  ch)  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]!=  ch)  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]!=  ch)  {  return  INDEX_NOT_FOUND;  }	  if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
67	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  InDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  InDEX_NOT_FOUND;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  InDEX_NOT_FOUND;  }	  if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
68	[BUG]  [BUGGY]  char  csLimit  =  searchChars.length();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  char  csLimit  =  searchChars.length();  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	char  csLimit  =  searchChars.length();	  int    csLimit    =    searchChars.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
69	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    i    	non-compiled	[CE]  <identifier>  expected	47	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  SearchChars.length;  i++)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  SearchChars.length;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  SearchChars.length;  i++)  {	  for(int    i    =    0;    i    <    csLen.length;    i++)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
71	[BUG]  [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
72	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
73	[BUG]  [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
74	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }	  if(searchLen    ==    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
76	[BUG]  [BUGGY]  int  len  =  csLen.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  len  =  csLen.length();  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  len  =  csLen.length();	  int    len    =    searchLen.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
77	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  csLen  =  searchChars.length  +  2;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  csLen  =  searchChars.length  +  2;	  int    csLen    =    searchChars.length    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
78	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  /  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  csLen  =  searchChars.length  /  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  csLen  =  searchChars.length  /  1;	  int    csLen    =    searchChars.length    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
79	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  String  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    i    	non-compiled	[CE]  <identifier>  expected	44	None	replace
80	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
81	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
82	[BUG]  [BUGGY]  int  csLen  =  searchChars.length()  +  csLen;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  csLen  =  searchChars.length()  +  csLen;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  csLen  =  searchChars.length()  +  csLen;	  int    csLen    =    cs.length()    +    searchLen;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
83	[BUG]  [BUGGY]  int  csLen  =  searchChars.length()  +  cs.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  csLen  =  searchChars.length()  +  cs.length;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  csLen  =  searchChars.length()  +  cs.length;	  int    csLen    =    cs.length()    +    searchLen;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
84	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    i    	non-compiled	[CE]  <identifier>  expected	21	None	replace
85	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
86	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    i    	non-compiled	[CE]  <identifier>  expected	47	None	replace
87	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    i    	non-compiled	[CE]  <identifier>  expected	47	None	replace
88	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    i    	non-compiled	[CE]  <identifier>  expected	29	None	replace
89	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    i    	non-compiled	[CE]  <identifier>  expected	29	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
91	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    =='   "')    {    return    i    	non-compiled	[CE]  <identifier>  expected	18	None	replace
92	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
93	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
94	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
95	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
96	[BUG]  [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.searchLen.length();  i++)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  this.searchLen.length();  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  this.searchLen.length();  i++)  {	  for(int    i    =    0;    i    <    searchLen.length();    i++)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
98	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i    	non-compiled	[CE]  <identifier>  expected	23	None	replace
99	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i    	non-compiled	[CE]  <identifier>  expected	23	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
101	[BUG]  [BUGGY]  Int  csLen  =  searchChars.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  Int  csLen  =  searchChars.length();  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	Int  csLen  =  searchChars.length();	  int    csLen    =    searchChars.length()    +    2;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
102	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  SearchLen.length;  i++)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  SearchLen.length;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  SearchLen.length;  i++)  {	  for(int    i    =    0;    i    <    len;    i++)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
104	[BUG]  [BUGGY]  int  csLen  =  searchChars.length()  +  cs;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  csLen  =  searchChars.length()  +  cs;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  csLen  =  searchChars.length()  +  cs;	  int    csLen    =    cs.length()    +    searchLen;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
105	[BUG]  [BUGGY]  int  len  =  searchCharsLen;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  len  =  searchCharsLen;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  len  =  searchCharsLen;	  int    len    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
106	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
107	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }	  if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
108	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_	  if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
109	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND	  if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
110	[BUG]  [BUGGY]  Integer  len  =  searchLen.length();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  Integer  len  =  searchLen.length();  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	Integer  len  =  searchLen.length();	  int    len    =    searchLen.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
111	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
112	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen.length  -  3;  i++)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  searchLen.length  -  3;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  searchLen.length  -  3;  i++)  {	  for(int    i    =    0;    i    <    searchLen.length    -    1;    i++)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    =='   "')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  searchLen;  i  <  len;  i++)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0,  len  =  searchLen;  i  <  len;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0,  len  =  searchLen;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    searchLen;    i++)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
115	[BUG]  [BUGGY]  int  csLimit  =  this.searchChars.length();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  csLimit  =  this.searchChars.length();  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  csLimit  =  this.searchChars.length();	  int    csLimit    =    searchChars.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
116	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    i    	non-compiled	[CE]  <identifier>  expected	21	None	replace
117	[BUG]  [BUGGY]  char  csLen  =  searchChars.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  char  csLen  =  searchChars.length;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	char  csLen  =  searchChars.length;	  char    csLen    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
118	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }	  if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
119	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)return  i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)return  i;  }	  if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    INDEX_NOT_FOUND;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
121	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)return  i;  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)return  i;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)return  i;  }  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
122	[BUG]  [BUGGY]  int  csLen  =  cs.length()  *  searchLen;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  csLen  =  cs.length()  *  searchLen;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  csLen  =  cs.length()  *  searchLen;	  int    csLen    =    cs.length()    +    searchLen;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
123	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    i    	non-compiled	[CE]  <identifier>  expected	47	None	replace
124	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  i;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
125	[BUG]  [BUGGY]  Int  csLimit  =  searchChars.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  Int  csLimit  =  searchChars.length();  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	Int  csLimit  =  searchChars.length();	  int    csLimit    =    searchChars.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
126	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i;  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i;  }  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
127	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i;  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  i;  }  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
128	[BUG]  [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i;  }  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
129	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  i	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    i    	non-compiled	[CE]  <identifier>  expected	29	None	replace
130	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  SearchLen;  i++)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  for(int  i  =  0;  i  <  SearchLen;  i++)  {  [BUGGY]      char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	for(int  i  =  0;  i  <  SearchLen;  i++)  {	  for(int    i    =    0;    i    <    len;    i++)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
131	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  }	  for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
132	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }	  for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
133	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  4;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  len  =  searchChars.length  -  4;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  len  =  searchChars.length  -  4;	  int    len    =    searchChars.length();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
134	[BUG]  [BUGGY]  if(searchLen  >  0)  {  int  j  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  int  j  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  int  j  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
135	[BUG]  [BUGGY]  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
136	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  '%')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  '%')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  '%')  {  return  i;  }	  if(searchLen    ==    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
137	[BUG]  [BUGGY]  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  i;  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
138	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {' "')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {' "')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {' "')  {  return  i;  }	  if(searchLen    ==    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    =='   "')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
139	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  '+')  {  return  i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  '+')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  {  '+')  {  return  i;  }	  if(searchLen    ==    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
140	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  i;  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  i;  }	  if(searchLen    ==    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
141	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  i;  }  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
142	[BUG]  [BUGGY]  int  len  =  searchedLen.length();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  int  len  =  searchedLen.length();  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	int  len  =  searchedLen.length();	  int    len    =    searchLen.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
143	[BUG]  [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;      [BUGGY]  if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	if(searchLen  >  0)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  i;  }  }	  if(searchLen    >    0)    {    int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
