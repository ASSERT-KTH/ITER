bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] if (cs == null || searchChars == null) { [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { [BUGGY] if (cs == null || searchChars == null) { [BUGGY] return true; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { [BUGGY] [BUGGY] if (cs == null || searchChars == null) { return true; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1674	1674	10	add	
3	[BUG] [BUGGY] int csLen = cs.length(); [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } [BUGGY] int csLen = cs.length(); [BUGGY] int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   return false; } } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } [BUGGY] [BUGGY] int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   return false; } } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	add	
5	[BUG] [BUGGY] int searchLen = searchChars.length; [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } int csLen = cs.length(); [BUGGY] int searchLen = searchChars.length; [BUGGY] for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   return false; } } } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1678	1678	10	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } int csLen = cs.length(); [BUGGY] [BUGGY] int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   return false; } } } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1678	1678	10	add	
7	[BUG] [BUGGY] for (int i = 0; i < csLen; i++) { [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } int csLen = cs.length(); int searchLen = searchChars.length; [BUGGY] for (int i = 0; i < csLen; i++) { [BUGGY] char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   return false; } } } return true; [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } int csLen = cs.length(); int searchLen = searchChars.length; [BUGGY] [BUGGY] for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   return false; } } } return true; [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	add	
9	[BUG] [BUGGY] char ch = cs.charAt(i); [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { [BUGGY] char ch = cs.charAt(i); [BUGGY] for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   return false; } } } return true; } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { [BUGGY] [BUGGY] char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   return false; } } } return true; } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	add	
11	[BUG] [BUGGY] for (int j = 0; j < searchLen; j++) { [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); [BUGGY] for (int j = 0; j < searchLen; j++) { [BUGGY] if (searchChars[j] == ch) {   return false; } } } return true; } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); [BUGGY] [BUGGY] for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   return false; } } } return true; } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	add	
13	[BUG] [BUGGY] if (searchChars[j] == ch) { [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { [BUGGY] if (searchChars[j] == ch) { [BUGGY]   return false; } } } return true; } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { [BUGGY] [BUGGY] if (searchChars[j] == ch) {   return false; } } } return true; } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	add	
15	[BUG] [BUGGY] return false; [FE] AssertionFailedError [CONTEXT] return true; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   [BUGGY] return false; [BUGGY] } } } return true; } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] return true; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   [BUGGY] [BUGGY] return false; } } } return true; } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	add	
17	[BUG] [BUGGY] return cs == null || cs.length() == 0; [FE] AssertionFailedError [CONTEXT] public static boolean isEmpty(CharSequence cs) { [BUGGY] return cs == null || cs.length() == 0; [BUGGY] } [CLASS] StringUtils [METHOD] isEmpty [RETURN_TYPE] boolean  CharSequence cs [VARIABLES] CharSequence cs String EMPTY boolean int INDEX_NOT_FOUND PAD_LIMIT  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.41403933560541256	194	194	10	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean isEmpty(CharSequence cs) { [BUGGY] [BUGGY] return cs == null || cs.length() == 0; } [CLASS] StringUtils [METHOD] isEmpty [RETURN_TYPE] boolean  CharSequence cs [VARIABLES] CharSequence cs String EMPTY boolean int INDEX_NOT_FOUND PAD_LIMIT  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.41403933560541256	194	194	10	add	
19	[BUG] [BUGGY] if (cs == null || invalidChars == null) { [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, String invalidChars) { [BUGGY] if (cs == null || invalidChars == null) { [BUGGY] return true; } return containsNone(cs, invalidChars.toCharArray()); } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs String invalidChars [VARIABLES] CharSequence cs String EMPTY decomposed input invalidChars searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1715	1715	10	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, String invalidChars) { [BUGGY] [BUGGY] if (cs == null || invalidChars == null) { return true; } return containsNone(cs, invalidChars.toCharArray()); } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs String invalidChars [VARIABLES] CharSequence cs String EMPTY decomposed input invalidChars searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1715	1715	10	add	
21	[BUG] [BUGGY] return containsNone(cs, invalidChars.toCharArray()); [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, String invalidChars) { if (cs == null || invalidChars == null) { return true; } [BUGGY] return containsNone(cs, invalidChars.toCharArray()); [BUGGY] } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs String invalidChars [VARIABLES] CharSequence cs String EMPTY decomposed input invalidChars searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, String invalidChars) { if (cs == null || invalidChars == null) { return true; } [BUGGY] [BUGGY] return containsNone(cs, invalidChars.toCharArray()); } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs String invalidChars [VARIABLES] CharSequence cs String EMPTY decomposed input invalidChars searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	add	
23	[BUG] [BUGGY] if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { [BUGGY] if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { [BUGGY] return INDEX_NOT_FOUND; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {  return i; [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { [BUGGY] [BUGGY] if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {  return i; [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	add	
25	[BUG] [BUGGY] int csLen = cs.length(); [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } [BUGGY] int csLen = cs.length(); [BUGGY] int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {  return i; } } } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } [BUGGY] [BUGGY] int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {  return i; } } } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	add	
27	[BUG] [BUGGY] int searchLen = searchChars.length; [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int csLen = cs.length(); [BUGGY] int searchLen = searchChars.length; [BUGGY] for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {  return i; } } } return INDEX_NOT_FOUND; [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int csLen = cs.length(); [BUGGY] [BUGGY] int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {  return i; } } } return INDEX_NOT_FOUND; [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	add	
29	[BUG] [BUGGY] for (int i = 0; i < csLen; i++) { [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int csLen = cs.length(); int searchLen = searchChars.length; [BUGGY] for (int i = 0; i < csLen; i++) { [BUGGY] char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {  return i; } } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int csLen = cs.length(); int searchLen = searchChars.length; [BUGGY] [BUGGY] for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {  return i; } } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1377	1377	10	add	
31	[BUG] [BUGGY] char ch = cs.charAt(i); [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { [BUGGY] char ch = cs.charAt(i); [BUGGY] for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {  return i; } } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1378	1378	10	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { [BUGGY] [BUGGY] char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {  return i; } } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1378	1378	10	add	
33	[BUG] [BUGGY] for (int j = 0; j < searchLen; j++) { [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); [BUGGY] for (int j = 0; j < searchLen; j++) { [BUGGY] if (searchChars[j] == ch) {  return i; } } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); [BUGGY] [BUGGY] for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {  return i; } } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	add	
35	[BUG] [BUGGY] if (searchChars[j] == ch) { [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { [BUGGY] if (searchChars[j] == ch) { [BUGGY]  return i; } } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1380	1380	10	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { [BUGGY] [BUGGY] if (searchChars[j] == ch) {  return i; } } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1380	1380	10	add	
37	[BUG] [BUGGY] return i; [FE] AssertionFailedError [CONTEXT] if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {  [BUGGY] return i; [BUGGY] } } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1382	1382	10	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {  [BUGGY] [BUGGY] return i; } } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1382	1382	10	add	
39	[BUG] [BUGGY] return true; [FE] AssertionFailedError [CONTEXT] for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   return false; } } } [BUGGY] return true; [BUGGY] } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   return false; } } } [BUGGY] [BUGGY] return true; } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	add	
41	[BUG] [BUGGY] return true; [FE] AssertionFailedError [CONTEXT] char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  [BUGGY] return true; [BUGGY] } } } } return false; } [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  [BUGGY] [BUGGY] return true; } } } } return false; } [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	add	
43	[BUG] [BUGGY] if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { [BUGGY] if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { [BUGGY] return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1444	1444	10	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { [BUGGY] [BUGGY] if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1444	1444	10	add	
45	[BUG] [BUGGY] int csLength = cs.length(); [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } [BUGGY] int csLength = cs.length(); [BUGGY] int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1447	1447	10	replace	
46	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } [BUGGY] [BUGGY] int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1447	1447	10	add	
47	[BUG] [BUGGY] int searchLength = searchChars.length; [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); [BUGGY] int searchLength = searchChars.length; [BUGGY] int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1448	1448	10	replace	
48	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); [BUGGY] [BUGGY] int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1448	1448	10	add	
49	[BUG] [BUGGY] int csLast = csLength - 1; [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); int searchLength = searchChars.length; [BUGGY] int csLast = csLength - 1; [BUGGY] int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1449	1449	10	replace	
50	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); int searchLength = searchChars.length; [BUGGY] [BUGGY] int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1449	1449	10	add	
51	[BUG] [BUGGY] int searchLast = searchLength - 1; [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; [BUGGY] int searchLast = searchLength - 1; [BUGGY] for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else { [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1450	1450	10	replace	
52	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; [BUGGY] [BUGGY] int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else { [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1450	1450	10	add	
53	[BUG] [BUGGY] for (int i = 0; i < csLength; i++) { [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; [BUGGY] for (int i = 0; i < csLength; i++) { [BUGGY] char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1451	1451	10	replace	
54	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; [BUGGY] [BUGGY] for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1451	1451	10	add	
55	[BUG] [BUGGY] char ch = cs.charAt(i); [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { [BUGGY] char ch = cs.charAt(i); [BUGGY] for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  return true; [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1452	1452	10	replace	
56	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { [BUGGY] [BUGGY] char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  return true; [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1452	1452	10	add	
57	[BUG] [BUGGY] for (int j = 0; j < searchLength; j++) { [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); [BUGGY] for (int j = 0; j < searchLength; j++) { [BUGGY] if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  return true; } [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	
58	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsAny(CharSequence cs, char[] searchChars) { if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); [BUGGY] [BUGGY] for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  return true; } [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	add	
59	[BUG] [BUGGY] if (searchChars[j] == ch) { [FE] AssertionFailedError [CONTEXT] if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { [BUGGY] if (searchChars[j] == ch) { [BUGGY] if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  return true; } } [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1454	1454	10	replace	
60	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) { return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { [BUGGY] [BUGGY] if (searchChars[j] == ch) { if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  return true; } } [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1454	1454	10	add	
61	[BUG] [BUGGY] if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) { [FE] AssertionFailedError [CONTEXT] return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { [BUGGY] if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) { [BUGGY]  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  return true; } } } [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1455	1455	10	replace	
62	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] return false; } int csLength = cs.length(); int searchLength = searchChars.length; int csLast = csLength - 1; int searchLast = searchLength - 1; for (int i = 0; i < csLength; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLength; j++) { if (searchChars[j] == ch) { [BUGGY] [BUGGY] if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {  if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  return true; } } } [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1455	1455	10	add	
63	[BUG] [BUGGY] return false; [FE] AssertionFailedError [CONTEXT] if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  return true; } } } } [BUGGY] return false; [BUGGY] } [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	replace	
64	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (searchChars[j + 1] == cs.charAt(i + 1)) { return true; } } else {  return true; } } } } [BUGGY] [BUGGY] return false; } [CLASS] StringUtils [METHOD] containsAny [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	add	
65	[BUG] [BUGGY] if (isEmpty(cs) || isEmpty(searchChars)) { [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, String searchChars) { [BUGGY] if (isEmpty(cs) || isEmpty(searchChars)) { [BUGGY] return INDEX_NOT_FOUND; } return indexOfAny(cs, searchChars.toCharArray()); } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs String searchChars [VARIABLES] CharSequence cs String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1412	1412	10	replace	
66	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, String searchChars) { [BUGGY] [BUGGY] if (isEmpty(cs) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } return indexOfAny(cs, searchChars.toCharArray()); } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs String searchChars [VARIABLES] CharSequence cs String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1412	1412	10	add	
67	[BUG] [BUGGY] return indexOfAny(cs, searchChars.toCharArray()); [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, String searchChars) { if (isEmpty(cs) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } [BUGGY] return indexOfAny(cs, searchChars.toCharArray()); [BUGGY] } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs String searchChars [VARIABLES] CharSequence cs String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1415	1415	10	replace	
68	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAny(CharSequence cs, String searchChars) { if (isEmpty(cs) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } [BUGGY] [BUGGY] return indexOfAny(cs, searchChars.toCharArray()); } [CLASS] StringUtils [METHOD] indexOfAny [RETURN_TYPE] int  CharSequence cs String searchChars [VARIABLES] CharSequence cs String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLen end endLimit found i index j len max ordinal searchLen start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1415	1415	10	add	
69	[BUG] [BUGGY] if (isEmpty(str) || isEmpty(searchChars)) { [FE] AssertionFailedError [CONTEXT] public static int indexOfAnyBut(String str, String searchChars) { [BUGGY] if (isEmpty(str) || isEmpty(searchChars)) { [BUGGY] return INDEX_NOT_FOUND; } int strLen = str.length(); for (int i = 0; i < strLen; i++) { char ch = str.charAt(i); if (searchChars.indexOf(ch) < 0) { return i; } } return INDEX_NOT_FOUND; [CLASS] StringUtils [METHOD] indexOfAnyBut [RETURN_TYPE] int  String str String searchChars [VARIABLES] char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1570	1570	10	replace	
70	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAnyBut(String str, String searchChars) { [BUGGY] [BUGGY] if (isEmpty(str) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int strLen = str.length(); for (int i = 0; i < strLen; i++) { char ch = str.charAt(i); if (searchChars.indexOf(ch) < 0) { return i; } } return INDEX_NOT_FOUND; [CLASS] StringUtils [METHOD] indexOfAnyBut [RETURN_TYPE] int  String str String searchChars [VARIABLES] char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1570	1570	10	add	
71	[BUG] [BUGGY] int strLen = str.length(); [FE] AssertionFailedError [CONTEXT] public static int indexOfAnyBut(String str, String searchChars) { if (isEmpty(str) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } [BUGGY] int strLen = str.length(); [BUGGY] for (int i = 0; i < strLen; i++) { char ch = str.charAt(i); if (searchChars.indexOf(ch) < 0) { return i; } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAnyBut [RETURN_TYPE] int  String str String searchChars [VARIABLES] char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1573	1573	10	replace	
72	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAnyBut(String str, String searchChars) { if (isEmpty(str) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } [BUGGY] [BUGGY] int strLen = str.length(); for (int i = 0; i < strLen; i++) { char ch = str.charAt(i); if (searchChars.indexOf(ch) < 0) { return i; } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAnyBut [RETURN_TYPE] int  String str String searchChars [VARIABLES] char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1573	1573	10	add	
73	[BUG] [BUGGY] for (int i = 0; i < strLen; i++) { [FE] AssertionFailedError [CONTEXT] public static int indexOfAnyBut(String str, String searchChars) { if (isEmpty(str) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int strLen = str.length(); [BUGGY] for (int i = 0; i < strLen; i++) { [BUGGY] char ch = str.charAt(i); if (searchChars.indexOf(ch) < 0) { return i; } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAnyBut [RETURN_TYPE] int  String str String searchChars [VARIABLES] char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1574	1574	10	replace	
74	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAnyBut(String str, String searchChars) { if (isEmpty(str) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int strLen = str.length(); [BUGGY] [BUGGY] for (int i = 0; i < strLen; i++) { char ch = str.charAt(i); if (searchChars.indexOf(ch) < 0) { return i; } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAnyBut [RETURN_TYPE] int  String str String searchChars [VARIABLES] char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1574	1574	10	add	
75	[BUG] [BUGGY] char ch = str.charAt(i); [FE] AssertionFailedError [CONTEXT] public static int indexOfAnyBut(String str, String searchChars) { if (isEmpty(str) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int strLen = str.length(); for (int i = 0; i < strLen; i++) { [BUGGY] char ch = str.charAt(i); [BUGGY] if (searchChars.indexOf(ch) < 0) { return i; } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAnyBut [RETURN_TYPE] int  String str String searchChars [VARIABLES] char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1575	1575	10	replace	
76	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAnyBut(String str, String searchChars) { if (isEmpty(str) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int strLen = str.length(); for (int i = 0; i < strLen; i++) { [BUGGY] [BUGGY] char ch = str.charAt(i); if (searchChars.indexOf(ch) < 0) { return i; } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAnyBut [RETURN_TYPE] int  String str String searchChars [VARIABLES] char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1575	1575	10	add	
77	[BUG] [BUGGY] if (searchChars.indexOf(ch) < 0) { [FE] AssertionFailedError [CONTEXT] public static int indexOfAnyBut(String str, String searchChars) { if (isEmpty(str) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int strLen = str.length(); for (int i = 0; i < strLen; i++) { char ch = str.charAt(i); [BUGGY] if (searchChars.indexOf(ch) < 0) { [BUGGY] return i; } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAnyBut [RETURN_TYPE] int  String str String searchChars [VARIABLES] char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1576	1576	10	replace	
78	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAnyBut(String str, String searchChars) { if (isEmpty(str) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int strLen = str.length(); for (int i = 0; i < strLen; i++) { char ch = str.charAt(i); [BUGGY] [BUGGY] if (searchChars.indexOf(ch) < 0) { return i; } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAnyBut [RETURN_TYPE] int  String str String searchChars [VARIABLES] char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1576	1576	10	add	
79	[BUG] [BUGGY] return i; [FE] AssertionFailedError [CONTEXT] public static int indexOfAnyBut(String str, String searchChars) { if (isEmpty(str) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int strLen = str.length(); for (int i = 0; i < strLen; i++) { char ch = str.charAt(i); if (searchChars.indexOf(ch) < 0) { [BUGGY] return i; [BUGGY] } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAnyBut [RETURN_TYPE] int  String str String searchChars [VARIABLES] char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1577	1577	10	replace	
80	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int indexOfAnyBut(String str, String searchChars) { if (isEmpty(str) || isEmpty(searchChars)) { return INDEX_NOT_FOUND; } int strLen = str.length(); for (int i = 0; i < strLen; i++) { char ch = str.charAt(i); if (searchChars.indexOf(ch) < 0) { [BUGGY] [BUGGY] return i; } } return INDEX_NOT_FOUND; } [CLASS] StringUtils [METHOD] indexOfAnyBut [RETURN_TYPE] int  String str String searchChars [VARIABLES] char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.22360679774997896	1577	1577	10	add	
