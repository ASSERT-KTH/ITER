bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars,  0))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars,  0))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars,  0))  {	  if(!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars,    0))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
2	[BUG]  [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  0,  searchChars.length))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  0,  searchChars.length))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  0,  searchChars.length))  {	  if(!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars,    0))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
3	[BUG]  [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  1))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  1))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  1))  {	  if(!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars,    0))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
4	[BUG]  [BUGGY]  if(cs  ==  null  ||  isEmpty(searchChars)&&  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(cs  ==  null  ||  isEmpty(searchChars)&&  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(cs  ==  null  ||  isEmpty(searchChars)&&  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars    ==    null    ||    isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
5	[BUG]  [BUGGY]  if(searchChars!=  null  ||  isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars!=  null  ||  isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars!=  null  ||  isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars    ==    null    ||    isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
6	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length  <  =  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  searchChars.length  <  =  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length  <  =  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(isEmpty(cs)||    searchChars.length    <    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
7	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length  <  1  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  searchChars.length  <  1  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length  <  1  ||  ArrayUtils.isEmpty(searchChars))  {	  if(isEmpty(cs)||    searchChars.length    <    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
8	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length!=  1  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  searchChars.length!=  1  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length!=  1  ||  ArrayUtils.isEmpty(searchChars))  {	  if(isEmpty(cs)||    searchChars.length!=    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
9	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars,  null))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars,  null))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars,  null))  {	  if(isEmpty(cs)||    searchChars.length!=    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
10	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLen  =  searchChars.length  -  4;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  searchChars.length  -  4;	  int    searchLen    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLen  =  searchChars.length  -  3;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  searchChars.length  -  3;	  int    searchLen    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  DECOMPOSE,  DECOMPOSE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(cs,  searchChars,  DECOMPOSE,  DECOMPOSE);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  DECOMPOSE,  DECOMPOSE);	  int    index    =    indexOf(cs,    searchChars,    DECOMPOSE);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
13	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  DECOMPOSE,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(cs,  searchChars,  DECOMPOSE,  0);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  DECOMPOSE,  0);	  int    index    =    indexOf(cs,    searchChars,    DECOMPOSE);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
14	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars.length  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars.length  -  1);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars.length  -  1);	  int    searchLimit    =    ArrayUtils.indexOf(searchChars,    searchChars.length);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
15	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars.length  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars.length  +  1);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars.length  +  1);	  int    searchLimit    =    ArrayUtils.indexOf(searchChars,    searchChars.length);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
16	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  -  cs.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  searchChars.length()  -  cs.length;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  searchChars.length()  -  cs.length;	  int    searchLimit    =    cs.length()    -    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
17	[BUG]  [BUGGY]  char  searchLimit  =  cs.length()  -  searchChars.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLimit  =  cs.length()  -  searchChars.length;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLimit  =  cs.length()  -  searchChars.length;	  int    searchLimit    =    cs.length()    -    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
18	[BUG]  [BUGGY]  int  searchLimit  =  cs.length()  -  searchChars.length  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  cs.length()  -  searchChars.length  -  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  cs.length()  -  searchChars.length  -  1;	  int    searchLimit    =    cs.length()    -    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
19	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length  ==  1  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  searchChars.length  ==  1  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length  ==  1  ||  ArrayUtils.isEmpty(searchChars))  {	  if(isEmpty(cs)||    searchChars.length    ==    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
20	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars,  null))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars,  null))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars,  null))  {	  if(isEmpty(cs)||    searchChars.length    ==    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
21	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length  ==  2  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  searchChars.length  ==  2  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length  ==  2  ||  ArrayUtils.isEmpty(searchChars))  {	  if(isEmpty(cs)||    searchChars.length    ==    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
22	[BUG]  [BUGGY]  char  csLimit  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  csLimit  =  searchChars.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  csLimit  =  searchChars.length();	  int    csLimit    =    searchChars.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
23	[BUG]  [BUGGY]  Integer  csLimit  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  Integer  csLimit  =  searchChars.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	Integer  csLimit  =  searchChars.length();	  int    csLimit    =    searchChars.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
24	[BUG]  [BUGGY]  if(cs!=  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(cs!=  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(cs!=  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {	  if(searchChars!=    null    ||    isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
25	[BUG]  [BUGGY]  if(cs  ==  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(cs  ==  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(cs  ==  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {	  if(searchChars!=    null    ||    isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
26	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars,  PAD_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars,  PAD_LIMIT);	  int    isEmpty(cs,    searchChars,    INDEX_NOT_FOUND);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
27	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars,  INDEX_NOT_FOUND,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars,  INDEX_NOT_FOUND,  PAD_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars,  INDEX_NOT_FOUND,  PAD_LIMIT);	  int    isEmpty(cs,    searchChars,    INDEX_NOT_FOUND);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
28	[BUG]  [BUGGY]  char  isEmpty(cs,  searchChars,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  isEmpty(cs,  searchChars,  INDEX_NOT_FOUND);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  isEmpty(cs,  searchChars,  INDEX_NOT_FOUND);	  int    isEmpty(cs,    searchChars,    INDEX_NOT_FOUND);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
29	[BUG]  [BUGGY]  char  csLimit  =  cs.length();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  csLimit  =  cs.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  csLimit  =  cs.length();	  int    csLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
30	[BUG]  [BUGGY]  Integer  csLimit  =  cs.length();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  Integer  csLimit  =  cs.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	Integer  csLimit  =  cs.length();	  int    csLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
31	[BUG]  [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)||  SearchChars.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)||  SearchChars.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||!isEmpty(cs)||  SearchChars.isEmpty(searchChars))  {	  if(!isEmpty(cs)||    SearchChars.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
32	[BUG]  [BUGGY]  if(!isEmpty(cs)||  SearchChars.isEmpty(searchChars,  0))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  SearchChars.isEmpty(searchChars,  0))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  SearchChars.isEmpty(searchChars,  0))  {	  if(!isEmpty(cs)||    SearchChars.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
33	[BUG]  [BUGGY]  int  index  =  indexOfAny(cs,  searchChars);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOfAny(cs,  searchChars);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOfAny(cs,  searchChars);	  int    index    =    indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
34	[BUG]  [BUGGY]  int  index  =  indexOf(searchChars,  cs.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(searchChars,  cs.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(searchChars,  cs.length);	  int    index    =    indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
35	[BUG]  [BUGGY]  char  index  =  indexOf(searchChars,  cs);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  index  =  indexOf(searchChars,  cs);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  index  =  indexOf(searchChars,  cs);	  int    index    =    indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
36	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  0,  searchChars.length))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  0,  searchChars.length))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  0,  searchChars.length))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars,    0))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
37	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  1))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  1))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  1))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars,    0))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
38	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars,  0))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars,  0))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars,  0))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars,    0))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
39	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  searchChars.length  -  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  searchChars.length  -  1;	  int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
40	[BUG]  [BUGGY]  int  searchLimit  =  cs.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  cs.length;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  cs.length;	  int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
41	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  searchChars.length  -  2;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  searchChars.length  -  2;	  int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
42	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  searchChars.length  -  4;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  searchChars.length  -  4;	  int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
43	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  +  cs.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  searchChars.length()  +  cs.length;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  searchChars.length()  +  cs.length;	  int    searchLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
44	[BUG]  [BUGGY]  char  searchLimit  =  cs.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLimit  =  cs.length()  +  searchChars.length;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLimit  =  cs.length()  +  searchChars.length;	  int    searchLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
45	[BUG]  [BUGGY]  int  len  =  cs.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  len  =  cs.length()  +  searchChars.length;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  cs.length()  +  searchChars.length;	  int    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
46	[BUG]  [BUGGY]  int  len  =  cs.length()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  len  =  cs.length()  +  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  cs.length()  +  1;	  int    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
47	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  MAX_LIMIT,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  MAX_LIMIT,  PAD_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(cs,  searchChars,  MAX_LIMIT,  PAD_LIMIT);	  int    searchLimit    =    indexOf(cs,    searchChars,    MAX_LIMIT);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  char  len  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  len  =  searchChars.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  len  =  searchChars.length();	  int    len    =    searchChars.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
49	[BUG]  [BUGGY]  int  searchLen  =  cs.length()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLen  =  cs.length()  -  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  cs.length()  -  1;	  int    searchLen    =    searchChars.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
50	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars.length,  PAD_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length,  PAD_LIMIT);	  int    isEmpty(cs,    searchChars.length,    INDEX_NOT_FOUND);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  char  isEmpty(cs,  searchChars.length,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  isEmpty(cs,  searchChars.length,  INDEX_NOT_FOUND);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  isEmpty(cs,  searchChars.length,  INDEX_NOT_FOUND);	  int    isEmpty(cs,    searchChars.length,    INDEX_NOT_FOUND);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length,  INDEX_NOT_FOUND,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars.length,  INDEX_NOT_FOUND,  PAD_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length,  INDEX_NOT_FOUND,  PAD_LIMIT);	  int    isEmpty(cs,    searchChars.length,    INDEX_NOT_FOUND);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
53	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  0,  searchChars.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(cs,  searchChars,  0,  searchChars.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  0,  searchChars.length);	  int    index    =    indexOf(cs,    searchChars,    0);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
54	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  0,  searchCharsLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(cs,  searchChars,  0,  searchCharsLen);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  0,  searchCharsLen);	  int    index    =    indexOf(cs,    searchChars,    0);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
55	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(cs,  searchChars,  1);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  1);	  int    index    =    indexOf(cs,    searchChars,    0);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
56	[BUG]  [BUGGY]  char  searchLen  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLen  =  searchChars.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLen  =  searchChars.length();	  int    searchLen    =    searchChars.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
57	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.indexOf(cs);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  searchChars.indexOf(cs);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  searchChars.indexOf(cs);	  int    searchLimit    =    cs.indexOf(searchChars);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
58	[BUG]  [BUGGY]  int  searchLimit  =  cs.indexOf(searchChars,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  cs.indexOf(searchChars,  PAD_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  cs.indexOf(searchChars,  PAD_LIMIT);	  int    searchLimit    =    cs.indexOf(searchChars);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
59	[BUG]  [BUGGY]  int  searchLimit  =  cs.indexOf(searchChars,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  cs.indexOf(searchChars,  INDEX_NOT_FOUND);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  cs.indexOf(searchChars,  INDEX_NOT_FOUND);	  int    searchLimit    =    cs.indexOf(searchChars);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
60	[BUG]  [BUGGY]  char  searchLimit  =  cs.indexOf(searchChars);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLimit  =  cs.indexOf(searchChars);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLimit  =  cs.indexOf(searchChars);	  int    searchLimit    =    cs.indexOf(searchChars);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
61	[BUG]  [BUGGY]  int  len  =  cs.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  len  =  cs.length;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  cs.length;	  int    len    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
62	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  len  =  searchChars.length  -  2;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  searchChars.length  -  2;	  int    len    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
63	[BUG]  [BUGGY]  int  len  =  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  len  =  searchChars.length  +  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  searchChars.length  +  1;	  int    len    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
64	[BUG]  [BUGGY]  int  len  =  cs.length  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  len  =  cs.length  -  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  cs.length  -  1;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
65	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  len  =  searchChars.length  -  4;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  searchChars.length  -  4;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
66	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  DECOMPOSE,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  DECOMPOSE,  PAD_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(cs,  searchChars,  DECOMPOSE,  PAD_LIMIT);	  int    searchLimit    =    indexOf(cs,    searchChars,    DECOMPOSE);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
67	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  PAD_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  PAD_LIMIT);	  int    searchLimit    =    ArrayUtils.indexOf(searchChars,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
68	[BUG]  [BUGGY]  if(cs  ==  null  ||!isEmpty(searchChars)||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(cs  ==  null  ||!isEmpty(searchChars)||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(cs  ==  null  ||!isEmpty(searchChars)||  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars    ==    null    ||!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
69	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  0  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  0  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  0  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars    ==    null    ||!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
70	[BUG]  [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars,  PAD_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOfAny(cs,  searchChars,  PAD_LIMIT);	  int    searchLimit    =    indexOfAny(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
71	[BUG]  [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars,  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars,  0);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOfAny(cs,  searchChars,  0);	  int    searchLimit    =    indexOfAny(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
72	[BUG]  [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars,  INDEX_NOT_FOUND);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOfAny(cs,  searchChars,  INDEX_NOT_FOUND);	  int    searchLimit    =    indexOfAny(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
73	[BUG]  [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars,  MAX_LIMIT);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars,  MAX_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOfAny(cs,  searchChars,  MAX_LIMIT);	  int    searchLimit    =    indexOfAny(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
74	[BUG]  [BUGGY]  String  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  String  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	String  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs);	  char    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
75	[BUG]  [BUGGY]  char  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs.length);	  char    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
76	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  searchChars.length()  -  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  searchChars.length()  -  1;	  int    searchLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
77	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  searchChars.length()  +  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  searchChars.length()  +  1;	  int    searchLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
78	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  INDEX_NOT_FOUND,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(cs,  searchChars,  INDEX_NOT_FOUND,  PAD_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  INDEX_NOT_FOUND,  PAD_LIMIT);	  int    index    =    indexOf(cs,    searchChars,    INDEX_NOT_FOUND);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
79	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  MAX_LIMIT);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(cs,  searchChars,  MAX_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  MAX_LIMIT);	  int    index    =    indexOf(cs,    searchChars,    INDEX_NOT_FOUND);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
80	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars)&&  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars)&&  isEmpty(cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars)&&  isEmpty(cs))  {	  if(!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
81	[BUG]  [BUGGY]  if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {	  if(!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
82	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  csLimit  =  searchChars.length  -  2;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  csLimit  =  searchChars.length  -  2;	  int    csLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
83	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  csLimit  =  searchChars.length  -  4;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  csLimit  =  searchChars.length  -  4;	  int    csLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
84	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  csLimit  =  searchChars.length  -  3;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  csLimit  =  searchChars.length  -  3;	  int    csLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
85	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(cs)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(cs)||  isEmpty(cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(cs)||  isEmpty(cs))  {	  if(searchChars    ==    null    ||    isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
86	[BUG]  [BUGGY]  if(cs  ==  null  ||  isEmpty(searchChars)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(cs  ==  null  ||  isEmpty(searchChars)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(cs  ==  null  ||  isEmpty(searchChars)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {	  if(searchChars    ==    null    ||    isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
87	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  SearchChars.isEmpty(searchChars,  1))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  SearchChars.isEmpty(searchChars,  1))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  SearchChars.isEmpty(searchChars,  1))  {	  if(!isEmpty(cs)&&    SearchChars.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
88	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  SearchChars.isEmpty(searchChars,  false))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  SearchChars.isEmpty(searchChars,  false))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  SearchChars.isEmpty(searchChars,  false))  {	  if(!isEmpty(cs)&&    SearchChars.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
89	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  SearchChars.isEmpty(searchChars,  ch))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  SearchChars.isEmpty(searchChars,  ch))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  SearchChars.isEmpty(searchChars,  ch))  {	  if(!isEmpty(cs)&&    SearchChars.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
90	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length  -  1,  searchChars.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars.length  -  1,  searchChars.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length  -  1,  searchChars.length);	  int    isEmpty(cs,    searchChars.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
91	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length  -  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars.length  -  2);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length  -  2);	  int    isEmpty(cs,    searchChars.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
92	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length  -  1,  searchChars.length));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars.length  -  1,  searchChars.length));  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length  -  1,  searchChars.length));	  int    isEmpty(cs,    searchChars.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
93	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs.length  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs.length  +  1);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs.length  +  1);	  int    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs.length);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
94	[BUG]  [BUGGY]  char  searchLen  =  cs.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLen  =  cs.length;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLen  =  cs.length;	  int    searchLen    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
95	[BUG]  [BUGGY]  if(!isEmpty(cs)||  searchChars.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  searchChars.length  >  0)  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  searchChars.length  >  0)  {	  if(!isEmpty(cs)&&    searchChars.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
96	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  1)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  1)  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  searchChars.length  >  1)  {	  if(!isEmpty(cs)&&    searchChars.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
97	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0  ||  cs.charAt(searchChars.length  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0  ||  cs.charAt(searchChars.length  -  1)!=  '/')  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  searchChars.length  >  0  ||  cs.charAt(searchChars.length  -  1)!=  '/')  {	  if(!isEmpty(cs)&&    searchChars.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
98	[BUG]  [BUGGY]  Integer  searchLen  =  cs.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  Integer  searchLen  =  cs.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	Integer  searchLen  =  cs.length();	  int    searchLen    =    cs.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
99	[BUG]  [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  ch))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  ch))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  ch))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars,    ch))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
100	[BUG]  [BUGGY]  if(!isEmpty(ch)&&  ArrayUtils.isEmpty(searchChars,  cs))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(ch)&&  ArrayUtils.isEmpty(searchChars,  cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(ch)&&  ArrayUtils.isEmpty(searchChars,  cs))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars,    ch))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
101	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  index))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  index))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  index))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars,    ch))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
102	[BUG]  [BUGGY]  if(cs!=  null  ||  isEmpty(searchChars)||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(cs!=  null  ||  isEmpty(searchChars)||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(cs!=  null  ||  isEmpty(searchChars)||  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars!=    null    ||    isEmpty(cs)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
103	[BUG]  [BUGGY]  String  searchLimit  =  cs.length();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  String  searchLimit  =  cs.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	String  searchLimit  =  cs.length();	  char    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
104	[BUG]  [BUGGY]  char  searchLimit  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLimit  =  searchChars.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLimit  =  searchChars.length();	  char    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
105	[BUG]  [BUGGY]  Char  searchLimit  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  Char  searchLimit  =  searchChars.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	Char  searchLimit  =  searchChars.length();	  char    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
106	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  csLimit  =  searchChars.length  +  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  csLimit  =  searchChars.length  +  1;	  int    csLimit    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
107	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  1);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(cs,  searchChars,  1);	  int    searchLimit    =    indexOf(cs,    searchChars,    PAD_LIMIT);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
108	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  null,  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  null,  0);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  null,  0);	  int    searchLimit    =    ArrayUtils.indexOf(searchChars,    null);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
109	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  /  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLen  =  searchChars.length  /  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  searchChars.length  /  1;	  int    searchLen    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
110	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLen  =  searchChars.length  +  2;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  searchChars.length  +  2;	  int    searchLen    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
111	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  cs);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  cs);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  cs);	  int    searchLimit    =    ArrayUtils.indexOfAny(searchChars,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
112	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  index);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  index);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  index);	  int    searchLimit    =    ArrayUtils.indexOfAny(searchChars,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
113	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(SearchChars.ANY,  searchChars);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(SearchChars.ANY,  searchChars);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOfAny(SearchChars.ANY,  searchChars);	  int    searchLimit    =    ArrayUtils.indexOfAny(searchChars,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
114	[BUG]  [BUGGY]  char  isEmpty(cs,  searchChars,  DECOMPOSED);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  isEmpty(cs,  searchChars,  DECOMPOSED);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  isEmpty(cs,  searchChars,  DECOMPOSED);	  int    isEmpty(cs,    searchChars,    DECOMPOSED);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
115	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars,  DECOMPOSED,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars,  DECOMPOSED,  0);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars,  DECOMPOSED,  0);	  int    isEmpty(cs,    searchChars,    DECOMPOSED);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
116	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  index  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  index  +  1);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  index  +  1);	  int    searchLimit    =    ArrayUtils.indexOf(searchChars,    index);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
117	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars,  0,  searchChars.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars,  0,  searchChars.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars,  0,  searchChars.length);	  int    isEmpty(cs,    searchChars,    0);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
118	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars,  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars,  1);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars,  1);	  int    isEmpty(cs,    searchChars,    0);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
119	[BUG]  [BUGGY]  char  isEmpty(cs,  searchChars,  0);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  isEmpty(cs,  searchChars,  0);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  isEmpty(cs,  searchChars,  0);	  int    isEmpty(cs,    searchChars,    0);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
120	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(cs,  searchChars,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(cs,  searchChars,  PAD_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOfAny(cs,  searchChars,  PAD_LIMIT);	  int    searchLimit    =    ArrayUtils.indexOfAny(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
121	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(cs,  searchChars,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(cs,  searchChars,  0);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOfAny(cs,  searchChars,  0);	  int    searchLimit    =    ArrayUtils.indexOfAny(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
122	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(SearchCharSequence.class,  searchChars);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(SearchCharSequence.class,  searchChars);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOfAny(SearchCharSequence.class,  searchChars);	  int    searchLimit    =    ArrayUtils.indexOfAny(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
123	[BUG]  [BUGGY]  if(cs  ==  null  ||!isEmpty(searchChars)&&  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(cs  ==  null  ||!isEmpty(searchChars)&&  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(cs  ==  null  ||!isEmpty(searchChars)&&  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars    ==    null    ||!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
124	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  0  ||!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  0  ||!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  0  ||!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars    ==    null    ||!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
125	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  0,  searchChars.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  0,  searchChars.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(cs,  searchChars,  0,  searchChars.length);	  int    searchLimit    =    indexOf(cs,    searchChars,    0);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
126	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  0,  searchCharsLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  0,  searchCharsLen);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(cs,  searchChars,  0,  searchCharsLen);	  int    searchLimit    =    indexOf(cs,    searchChars,    0);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
127	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars[0]))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars[0]))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars[0]))  {	  if(!isEmpty(cs)&&    searchChars.length    >    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
128	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars,  1))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars,  1))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars,  1))  {	  if(!isEmpty(cs)&&    searchChars.length    >    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
129	[BUG]  [BUGGY]  int  len  =  cs.length()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  len  =  cs.length()  -  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  cs.length()  -  1;	  int    len    =    searchChars.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
130	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  DECOMPOSED,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(cs,  searchChars,  DECOMPOSED,  0);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  DECOMPOSED,  0);	  int    index    =    indexOf(cs,    searchChars,    DECOMPOSED);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
131	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  PAD_LIMIT  |  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  PAD_LIMIT  |  INDEX_NOT_FOUND);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(cs,  searchChars,  PAD_LIMIT  |  INDEX_NOT_FOUND);	  int    searchLimit    =    indexOf(cs,    searchChars,    INDEX_NOT_FOUND);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
132	[BUG]  [BUGGY]  String  isEmpty(cs,  searchChars.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  String  isEmpty(cs,  searchChars.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	String  isEmpty(cs,  searchChars.length);	  char    isEmpty(cs,    searchChars.length);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
133	[BUG]  [BUGGY]  Char  char  isEmpty(cs,  searchChars.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  Char  char  isEmpty(cs,  searchChars.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	Char  char  isEmpty(cs,  searchChars.length);	  char    isEmpty(cs,    searchChars.length);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
134	[BUG]  [BUGGY]  char  char  cs  =  cs.charAt(searchChars.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  char  cs  =  cs.charAt(searchChars.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  char  cs  =  cs.charAt(searchChars.length);	  char    isEmpty(cs,    searchChars.length);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
135	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length()  +  cs.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLen  =  searchChars.length()  +  cs.length;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  searchChars.length()  +  cs.length;	  int    searchLen    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
136	[BUG]  [BUGGY]  int  searchLen  =  cs.length()  *  searchChars.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLen  =  cs.length()  *  searchChars.length;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  cs.length()  *  searchChars.length;	  int    searchLen    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
137	[BUG]  [BUGGY]  int  searchLen  =  cs.length()  +  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLen  =  cs.length()  +  searchChars.length  +  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  cs.length()  +  searchChars.length  +  1;	  int    searchLen    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
138	[BUG]  [BUGGY]  String  isEmpty(cs,  searchChars);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  String  isEmpty(cs,  searchChars);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	String  isEmpty(cs,  searchChars);	  char    isEmpty(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
139	[BUG]  [BUGGY]  Char  char  isEmpty(cs,  searchChars);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  Char  char  isEmpty(cs,  searchChars);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	Char  char  isEmpty(cs,  searchChars);	  char    isEmpty(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
140	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length,  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars.length,  1);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length,  1);	  int    isEmpty(cs,    searchChars.length,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
141	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length,  2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars.length,  2);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length,  2);	  int    isEmpty(cs,    searchChars.length,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
142	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length,  4);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars.length,  4);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length,  4);	  int    isEmpty(cs,    searchChars.length,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
143	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length,  searchChars.length);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars.length,  searchChars.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length,  searchChars.length);	  int    isEmpty(cs,    searchChars.length,    cs.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
144	[BUG]  [BUGGY]  char  isEmpty(cs,  searchChars.length,  cs.length);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  isEmpty(cs,  searchChars.length,  cs.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  isEmpty(cs,  searchChars.length,  cs.length);	  int    isEmpty(cs,    searchChars.length,    cs.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
145	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length,  cs.length  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars.length,  cs.length  +  1);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length,  cs.length  +  1);	  int    isEmpty(cs,    searchChars.length,    cs.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
146	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  0,  searchChars.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  0,  searchChars.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  0,  searchChars.length);	  int    searchLimit    =    ArrayUtils.indexOf(searchChars,    0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
147	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  1);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  1);	  int    searchLimit    =    ArrayUtils.indexOf(searchChars,    0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
148	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {	  if(isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(ch))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
149	[BUG]  [BUGGY]  if(isEmpty(cs)||  SearchChars.isEmpty(searchChars)||  isEmpty(ch))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  SearchChars.isEmpty(searchChars)||  isEmpty(ch))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  SearchChars.isEmpty(searchChars)||  isEmpty(ch))  {	  if(isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(ch))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
150	[BUG]  [BUGGY]  if(isEmpty(ch)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(ch)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(ch)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {	  if(isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(ch))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
151	[BUG]  [BUGGY]  if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars,  null))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars,  null))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars,  null))  {	  if(!isEmpty(cs)||    searchChars.length    >    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
152	[BUG]  [BUGGY]  if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars[0]))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars[0]))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars[0]))  {	  if(!isEmpty(cs)||    searchChars.length    >    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
153	[BUG]  [BUGGY]  if(isEmpty(cs)||  SearchChars.isEmpty(cs)||  isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  SearchChars.isEmpty(cs)||  isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  SearchChars.isEmpty(cs)||  isEmpty(searchChars))  {	  if(isEmpty(cs)||    SearchChars.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
154	[BUG]  [BUGGY]  if(isEmpty(cs)||  SearchChars.isEmpty(searchChars)||  isEmpty(cs,  INDEX_NOT_FOUND))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  SearchChars.isEmpty(searchChars)||  isEmpty(cs,  INDEX_NOT_FOUND))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  SearchChars.isEmpty(searchChars)||  isEmpty(cs,  INDEX_NOT_FOUND))  {	  if(isEmpty(cs)||    SearchChars.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
155	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  0,  cs.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(cs,  searchChars,  0,  cs.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  0,  cs.length);	  int    index    =    indexOf(cs,    searchChars,    0);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
156	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  len  =  searchChars.length  -  1  +  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  searchChars.length  -  1  +  1;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
157	[BUG]  [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars,  DECOMPOSE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars,  DECOMPOSE);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOfAny(cs,  searchChars,  DECOMPOSE);	  int    searchLimit    =    indexOfAny(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
158	[BUG]  [BUGGY]  char  searchLen  =  cs.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLen  =  cs.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLen  =  cs.length();	  int    searchLen    =    cs.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
159	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  ==  0)  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  searchChars.length  ==  0)  {	  if(!isEmpty(cs)&&    searchChars.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
160	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  searchChars.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  searchChars.length!=  0)  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  searchChars.length!=  0)  {	  if(!isEmpty(cs)&&    searchChars.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
161	[BUG]  [BUGGY]  Integer  searchLen  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  Integer  searchLen  =  searchChars.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	Integer  searchLen  =  searchChars.length();	  int    searchLen    =    searchChars.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
162	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  searchChars.length  +  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  searchChars.length  +  1;	  int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
163	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLen  =  searchChars.length  -  1  +  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  searchChars.length  -  1  +  1;	  int    searchLen    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
164	[BUG]  [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {	  if(!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
165	[BUG]  [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {	  if(!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
166	[BUG]  [BUGGY]  int  index  =  indexOfSequence(cs,  searchChars);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOfSequence(cs,  searchChars);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOfSequence(cs,  searchChars);	  int    index    =    indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
167	[BUG]  [BUGGY]  Char  searchLimit  =  cs.length();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  Char  searchLimit  =  cs.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	Char  searchLimit  =  cs.length();	  char    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
168	[BUG]  [BUGGY]  char  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars);	  char    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
169	[BUG]  [BUGGY]  char  searchLimit  =  ArrayUtils.indexOf(searchChars,  index);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLimit  =  ArrayUtils.indexOf(searchChars,  index);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLimit  =  ArrayUtils.indexOf(searchChars,  index);	  char    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
170	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  0)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  0)+  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  0)+  1;	  int    searchLimit    =    ArrayUtils.indexOf(searchChars,    0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
171	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {	  if(searchChars!=    null    ||    isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
172	[BUG]  [BUGGY]  if(searchChars!=  null  ||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars!=  null  ||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars!=  null  ||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {	  if(searchChars!=    null    ||    isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
173	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length  -  1,  cs.length);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars.length  -  1,  cs.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length  -  1,  cs.length);	  int    isEmpty(cs,    searchChars.length,    cs.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
174	[BUG]  [BUGGY]  if(searchChars!=  null  ||!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars!=  null  ||!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars!=  null  ||!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars    ==    null    ||!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
175	[BUG]  [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)&&  ArrayUtils.mayHaveSideEffects(searchChars))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)&&  ArrayUtils.mayHaveSideEffects(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||!isEmpty(cs)&&  ArrayUtils.mayHaveSideEffects(searchChars))  {	  if(searchChars    ==    null    ||!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
176	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  searchChars.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  searchChars.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  searchChars.length);	  int    searchLimit    =    ArrayUtils.indexOfAny(searchChars,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
177	[BUG]  [BUGGY]  char  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  searchChars);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  searchChars);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  searchChars);	  int    searchLimit    =    ArrayUtils.indexOfAny(searchChars,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
178	[BUG]  [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)&&  SearchChars.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)&&  SearchChars.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||!isEmpty(cs)&&  SearchChars.isEmpty(searchChars))  {	  if(!isEmpty(cs)&&    SearchChars.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
179	[BUG]  [BUGGY]  if(searchChars!=  null  ||!isEmpty(cs)&&  SearchChars.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars!=  null  ||!isEmpty(cs)&&  SearchChars.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars!=  null  ||!isEmpty(cs)&&  SearchChars.isEmpty(searchChars))  {	  if(!isEmpty(cs)&&    SearchChars.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
180	[BUG]  [BUGGY]  if(isEmpty(cs)&&  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)&&  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)&&  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(isEmpty(cs)||    searchChars.length!=    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
181	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  DECOMPOSE_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(cs,  searchChars,  DECOMPOSE_NOT_FOUND);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  DECOMPOSE_NOT_FOUND);	  int    index    =    indexOf(cs,    searchChars,    PAD_LIMIT);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
182	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  SearchChars.isEmpty(cs)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars  ==  null  ||  SearchChars.isEmpty(cs)||  isEmpty(cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||  SearchChars.isEmpty(cs)||  isEmpty(cs))  {	  if(isEmpty(cs)||    SearchChars.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
183	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  isEmpty(cs)||  SearchChars.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars  ==  null  ||  isEmpty(cs)||  SearchChars.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||  isEmpty(cs)||  SearchChars.isEmpty(searchChars)||  isEmpty(cs))  {	  if(isEmpty(cs)||    SearchChars.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
184	[BUG]  [BUGGY]  char  isEmpty(cs,  searchChars.length,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  isEmpty(cs,  searchChars.length,  0);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  isEmpty(cs,  searchChars.length,  0);	  int    isEmpty(cs,    searchChars.length,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
185	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars  ==  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {	  if(isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(ch))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
186	[BUG]  [BUGGY]  if(searchChars!=  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars!=  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars!=  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {	  if(isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(ch))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
187	[BUG]  [BUGGY]  if(!isEmpty(cs)||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(!isEmpty(cs)||    searchChars.length    >    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
188	[BUG]  [BUGGY]  if(!isEmpty(cs)||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(!isEmpty(cs)||    searchChars.length    >    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
189	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  null))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  null))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  null))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars,    ch))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
190	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  false))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  false))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  false))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars,    ch))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
191	[BUG]  [BUGGY]  int  searchLimit  =  cs.indexOf(searchChars,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  cs.indexOf(searchChars,  0);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  cs.indexOf(searchChars,  0);	  int    searchLimit    =    cs.indexOf(searchChars);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
192	[BUG]  [BUGGY]  Integer  len  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  Integer  len  =  searchChars.length();  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	Integer  len  =  searchChars.length();	  int    len    =    searchChars.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
193	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(!isEmpty(cs)&&    searchChars.length    >    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
194	[BUG]  [BUGGY]  int  index  =  indexOf(searchChars,  cs,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(searchChars,  cs,  INDEX_NOT_FOUND);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(searchChars,  cs,  INDEX_NOT_FOUND);	  int    index    =    indexOf(cs,    searchChars,    INDEX_NOT_FOUND);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
195	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  csLimit  =  searchChars.length  -  1  +  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  csLimit  =  searchChars.length  -  1  +  1;	  int    csLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
196	[BUG]  [BUGGY]  char  searchLimit  =  indexOf(cs,  searchChars,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLimit  =  indexOf(cs,  searchChars,  INDEX_NOT_FOUND);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLimit  =  indexOf(cs,  searchChars,  INDEX_NOT_FOUND);	  int    searchLimit    =    indexOf(cs,    searchChars,    INDEX_NOT_FOUND);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
197	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  2))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  2))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  2))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars,    0))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
198	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {	  if(searchChars    ==    null    ||    isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
199	[BUG]  [BUGGY]  int  len  =  cs.length()  -  searchChars.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  len  =  cs.length()  -  searchChars.length;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  cs.length()  -  searchChars.length;	  int    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
200	[BUG]  [BUGGY]  if(searchChars!=  null  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars!=  null  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars!=  null  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars    ==    null    ||!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
201	[BUG]  [BUGGY]  if(cs  ==  null  ||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(cs  ==  null  ||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(cs  ==  null  ||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(cs    ==    null    ||    isEmpty(searchChars)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
202	[BUG]  [BUGGY]  if(cs  ==  null  ||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(cs  ==  null  ||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(cs  ==  null  ||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(cs    ==    null    ||    isEmpty(searchChars)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
203	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  0)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  0)+  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(cs,  searchChars,  0)+  1;	  int    searchLimit    =    indexOf(cs,    searchChars,    0);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
204	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length  ==  0  ||  ObjectUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  searchChars.length  ==  0  ||  ObjectUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length  ==  0  ||  ObjectUtils.isEmpty(searchChars))  {	  if(isEmpty(cs)||    searchChars.length    ==    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
205	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars,  false))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars,  false))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars,  false))  {	  if(isEmpty(cs)||    searchChars.length    ==    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
206	[BUG]  [BUGGY]  if(cs  ==  null  ||  searchChars.length  ==  0  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(cs  ==  null  ||  searchChars.length  ==  0  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(cs  ==  null  ||  searchChars.length  ==  0  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars    ==    null    ||!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
207	[BUG]  [BUGGY]  if(!isEmpty(cs)||  SearchChars.isWhitespace(searchChars))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  SearchChars.isWhitespace(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  SearchChars.isWhitespace(searchChars))  {	  if(!isEmpty(cs)||    SearchChars.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
208	[BUG]  [BUGGY]  int  index  =  indexOf(searchChars,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(searchChars,  INDEX_NOT_FOUND);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(searchChars,  INDEX_NOT_FOUND);	  int    index    =    indexOf(cs,    searchChars,    INDEX_NOT_FOUND);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
209	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0  ||  cs.charAt(0)!=  '-')  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0  ||  cs.charAt(0)!=  '-')  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  searchChars.length  >  0  ||  cs.charAt(0)!=  '-')  {	  if(!isEmpty(cs)&&    searchChars.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
210	[BUG]  [BUGGY]  if(!isEmpty(cs)||  searchChars.length  <  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  searchChars.length  <  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  searchChars.length  <  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(!isEmpty(cs)||    searchChars.length    >    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
211	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars,  false);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars,  false);	  int    isEmpty(cs,    searchChars,    DECOMPOSED);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
212	[BUG]  [BUGGY]  CharSequence  char  =  cs.charAt(searchChars.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  CharSequence  char  =  cs.charAt(searchChars.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	CharSequence  char  =  cs.charAt(searchChars.length);	  char    isEmpty(cs,    searchChars.length);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
213	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length  <  1)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  searchChars.length  <  1)  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length  <  1)  {	  if(isEmpty(cs)||    searchChars.length    <    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
214	[BUG]  [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(!isEmpty(cs)&&    searchChars.length    >    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
215	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  index  =  indexOf(cs,  searchChars,  false);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  false);	  int    index    =    indexOf(cs,    searchChars,    DECOMPOSED);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
216	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length,  3);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  isEmpty(cs,  searchChars.length,  3);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length,  3);	  int    isEmpty(cs,    searchChars.length,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
217	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length!=  2  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(cs)||  searchChars.length!=  2  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length!=  2  ||  ArrayUtils.isEmpty(searchChars))  {	  if(isEmpty(cs)||    searchChars.length!=    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
218	[BUG]  [BUGGY]  if(cs  ==  null  ||  searchChars.length  ==  0  ||!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(cs  ==  null  ||  searchChars.length  ==  0  ||!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(cs  ==  null  ||  searchChars.length  ==  0  ||!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars    ==    null    ||!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
219	[BUG]  [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars,  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars,  null);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOfAny(cs,  searchChars,  null);	  int    searchLimit    =    indexOfAny(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
220	[BUG]  [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  2))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  2))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  2))  {	  if(!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars,    0))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
221	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(searchChars,  cs,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOf(searchChars,  cs,  INDEX_NOT_FOUND);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(searchChars,  cs,  INDEX_NOT_FOUND);	  int    searchLimit    =    indexOf(cs,    searchChars,    INDEX_NOT_FOUND);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
222	[BUG]  [BUGGY]  char  searchLimit  =  ArrayUtils.indexOf(searchChars,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLimit  =  ArrayUtils.indexOf(searchChars,  null);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLimit  =  ArrayUtils.indexOf(searchChars,  null);	  char    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
223	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  PAD_LIMIT);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  PAD_LIMIT);	  int    searchLimit    =    ArrayUtils.indexOfAny(searchChars,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
224	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs.length  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs.length  -  1);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs.length  -  1);	  int    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs.length);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
225	[BUG]  [BUGGY]  int  searchLen  =  cs.length  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLen  =  cs.length  -  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  cs.length  -  1;	  int    searchLen    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
226	[BUG]  [BUGGY]  char  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  char  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars.length);	  int    searchLimit    =    ArrayUtils.indexOf(searchChars,    searchChars.length);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
227	[BUG]  [BUGGY]  if(isEmpty(ch)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(isEmpty(ch)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(ch)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {	  if(isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(ch))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
228	[BUG]  [BUGGY]  int  searchLen  =  cs.length  -  searchChars.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLen  =  cs.length  -  searchChars.length;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  cs.length  -  searchChars.length;	  int    searchLen    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
229	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  this.endLimit);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  this.endLimit);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(cs,  searchChars,  this.endLimit);	  int    searchLimit    =    indexOf(cs,    searchChars,    PAD_LIMIT);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
230	[BUG]  [BUGGY]  int  searchLimit  =  cs.length()  *  searchChars.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  cs.length()  *  searchChars.length;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  cs.length()  *  searchChars.length;	  int    searchLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
231	[BUG]  [BUGGY]  int  searchLimit  =  cs.length()  +  searchChars.length  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  cs.length()  +  searchChars.length  -  1;  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  cs.length()  +  searchChars.length  -  1;	  int    searchLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
232	[BUG]  [BUGGY]  Char  cs  =  isEmpty(cs,  searchChars);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  Char  cs  =  isEmpty(cs,  searchChars);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	Char  cs  =  isEmpty(cs,  searchChars);	  char    isEmpty(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
233	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  null,  cs.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  null,  cs.length);  [BUGGY]      if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  null,  cs.length);	  int    searchLimit    =    ArrayUtils.indexOf(searchChars,    null);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
234	[BUG]  [BUGGY]  if(cs  ==  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {      [BUGGY]  if(cs  ==  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]      return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(cs  ==  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars!=    null    ||    isEmpty(cs)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
