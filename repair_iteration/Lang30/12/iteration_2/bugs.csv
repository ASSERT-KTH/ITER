bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length()  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  searchChars.length()  -  1;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  searchChars.length()  -  1;	      int    searchLen    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
2	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  searchChars.length()  +  1;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  searchChars.length()  +  1;	      int    searchLen    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
3	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  PAD_LIMIT);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(cs,  searchChars,  PAD_LIMIT);	      int    searchLimit    =    indexOf(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  0);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(cs,  searchChars,  0);	      int    searchLimit    =    indexOf(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  INDEX_NOT_FOUND);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(cs,  searchChars,  INDEX_NOT_FOUND);	      int    searchLimit    =    indexOf(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  MAX_LIMIT);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  MAX_LIMIT);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(cs,  searchChars,  MAX_LIMIT);	      int    searchLimit    =    indexOf(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  char  isEmpty(cs,  searchChars.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char  isEmpty(cs,  searchChars.length);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  isEmpty(cs,  searchChars.length);	      int    isEmpty(cs,    searchChars.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
8	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  isEmpty(cs,  searchChars.length,  INDEX_NOT_FOUND);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length,  INDEX_NOT_FOUND);	      int    isEmpty(cs,    searchChars.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
9	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  isEmpty(cs,  searchChars.length,  0);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length,  0);	      int    isEmpty(cs,    searchChars.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
10	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length,  cs.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  isEmpty(cs,  searchChars.length,  cs.length);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length,  cs.length);	      int    isEmpty(cs,    searchChars.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
11	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
12	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  SearchChars.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(!isEmpty(cs)&&  SearchChars.isEmpty(searchChars))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  SearchChars.isEmpty(searchChars))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
13	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  searchChars.length  -  1;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  searchChars.length  -  1;	      int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
14	[BUG]  [BUGGY]  int  searchLen  =  cs.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  cs.length;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  cs.length;	      int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
15	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  searchChars.length  -  2;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  searchChars.length  -  2;	      int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
16	[BUG]  [BUGGY]  int  searchLen  =  cs.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  cs.length()  +  searchChars.length;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  cs.length()  +  searchChars.length;	      int    searchLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  int  searchLen  =  cs.length()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  cs.length()  +  1;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  cs.length()  +  1;	      int    searchLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs.length);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs.length);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs.length);	      int    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  0);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  0);	      int    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(cs,  searchChars);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(cs,  searchChars);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOfAny(cs,  searchChars);	      int    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  index);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  index);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  index);	      int    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  csLimit  =  searchChars.length()  +  1;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  csLimit  =  searchChars.length()  +  1;	      int    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
23	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  csLimit  =  searchChars.length()  -  1;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  csLimit  =  searchChars.length()  -  1;	      int    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
24	[BUG]  [BUGGY]  int  csLimit  =  cs.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  csLimit  =  cs.length();  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  csLimit  =  cs.length();	      int    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  int  len  =  cs.length();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  len  =  cs.length();  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  cs.length();	      int    len    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
26	[BUG]  [BUGGY]  int  len  =  searchChars.length()  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  len  =  searchChars.length()  -  1;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  searchChars.length()  -  1;	      int    len    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
27	[BUG]  [BUGGY]  int  len  =  searchChars.length()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  len  =  searchChars.length()  +  1;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  searchChars.length()  +  1;	      int    len    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
28	[BUG]  [BUGGY]  if(cs  ==  null  ||  isEmpty(searchChars)||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(cs  ==  null  ||  isEmpty(searchChars)||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(cs  ==  null  ||  isEmpty(searchChars)||  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars    ==    null    ||    isEmpty(cs)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
29	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||  isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||  isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars    ==    null    ||    isEmpty(cs)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
30	[BUG]  [BUGGY]  if(isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(ch))  {	  if(isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  if(isEmpty(cs)||  SearchChars.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(isEmpty(cs)||  SearchChars.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  SearchChars.isEmpty(searchChars)||  isEmpty(cs))  {	  if(isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
32	[BUG]  [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {	  if(isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
33	[BUG]  [BUGGY]  int  searchLimit  =  cs.indexOf(searchChars);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  cs.indexOf(searchChars);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  cs.indexOf(searchChars);	      int    searchLimit    =    ArrayUtils.indexOf(searchChars);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
34	[BUG]  [BUGGY]  if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  searchChars.length  >  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  if(!isEmpty(cs)||  SearchChars.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(!isEmpty(cs)||  SearchChars.isEmpty(searchChars))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  SearchChars.isEmpty(searchChars))  {	  if(!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  searchChars.length();  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  searchChars.length();	      int    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
37	[BUG]  [BUGGY]  int  searchLimit  =  cs.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  cs.length()  +  searchChars.length;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  cs.length()  +  searchChars.length;	      int    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  char  searchLimit  =  cs.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char  searchLimit  =  cs.length();  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLimit  =  cs.length();	      int    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(isEmpty(cs)||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length  ==  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(isEmpty(cs)||    searchChars.length    >    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(isEmpty(cs)||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length!=  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(isEmpty(cs)||    searchChars.length    >    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length  >=  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(isEmpty(cs)||  searchChars.length  >=  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length  >=  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(isEmpty(cs)||    searchChars.length    >    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  0);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  index  =  indexOf(cs,  searchChars,  0);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  0);	      int    index    =    indexOf(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  index  =  indexOf(cs,  searchChars,  INDEX_NOT_FOUND);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  INDEX_NOT_FOUND);	      int    index    =    indexOf(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  DECOMPOSE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  index  =  indexOf(cs,  searchChars,  DECOMPOSE);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  DECOMPOSE);	      int    index    =    indexOf(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  DECOMPOSED);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  index  =  indexOf(cs,  searchChars,  DECOMPOSED);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  DECOMPOSED);	      int    index    =    indexOf(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
46	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars,  INDEX_NOT_FOUND);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  isEmpty(cs,  searchChars,  INDEX_NOT_FOUND);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars,  INDEX_NOT_FOUND);	      int    isEmpty(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
47	[BUG]  [BUGGY]  char  isEmpty(cs,  searchChars);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char  isEmpty(cs,  searchChars);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  isEmpty(cs,  searchChars);	      int    isEmpty(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
48	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars,  DECOMPOSED);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  isEmpty(cs,  searchChars,  DECOMPOSED);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars,  DECOMPOSED);	      int    isEmpty(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
49	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  isEmpty(cs,  searchChars,  0);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars,  0);	      int    isEmpty(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
50	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {	  if(isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  if(searchChars!=  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars!=  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars!=  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars)||  isEmpty(cs))  {	  if(isEmpty(cs)||    ArrayUtils.isEmpty(searchChars)||    isEmpty(cs))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {	  if(!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
53	[BUG]  [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  0))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  0))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)||  ArrayUtils.isEmpty(searchChars,  0))  {	  if(!isEmpty(cs)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
54	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLen  =  searchChars.length  +  1;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLen  =  searchChars.length  +  1;	      int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
55	[BUG]  [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  DECOMPOSE);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  indexOf(cs,  searchChars,  DECOMPOSE);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOf(cs,  searchChars,  DECOMPOSE);	      int    searchLimit    =    indexOf(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
56	[BUG]  [BUGGY]  if(searchChars!=  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars!=  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars!=  null  ||  isEmpty(cs)||  ArrayUtils.isEmpty(searchChars))  {	  if(searchChars    ==    null    ||    isEmpty(cs)||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
57	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  0))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  0))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  0))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
58	[BUG]  [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(searchChars  ==  null  ||!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(searchChars  ==  null  ||!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
59	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(!isEmpty(cs)&&  searchChars.length  >  0)  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  searchChars.length  >  0)  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
60	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars.length);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars.length);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars.length);	      int    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
61	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  searchChars);	      int    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
62	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  searchChars);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  searchChars);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOfAny(searchChars,  searchChars);	      int    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
63	[BUG]  [BUGGY]  char  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  char  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	char  searchLimit  =  ArrayUtils.indexOf(searchChars,  cs);	      int    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
64	[BUG]  [BUGGY]  if(isEmpty(cs)||  searchChars.length  <  0  ||  ArrayUtils.isEmpty(searchChars))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(isEmpty(cs)||  searchChars.length  <  0  ||  ArrayUtils.isEmpty(searchChars))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(isEmpty(cs)||  searchChars.length  <  0  ||  ArrayUtils.isEmpty(searchChars))  {	  if(isEmpty(cs)||    searchChars.length    >    0    ||    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
65	[BUG]  [BUGGY]  int  index  =  indexOf(cs,  searchChars,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  index  =  indexOf(cs,  searchChars,  PAD_LIMIT);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(cs,  searchChars,  PAD_LIMIT);	      int    index    =    indexOf(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
66	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  len  =  searchChars.length  -  1;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  searchChars.length  -  1;	      int    len    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
67	[BUG]  [BUGGY]  int  isEmpty(cs,  searchChars.length  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  isEmpty(cs,  searchChars.length  -  1);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  isEmpty(cs,  searchChars.length  -  1);	      int    isEmpty(cs,    searchChars.length);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
68	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  csLimit  =  searchChars.length;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  csLimit  =  searchChars.length;	      int    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
69	[BUG]  [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  ch))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  ch))  {  [BUGGY]    return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	if(!isEmpty(cs)&&  ArrayUtils.isEmpty(searchChars,  ch))  {	  if(!isEmpty(cs)&&    ArrayUtils.isEmpty(searchChars))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
70	[BUG]  [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  null);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  ArrayUtils.indexOf(searchChars,  null);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  ArrayUtils.indexOf(searchChars,  null);	      int    searchLimit    =    ArrayUtils.indexOf(searchChars,    cs);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
71	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  searchChars.length;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  searchChars.length;	      int    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
72	[BUG]  [BUGGY]  int  searchLimit  =  cs.length()  -  searchChars.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  cs.length()  -  searchChars.length;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  cs.length()  -  searchChars.length;	      int    searchLimit    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
73	[BUG]  [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  searchLimit  =  indexOfAny(cs,  searchChars);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  searchLimit  =  indexOfAny(cs,  searchChars);	      int    searchLimit    =    indexOf(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
74	[BUG]  [BUGGY]  int  len  =  searchChars.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  len  =  searchChars.length;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  len  =  searchChars.length;	      int    len    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
75	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  csLimit  =  searchChars.length  -  1;  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  csLimit  =  searchChars.length  -  1;	      int    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
76	[BUG]  [BUGGY]  int  index  =  indexOf(searchChars,  cs);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {    [BUGGY]  int  index  =  indexOf(searchChars,  cs);  [BUGGY]    if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1372	1372	10	replace	int  index  =  indexOf(searchChars,  cs);	      int    index    =    indexOf(cs,    searchChars);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
