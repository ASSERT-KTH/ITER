bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
3	[BUG] [BUGGY] int csLen = cs.length(); [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } [BUGGY] int csLen = cs.length(); [BUGGY] int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   return false; } } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean containsNone(CharSequence cs, char[] searchChars) { if (cs == null || searchChars == null) { return true; } [BUGGY] [BUGGY] int csLen = cs.length(); int searchLen = searchChars.length; for (int i = 0; i < csLen; i++) { char ch = cs.charAt(i); for (int j = 0; j < searchLen; j++) { if (searchChars[j] == ch) {   return false; } } [CLASS] StringUtils [METHOD] containsNone [RETURN_TYPE] boolean  CharSequence cs char[] searchChars [VARIABLES] CharSequence cs char ch String EMPTY decomposed input searchChars searchStr str str1 str2 stripChars ts validChars boolean int INDEX_NOT_FOUND PAD_LIMIT csLast csLen csLength end endLimit found i index j len max ordinal searchLast searchLen searchLength start startPos strLen strsLen char[] searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	add	
