bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(searchChars.length  ==  0)  {  if(cs.length()!=  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length  ==  0)  {  if(cs.length()!=  0)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length  ==  0)  {  if(cs.length()!=  0)  {  return  false;  }	  if(searchChars.length!=    0)    {    if(cs.length()!=    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
2	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0)  {  if(cs.length()!=  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0)  {  if(cs.length()!=  0)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  0)  {  if(cs.length()!=  0)  {  return  false;  }	  if(searchChars.length!=    0)    {    if(cs.length()!=    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
3	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  searchLen  =  searchChars.length  +  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  searchLen  =  searchChars.length  +  1;	  int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
4	[BUG]  [BUGGY]  if(cs  ==  null  ||!cs.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(cs  ==  null  ||!cs.isEmpty())  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(cs  ==  null  ||!cs.isEmpty())  {  return  false;  }	  if(searchChars    ==    null    ||!cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  if(searchChars!=  null  ||!cs.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars!=  null  ||!cs.isEmpty())  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars!=  null  ||!cs.isEmpty())  {  return  false;  }	  if(searchChars    ==    null    ||!cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
6	[BUG]  [BUGGY]  if(cs.length()!=  searchChars.length)return  false;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(cs.length()!=  searchChars.length)return  false;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(cs.length()!=  searchChars.length)return  false;	  if(searchChars    ==    null)    {    if(cs.length()!=    searchChars.length)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
7	[BUG]  [BUGGY]  if(searchChars.length()!=  searchChars.length)return  false;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length()!=  searchChars.length)return  false;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length()!=  searchChars.length)return  false;	  if(searchChars    ==    null)    {    if(cs.length()!=    searchChars.length)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
8	[BUG]  [BUGGY]  if(searchChars.length()!=  cs.length())return  false;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length()!=  cs.length())return  false;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length()!=  cs.length())return  false;	  if(searchChars    ==    null)    {    if(cs.length()!=    searchChars.length)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
9	[BUG]  [BUGGY]  if(cs.length()  ==  searchChars.length)return  false;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(cs.length()  ==  searchChars.length)return  false;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(cs.length()  ==  searchChars.length)return  false;	  if(searchChars    ==    null)    {    if(cs.length()!=    searchChars.length)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
10	[BUG]  [BUGGY]  Integer  csLen  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  Integer  csLen  =  searchChars.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	Integer  csLen  =  searchChars.length();	  Integer    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
11	[BUG]  [BUGGY]  char  csLen  =  cs.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  char  csLen  =  cs.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	char  csLen  =  cs.length;	  int    csLen    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
12	[BUG]  [BUGGY]  Integer  csLen  =  cs.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  Integer  csLen  =  cs.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	Integer  csLen  =  cs.length;	  int    csLen    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
13	[BUG]  [BUGGY]  if(!containsNone(cs,  searchChars))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(!containsNone(cs,  searchChars))  {  return  true;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(!containsNone(cs,  searchChars))  {  return  true;  }	  if(!containsNone(cs,    searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  if(searchChars!=  null  ||!containsNone(cs,  searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars!=  null  ||!containsNone(cs,  searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars!=  null  ||!containsNone(cs,  searchChars))  {  return  false;  }	  if(!containsNone(cs,    searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  len  =  searchChars.length  -  2;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  len  =  searchChars.length  -  2;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  len  =  searchChars.length  -  4;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  len  =  searchChars.length  -  4;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  len  =  searchChars.length  -  3;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  len  =  searchChars.length  -  3;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  String  len  =  cs.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  String  len  =  cs.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	String  len  =  cs.length();	  char    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
19	[BUG]  [BUGGY]  Char  len  =  cs.length();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  Char  len  =  cs.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	Char  len  =  cs.length();	  char    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
20	[BUG]  [BUGGY]  char  len  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  char  len  =  searchChars.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	char  len  =  searchChars.length();	  char    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
21	[BUG]  [BUGGY]  String  searchLen  =  cs.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  String  searchLen  =  cs.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	String  searchLen  =  cs.length();	  char    searchLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
22	[BUG]  [BUGGY]  char  searchLen  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  char  searchLen  =  searchChars.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	char  searchLen  =  searchChars.length();	  char    searchLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
23	[BUG]  [BUGGY]  Char  searchLen  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  Char  searchLen  =  searchChars.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	Char  searchLen  =  searchChars.length();	  char    searchLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
24	[BUG]  [BUGGY]  Integer  searchLen  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  Integer  searchLen  =  searchChars.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	Integer  searchLen  =  searchChars.length();	  int    searchLen    =    searchChars.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  csLen  =  searchChars.length  -  4;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  csLen  =  searchChars.length  -  4;	  int    csLen    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
26	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  csLen  =  searchChars.length  -  3;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  csLen  =  searchChars.length  -  3;	  int    csLen    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
27	[BUG]  [BUGGY]  Integer  len  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  Integer  len  =  searchChars.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	Integer  len  =  searchChars.length();	  int    len    =    searchChars.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
28	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  searchLen  =  searchChars.length  -  2;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  searchLen  =  searchChars.length  -  2;	  int    searchLen    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  searchLen  =  searchChars.length  -  4;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  searchLen  =  searchChars.length  -  4;	  int    searchLen    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  searchLen  =  searchChars.length  -  3;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  searchLen  =  searchChars.length  -  3;	  int    searchLen    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  if(!cs.isEmpty())  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(!cs.isEmpty())  {  return  true;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(!cs.isEmpty())  {  return  true;  }	  if(!cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
32	[BUG]  [BUGGY]  if(!cs.isEmpty()  ||  searchChars.length  >  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(!cs.isEmpty()  ||  searchChars.length  >  0)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(!cs.isEmpty()  ||  searchChars.length  >  0)  {  return  false;  }	  if(!cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
33	[BUG]  [BUGGY]  if(cs.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(cs.isEmpty())  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(cs.isEmpty())  {  return  false;  }	  if(!cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
34	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  if(cs.length()  ==  searchChars.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars  ==  null)  {  if(cs.length()  ==  searchChars.length)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars  ==  null)  {  if(cs.length()  ==  searchChars.length)  {  return  false;  }	  if(searchChars!=    null)    {    if(cs.length()    ==    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  if(searchChars.length()  ==  cs.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length()  ==  cs.length)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length()  ==  cs.length)  {  return  false;  }	  if(searchChars!=    null)    {    if(cs.length()    ==    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  if(searchChars!=  null  ||!cs.contains(searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars!=  null  ||!cs.contains(searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars!=  null  ||!cs.contains(searchChars))  {  return  false;  }	  if(searchChars    ==    null    ||!cs.contains(searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
37	[BUG]  [BUGGY]  if(cs  ==  null  ||!cs.contains(searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(cs  ==  null  ||!cs.contains(searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(cs  ==  null  ||!cs.contains(searchChars))  {  return  false;  }	  if(searchChars    ==    null    ||!cs.contains(searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
38	[BUG]  [BUGGY]  if(!cs.contains(searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(!cs.contains(searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(!cs.contains(searchChars))  {  return  false;  }	  if(searchChars    ==    null    ||!cs.contains(searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
39	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  /  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  csLen  =  searchChars.length  /  2;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  csLen  =  searchChars.length  /  2;	  int    csLen    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
40	[BUG]  [BUGGY]  if(searchChars.length  ==  0)  {  if(cs.length()!=  searchChars.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length  ==  0)  {  if(cs.length()!=  searchChars.length)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length  ==  0)  {  if(cs.length()!=  searchChars.length)  {  return  false;  }	  if(searchChars.length!=    0)    {    if(cs.length()!=    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
41	[BUG]  [BUGGY]  if(searchChars.length!=  0)  {  if(cs.length()!=  searchChars.length)return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length!=  0)  {  if(cs.length()!=  searchChars.length)return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length!=  0)  {  if(cs.length()!=  searchChars.length)return  false;  }	  if(searchChars.length!=    0)    {    if(cs.length()!=    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
42	[BUG]  [BUGGY]  if(searchChars.length  ==  0)  {  if(cs.length()!=  searchChars.length)return  false;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length  ==  0)  {  if(cs.length()!=  searchChars.length)return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length  ==  0)  {  if(cs.length()!=  searchChars.length)return  false;  }	  if(searchChars.length!=    0)    {    if(cs.length()!=    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
43	[BUG]  [BUGGY]  int  len  =  searchChars.length()  +  cs.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  len  =  searchChars.length()  +  cs.length;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  len  =  searchChars.length()  +  cs.length;	  int    len    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
44	[BUG]  [BUGGY]  int  len  =  cs.length()  *  searchChars.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  len  =  cs.length()  *  searchChars.length;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  len  =  cs.length()  *  searchChars.length;	  int    len    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
45	[BUG]  [BUGGY]  String  csLen  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  String  csLen  =  searchChars.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	String  csLen  =  searchChars.length();	  String    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
46	[BUG]  [BUGGY]  Character  csLen  =  cs.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  Character  csLen  =  cs.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	Character  csLen  =  cs.length();	  String    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
47	[BUG]  [BUGGY]  Char  csLen  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  Char  csLen  =  searchChars.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	Char  csLen  =  searchChars.length();	  Char    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
48	[BUG]  [BUGGY]  Char  csLen  =  cs.length()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  Char  csLen  =  cs.length()  +  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	Char  csLen  =  cs.length()  +  1;	  Char    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
49	[BUG]  [BUGGY]  char  csLen  =  searchChars.length()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  char  csLen  =  searchChars.length()  +  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	char  csLen  =  searchChars.length()  +  1;	  char    csLen    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
50	[BUG]  [BUGGY]  if(searchChars.length!=  0)  {  if(!cs.contains(searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length!=  0)  {  if(!cs.contains(searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length!=  0)  {  if(!cs.contains(searchChars))  {  return  false;  }	  if(searchChars.length    ==    0)    {    if(!cs.contains(searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
51	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  if(!cs.contains(searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  if(!cs.contains(searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  if(!cs.contains(searchChars))  {  return  false;  }	  if(searchChars.length    ==    0)    {    if(!cs.contains(searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
52	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars  ==  null)  {  if(!cs.contains(searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars  ==  null)  {  if(!cs.contains(searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars  ==  null  ||  searchChars  ==  null)  {  if(!cs.contains(searchChars))  {  return  false;  }	  if(cs    ==    null    ||    searchChars    ==    null)    {    if(!cs.contains(searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
53	[BUG]  [BUGGY]  if(searchChars!=  null)  {  if(cs.length()!=  searchChars.length)return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars!=  null)  {  if(cs.length()!=  searchChars.length)return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars!=  null)  {  if(cs.length()!=  searchChars.length)return  false;  }	  if(searchChars!=    null)    {    if(cs.length()!=    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
54	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  /  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  csLen  =  searchChars.length  /  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  csLen  =  searchChars.length  /  1;	  int    csLen    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  csLen  =  searchChars.length  +  2;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  csLen  =  searchChars.length  +  2;	  int    csLen    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
56	[BUG]  [BUGGY]  if(searchChars.length()!=  cs.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length()!=  cs.length)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length()!=  cs.length)  {  return  false;  }	  if(cs.length()!=    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
57	[BUG]  [BUGGY]  if(searchChars.length()!=  cs.length())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length()!=  cs.length())  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length()!=  cs.length())  {  return  false;  }	  if(cs.length()!=    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
58	[BUG]  [BUGGY]  if(cs.length()  ==  searchChars.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(cs.length()  ==  searchChars.length)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(cs.length()  ==  searchChars.length)  {  return  false;  }	  if(cs.length()!=    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
59	[BUG]  [BUGGY]  if(searchChars!=  null)  {  if(cs.length()!=  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars!=  null)  {  if(cs.length()!=  0)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars!=  null)  {  if(cs.length()!=  0)  {  return  false;  }	  if(searchChars    ==    null)    {    if(cs.length()!=    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
60	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length()!=  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length()!=  0)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars  ==  null  ||  searchChars.length()!=  0)  {  return  false;  }	  if(searchChars    ==    null)    {    if(cs.length()!=    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
61	[BUG]  [BUGGY]  if(searchChars!=  null)  {  if(cs.length()  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars!=  null)  {  if(cs.length()  ==  0)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars!=  null)  {  if(cs.length()  ==  0)  {  return  false;  }	  if(searchChars    ==    null)    {    if(cs.length()!=    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
62	[BUG]  [BUGGY]  if(!cs.isEmpty())return  false;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(!cs.isEmpty())return  false;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(!cs.isEmpty())return  false;	  if(searchChars    ==    null)    {    if(!cs.isEmpty())return    false;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
63	[BUG]  [BUGGY]  if(searchChars  ==  null  ||!cs.isEmpty())return  false;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars  ==  null  ||!cs.isEmpty())return  false;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars  ==  null  ||!cs.isEmpty())return  false;	  if(searchChars    ==    null)    {    if(!cs.isEmpty())return    false;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
64	[BUG]  [BUGGY]  if(searchChars  ==  null)return  false;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars  ==  null)return  false;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars  ==  null)return  false;	  if(searchChars    ==    null)    {    if(!cs.isEmpty())return    false;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
65	[BUG]  [BUGGY]  if(cs  ==  null  ||!cs.isEmpty())return  false;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(cs  ==  null  ||!cs.isEmpty())return  false;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(cs  ==  null  ||!cs.isEmpty())return  false;	  if(searchChars    ==    null)    {    if(!cs.isEmpty())return    false;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
66	[BUG]  [BUGGY]  ||  cs.contains(searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  ||  cs.contains(searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	||  cs.contains(searchChars))  {  return  false;  }	  ||!cs.contains(searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
67	[BUG]  [BUGGY]  ||!cs.contains(searchChars))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  ||!cs.contains(searchChars))  {  return  true;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	||!cs.contains(searchChars))  {  return  true;  }	  ||!cs.contains(searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
68	[BUG]  [BUGGY]  int  len  =  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  len  =  searchChars.length  +  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  len  =  searchChars.length  +  1;	  int    len    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
69	[BUG]  [BUGGY]  char  csLen  =  searchChars.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  char  csLen  =  searchChars.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	char  csLen  =  searchChars.length;	  char    csLen    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
70	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  if(searchChars.length()!=  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars  ==  null)  {  if(searchChars.length()!=  0)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars  ==  null)  {  if(searchChars.length()!=  0)  {  return  false;  }	  if(searchChars.length!=    0)    {    if(cs.length()!=    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
71	[BUG]  [BUGGY]  if(cs!=  null)  {  if(!cs.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(cs!=  null)  {  if(!cs.isEmpty())  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(cs!=  null)  {  if(!cs.isEmpty())  {  return  false;  }	  if(cs    ==    null)    {    if(!cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
72	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  len  =  searchChars.length  -  1  +  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  len  =  searchChars.length  -  1  +  1;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
73	[BUG]  [BUGGY]  if(searchChars  ==  null  ||!containsNone(cs,  searchChars))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars  ==  null  ||!containsNone(cs,  searchChars))  {  return  true;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars  ==  null  ||!containsNone(cs,  searchChars))  {  return  true;  }	  if(searchChars    ==    null    ||!containsNone(cs,    searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
74	[BUG]  [BUGGY]  Integer  csLen  =  searchChars.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  Integer  csLen  =  searchChars.length;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	Integer  csLen  =  searchChars.length;	  Integer    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
75	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  csLen  =  searchChars.length  -  1  +  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  csLen  =  searchChars.length  -  1  +  1;	  int    csLen    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
76	[BUG]  [BUGGY]  if(searchChars.length!=  0)return  false;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length!=  0)return  false;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length!=  0)return  false;	  if(searchChars    ==    null)    {    if(cs.length()!=    searchChars.length)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
77	[BUG]  [BUGGY]  if(searchChars.length  ==  0)return  false;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length  ==  0)return  false;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length  ==  0)return  false;	  if(searchChars    ==    null)    {    if(cs.length()!=    searchChars.length)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
78	[BUG]  [BUGGY]  if(searchChars  ==  null  ||!cs.contains(searchChars))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars  ==  null  ||!cs.contains(searchChars))  {  return  true;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars  ==  null  ||!cs.contains(searchChars))  {  return  true;  }	  if(searchChars    ==    null    ||!cs.contains(searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
79	[BUG]  [BUGGY]  if(searchChars.length()!=  searchChars.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length()!=  searchChars.length)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length()!=  searchChars.length)  {  return  false;  }	  if(cs.length()!=    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
80	[BUG]  [BUGGY]  if(searchChars.length()  >=  cs.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length()  >=  cs.length)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length()  >=  cs.length)  {  return  false;  }	  if(cs.length()!=    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
81	[BUG]  [BUGGY]  if(containsNone(cs,  searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(containsNone(cs,  searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(containsNone(cs,  searchChars))  {  return  false;  }	  if(!containsNone(cs,    searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
82	[BUG]  [BUGGY]  if(!containsNone(cs,  searchChars)||  containsNone(cs,  searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(!containsNone(cs,  searchChars)||  containsNone(cs,  searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(!containsNone(cs,  searchChars)||  containsNone(cs,  searchChars))  {  return  false;  }	  if(!containsNone(cs,    searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
83	[BUG]  [BUGGY]  Char  csLen  =  cs.charAt(0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  Char  csLen  =  cs.charAt(0);  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	Char  csLen  =  cs.charAt(0);	  Char    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
84	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  *  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  csLen  =  searchChars.length  *  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  csLen  =  searchChars.length  *  1;	  int    csLen    =    searchChars.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
85	[BUG]  [BUGGY]  &&!cs.contains(searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  &&!cs.contains(searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	&&!cs.contains(searchChars))  {  return  false;  }	  ||!cs.contains(searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
86	[BUG]  [BUGGY]  if(searchChars.length!=  0)  {  if(cs.length()  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length!=  0)  {  if(cs.length()  ==  0)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length!=  0)  {  if(cs.length()  ==  0)  {  return  false;  }	  if(searchChars!=    null)    {    if(cs.length()    ==    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
87	[BUG]  [BUGGY]  int  len  =  cs.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  len  =  cs.length;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  len  =  cs.length;	  int    len    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
88	[BUG]  [BUGGY]  if(searchChars!=  null)  {  if(!cs.isEmpty())return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars!=  null)  {  if(!cs.isEmpty())return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars!=  null)  {  if(!cs.isEmpty())return  false;  }	  if(searchChars    ==    null)    {    if(!cs.isEmpty())return    false;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
89	[BUG]  [BUGGY]  if(searchChars!=  null)  {  if(searchChars.length()!=  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars!=  null)  {  if(searchChars.length()!=  0)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars!=  null)  {  if(searchChars.length()!=  0)  {  return  false;  }	  if(searchChars.length!=    0)    {    if(cs.length()!=    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
90	[BUG]  [BUGGY]  if(cs!=  null  ||!cs.contains(searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(cs!=  null  ||!cs.contains(searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(cs!=  null  ||!cs.contains(searchChars))  {  return  false;  }	  if(searchChars    ==    null    ||!cs.contains(searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
91	[BUG]  [BUGGY]  if(searchChars!=  null)  {  if(cs.length()  ==  searchChars.length)return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars!=  null)  {  if(cs.length()  ==  searchChars.length)return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars!=  null)  {  if(cs.length()  ==  searchChars.length)return  false;  }	  if(searchChars!=    null)    {    if(cs.length()    ==    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
92	[BUG]  [BUGGY]  if(searchChars.length!=  0)  {  if(cs.length()  ==  searchChars.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length!=  0)  {  if(cs.length()  ==  searchChars.length)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length!=  0)  {  if(cs.length()  ==  searchChars.length)  {  return  false;  }	  if(searchChars!=    null)    {    if(cs.length()    ==    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
93	[BUG]  [BUGGY]  if(cs  ==  null)  {  if(!containsNone(cs,  searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(cs  ==  null)  {  if(!containsNone(cs,  searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(cs  ==  null)  {  if(!containsNone(cs,  searchChars))  {  return  false;  }	  if(searchChars!=    null)    {    if(!containsNone(cs,    searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
94	[BUG]  [BUGGY]  if(searchChars.length!=  1)  {  if(!containsNone(cs,  searchChars))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length!=  1)  {  if(!containsNone(cs,  searchChars))  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length!=  1)  {  if(!containsNone(cs,  searchChars))  {  return  false;  }	  if(searchChars.length!=    0)    {    if(!containsNone(cs,    searchChars))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
95	[BUG]  [BUGGY]  if(searchChars  ==  null  ||!cs.isEmpty())return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars  ==  null  ||!cs.isEmpty())return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars  ==  null  ||!cs.isEmpty())return  false;  }	  if(searchChars    ==    null    ||!cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
96	[BUG]  [BUGGY]  if(searchChars.length!=  cs.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length!=  cs.length)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length!=  cs.length)  {  return  false;  }	  if(cs.length()!=    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
97	[BUG]  [BUGGY]  if(searchChars.length  ==  cs.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length  ==  cs.length)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length  ==  cs.length)  {  return  false;  }	  if(cs.length()!=    searchChars.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
98	[BUG]  [BUGGY]  if(searchChars.length!=  1)  {  if(cs.length()!=  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length!=  1)  {  if(cs.length()!=  0)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length!=  1)  {  if(cs.length()!=  0)  {  return  false;  }	  if(searchChars.length!=    0)    {    if(cs.length()!=    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
99	[BUG]  [BUGGY]  int  csLen  =  cs.length  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  csLen  =  cs.length  -  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  csLen  =  cs.length  -  1;	  int    csLen    =    cs.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
100	[BUG]  [BUGGY]  if(searchChars.length!=  cs.length)return  false;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars.length!=  cs.length)return  false;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars.length!=  cs.length)return  false;	  if(searchChars    ==    null)    {    if(cs.length()!=    searchChars.length)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
101	[BUG]  [BUGGY]  if(!cs.isEmpty())return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(!cs.isEmpty())return  true;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(!cs.isEmpty())return  true;  }	  if(!cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
102	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  0)  {  return  false;  }	  if(searchChars    ==    null)    {    if(cs.length()!=    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
103	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  0)  {  return  false;  }  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  0)  {  return  false;  }	  if(searchChars    ==    null)    {    if(cs.length()!=    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
104	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  int  searchLen  =  searchChars.length  -  1  +  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	int  searchLen  =  searchChars.length  -  1  +  1;	  int    searchLen    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
105	[BUG]  [BUGGY]  Character  len  =  cs.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }      [BUGGY]  Character  len  =  cs.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1677	1677	10	replace	Character  len  =  cs.length();	  char    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
