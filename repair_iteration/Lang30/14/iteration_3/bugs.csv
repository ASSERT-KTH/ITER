bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  -  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  csLen  =  searchChars.length  -  4;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  csLen  =  searchChars.length  -  4;	  int    csLen    =    searchChars.length    -    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
2	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  -  3;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  csLen  =  searchChars.length  -  3;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  csLen  =  searchChars.length  -  3;	  int    csLen    =    searchChars.length    -    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
3	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  csLimit  =  searchChars.length()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  csLimit  =  searchChars.length()  +  1;	  int    csLimit    =    searchChars.length();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
4	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length()  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  csLimit  =  searchChars.length()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  csLimit  =  searchChars.length()  -  1;	  int    csLimit    =    searchChars.length();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
5	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length()  +  2;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  csLimit  =  searchChars.length()  +  2;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  csLimit  =  searchChars.length()  +  2;	  int    csLimit    =    searchChars.length();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
6	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  3;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  csLimit  =  searchChars.length  -  3;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  csLimit  =  searchChars.length  -  3;	  int    csLimit    =    searchChars.length    -    2;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
7	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  -  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length  -  2;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLimit  =  searchChars.length  -  2;	  int    searchLimit    =    searchChars.length();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
8	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  -  4;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length  -  4;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLimit  =  searchChars.length  -  4;	  int    searchLimit    =    searchChars.length();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
9	[BUG]  [BUGGY]  Integer  searchLen  =  cs.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  Integer  searchLen  =  cs.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	Integer  searchLen  =  cs.length();	  int    searchLen    =    cs.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
10	[BUG]  [BUGGY]  int  searchLimit  =  cs.length  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLimit  =  cs.length  -  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLimit  =  cs.length  -  1;	  int    searchLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
11	[BUG]  [BUGGY]  int  searchLimit  =  csLen  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLimit  =  csLen  -  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLimit  =  csLen  -  1;	  int    searchLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
12	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  /  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  =  searchChars.length  /  2;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  =  searchChars.length  /  2;	  int    searchLen    =    searchChars.length    /    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  /  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  =  searchChars.length  /  4;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  =  searchChars.length  /  4;	  int    searchLen    =    searchChars.length    /    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  int  searchLen  =  cs.length  /  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  =  cs.length  /  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  =  cs.length  /  1;	  int    searchLen    =    searchChars.length    /    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
15	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  /  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  csLen  =  searchChars.length  /  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  csLen  =  searchChars.length  /  1;	  int    csLen    =    searchChars.length    +    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
16	[BUG]  [BUGGY]  Integer  csLen  =  searchChars.length();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  Integer  csLen  =  searchChars.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	Integer  csLen  =  searchChars.length();	  int    csLen    =    searchChars.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
17	[BUG]  [BUGGY]  int  searchLimit  =  cs.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLimit  =  cs.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLimit  =  cs.length;	  int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
18	[BUG]  [BUGGY]  char  searchLimit  =  searchChars.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  char  searchLimit  =  searchChars.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	char  searchLimit  =  searchChars.length;	  int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
19	[BUG]  [BUGGY]  int  searchLen  -=  cs.length  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  -=  cs.length  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  -=  cs.length  +  1;	  int    searchLen    -=    cs.length;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
20	[BUG]  [BUGGY]  int  searchLen  -=  searchChars.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  -=  searchChars.length;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  -=  searchChars.length;	  int    searchLen    -=    cs.length;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
21	[BUG]  [BUGGY]  int  searchLen  -=  cs.length  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  -=  cs.length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  -=  cs.length  -  1;	  int    searchLen    -=    cs.length;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
22	[BUG]  [BUGGY]  int  searchLen  -=  cs.length  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  -=  cs.length  +  2;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  -=  cs.length  +  2;	  int    searchLen    -=    cs.length;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
23	[BUG]  [BUGGY]  int  j  =  cs.indexOf(searchChars,  csLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  j  =  cs.indexOf(searchChars,  csLen);  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  j  =  cs.indexOf(searchChars,  csLen);	  int    j    =    cs.indexOf(searchChars);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
24	[BUG]  [BUGGY]  int  j  =  cs.indexOf(searchCharsLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  j  =  cs.indexOf(searchCharsLen);  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  j  =  cs.indexOf(searchCharsLen);	  int    j    =    cs.indexOf(searchChars);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
25	[BUG]  [BUGGY]  int  j  =  cs.indexOf(searchChars[0]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  j  =  cs.indexOf(searchChars[0]);  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  j  =  cs.indexOf(searchChars[0]);	  int    j    =    cs.indexOf(searchChars);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
26	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  4;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  len  =  searchChars.length  -  4;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  len  =  searchChars.length  -  4;	  int    len    =    searchChars.length    -    2;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
27	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  3;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  len  =  searchChars.length  -  3;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  len  =  searchChars.length  -  3;	  int    len    =    searchChars.length    -    2;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
28	[BUG]  [BUGGY]  char  csLen  =  cs.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  char  csLen  =  cs.length();  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	char  csLen  =  cs.length();	  int    csLen    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
29	[BUG]  [BUGGY]  Integer  csLen  =  cs.length();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  Integer  csLen  =  cs.length();  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	Integer  csLen  =  cs.length();	  int    csLen    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
30	[BUG]  [BUGGY]  int  searchLen  =  SearchChars.indexOf(searchChars,  csLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  =  SearchChars.indexOf(searchChars,  csLen);  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  =  SearchChars.indexOf(searchChars,  csLen);	  int    searchLen    =    SearchChars.indexOf(cs,    searchChars);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
31	[BUG]  [BUGGY]  int  searchLen  =  SearchChars.indexOf(cs,  csLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  =  SearchChars.indexOf(cs,  csLen);  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  =  SearchChars.indexOf(cs,  csLen);	  int    searchLen    =    SearchChars.indexOf(cs,    searchChars);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
32	[BUG]  [BUGGY]  int  searchLen  =  SearchChars.indexOf(cs,  searchChars,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  =  SearchChars.indexOf(cs,  searchChars,  0);  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  =  SearchChars.indexOf(cs,  searchChars,  0);	  int    searchLen    =    SearchChars.indexOf(cs,    searchChars);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
33	[BUG]  [BUGGY]  int  searchLen  =  SearchChars.indexOf(cs,  searchCharsLen,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  =  SearchChars.indexOf(cs,  searchCharsLen,  0);  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  =  SearchChars.indexOf(cs,  searchCharsLen,  0);	  int    searchLen    =    SearchChars.indexOf(cs,    searchChars);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
34	[BUG]  [BUGGY]  Integer  searchLimit  =  cs.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  Integer  searchLimit  =  cs.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	Integer  searchLimit  =  cs.length();	  int    searchLimit    =    cs.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
35	[BUG]  [BUGGY]  int  len  =  searchChars.length  /  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  len  =  searchChars.length  /  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  len  =  searchChars.length  /  1;	  int    len    =    searchChars.length    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
36	[BUG]  [BUGGY]  char  len  =  cs.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  char  len  =  cs.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	char  len  =  cs.length;	  int    len    =    cs.length;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
37	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  /  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  csLimit  =  searchChars.length  /  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  csLimit  =  searchChars.length  /  1;	  int    csLimit    =    searchChars.length    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
38	[BUG]  [BUGGY]  int  len  =  cs.length()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  len  =  cs.length()  +  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  len  =  cs.length()  +  1;	  int    len    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
39	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  +  cs.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  =  searchChars.length  +  cs.length;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  =  searchChars.length  +  cs.length;	  int    searchLen    =    cs.length    +    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
40	[BUG]  [BUGGY]  int  searchLen  =  cs.length  +  searchChars.length  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  =  cs.length  +  searchChars.length  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  =  cs.length  +  searchChars.length  +  1;	  int    searchLen    =    cs.length    +    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
41	[BUG]  [BUGGY]  char  csLen  =  searchChars.length()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  char  csLen  =  searchChars.length()  +  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	char  csLen  =  searchChars.length()  +  1;	  char    csLen    =    searchChars.length();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
42	[BUG]  [BUGGY]  char  csLen  =  searchChars.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  char  csLen  =  searchChars.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	char  csLen  =  searchChars.length;	  char    csLen    =    searchChars.length();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
43	[BUG]  [BUGGY]  char  searchLimit  =  searchChars.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  char  searchLimit  =  searchChars.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	char  searchLimit  =  searchChars.length();	  char    searchLimit    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
44	[BUG]  [BUGGY]  String  searchLimit  =  cs.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  String  searchLimit  =  cs.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	String  searchLimit  =  cs.length();	  char    searchLimit    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
45	[BUG]  [BUGGY]  int  len  =  cs.length  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  len  =  cs.length  -  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  len  =  cs.length  -  1;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
46	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  /  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  =  searchChars.length  /  3;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  =  searchChars.length  /  3;	  int    searchLen    =    searchChars.length    /    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
47	[BUG]  [BUGGY]  int  searchLen  -=  SearchChars.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  -=  SearchChars.length;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  -=  SearchChars.length;	  int    searchLen    -=    cs.length;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
48	[BUG]  [BUGGY]  char  searchLen  -=  cs.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  char  searchLen  -=  cs.length;  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	char  searchLen  -=  cs.length;	  int    searchLen    -=    cs.length;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
49	[BUG]  [BUGGY]  Int  searchLen  =  cs.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  Int  searchLen  =  cs.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	Int  searchLen  =  cs.length();	  int    searchLen    =    cs.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
50	[BUG]  [BUGGY]  Int  searchLimit  =  cs.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  Int  searchLimit  =  cs.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	Int  searchLimit  =  cs.length();	  int    searchLimit    =    cs.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
51	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  csLimit  =  searchChars.length  -  1  +  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  csLimit  =  searchChars.length  -  1  +  1;	  int    csLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
52	[BUG]  [BUGGY]  int  searchLen  =  SearchChars.indexOfAny(cs,  searchCharsLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  =  SearchChars.indexOfAny(cs,  searchCharsLen);  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  =  SearchChars.indexOfAny(cs,  searchCharsLen);	  int    searchLen    =    SearchChars.indexOf(cs,    searchChars);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
53	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  -  1  +  csLen;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length  -  1  +  csLen;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLimit  =  searchChars.length  -  1  +  csLen;	  int    searchLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
54	[BUG]  [BUGGY]  Integer  len  =  str.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  Integer  len  =  str.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	Integer  len  =  str.length();	  int    len    =    str.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
55	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  1  +  csLen;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  len  =  searchChars.length  -  1  +  csLen;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  len  =  searchChars.length  -  1  +  csLen;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
56	[BUG]  [BUGGY]  int  searchLimit  =  csLen;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLimit  =  csLen;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLimit  =  csLen;	  int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
57	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length  +  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLimit  =  searchChars.length  +  1;	  int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
58	[BUG]  [BUGGY]  int  j  =  cs.indexOf(searchChars,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  j  =  cs.indexOf(searchChars,  0);  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  j  =  cs.indexOf(searchChars,  0);	  int    j    =    cs.indexOf(searchChars);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
59	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  +  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  csLen  =  searchChars.length  +  2;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  csLen  =  searchChars.length  +  2;	  int    csLen    =    searchChars.length    +    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
60	[BUG]  [BUGGY]  int  searchLimit  =  this.searchChars.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLimit  =  this.searchChars.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLimit  =  this.searchChars.length;	  int    searchLimit    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
61	[BUG]  [BUGGY]  String  csLen  =  searchChars.length();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  String  csLen  =  searchChars.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	String  csLen  =  searchChars.length();	  char    csLen    =    searchChars.length();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
62	[BUG]  [BUGGY]  int  searchLimit  =  searchChars.length  -  3;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLimit  =  searchChars.length  -  3;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLimit  =  searchChars.length  -  3;	  int    searchLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
63	[BUG]  [BUGGY]  int  searchLen  =  SearchChars.indexOf(cs,  searchChars,  csLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  =  SearchChars.indexOf(cs,  searchChars,  csLen);  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  =  SearchChars.indexOf(cs,  searchChars,  csLen);	  int    searchLen    =    SearchChars.indexOf(cs,    searchChars);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
64	[BUG]  [BUGGY]  int  searchLen  =  SearchChars.indexOfAny(cs,  searchChars);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  int  searchLen  =  SearchChars.indexOfAny(cs,  searchChars);  [BUGGY]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	int  searchLen  =  SearchChars.indexOfAny(cs,  searchChars);	  int    searchLen    =    SearchChars.indexOf(cs,    searchChars);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
65	[BUG]  [BUGGY]  Int  csLen  =  searchChars.length();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();      [BUGGY]  Int  csLen  =  searchChars.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1376	1376	10	replace	Int  csLen  =  searchChars.length();	  int    csLen    =    searchChars.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
