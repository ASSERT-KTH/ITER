bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
2	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
3	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  ch.length;  j++)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  j  =  0;  j  <  ch.length;  j++)  {  [BUGGY]    if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	for(int  j  =  0;  j  <  ch.length;  j++)  {	  for(int    j    =    0;    j    <    ch;    j++)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
7	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  chars.length;  j++)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  j  =  0;  j  <  chars.length;  j++)  {  [BUGGY]    if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	for(int  j  =  0;  j  <  chars.length;  j++)  {	  for(int    j    =    0;    j    <    chLen;    j++)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
9	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
10	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
11	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  Char  ch  =  cs.charAt(i);  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	Char  ch  =  cs.charAt(i);	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
13	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
14	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  csLen.length;  j++)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  j  =  0;  j  <  csLen.length;  j++)  {  [BUGGY]    if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	for(int  j  =  0;  j  <  csLen.length;  j++)  {	  for(int    j    =    0;    j    <    searchLen.length;    j++)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
16	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchLen.length  +  1;  j++)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  j  =  0;  j  <  searchLen.length  +  1;  j++)  {  [BUGGY]    if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	for(int  j  =  0;  j  <  searchLen.length  +  1;  j++)  {	  for(int    j    =    0;    j    <    searchLen.length;    j++)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
17	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  len;  j++)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  j  =  0;  j  <  len;  j++)  {  [BUGGY]    if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	for(int  j  =  0;  j  <  len;  j++)  {	  for(int    j    =    0;    j    <    csLen;    j++)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  Integer  i  =  indexOfAny(cs,  searchChars);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  Integer  i  =  indexOfAny(cs,  searchChars);  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	Integer  i  =  indexOfAny(cs,  searchChars);	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
20	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchesLen;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchesLen;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchesLen;  i++)  {  char  ch  =  cs.charAt(i);  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
21	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  INDEX_NOT_FOUND;  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
23	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  SearchChars.length;  j++)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  j  =  0;  j  <  SearchChars.length;  j++)  {  [BUGGY]    if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	for(int  j  =  0;  j  <  SearchChars.length;  j++)  {	  for(int    j    =    0;    j    <    csLen;    j++)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
24	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchChars.length;  j++)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  j  =  0;  j  <  searchChars.length;  j++)  {  [BUGGY]    if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	for(int  j  =  0;  j  <  searchChars.length;  j++)  {	  for(int    j    =    0;    j    <    ch;    j++)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  if(searchChars[i]  ==  ch)  {  return  i;  }  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  i;  }  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    i;    }    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
27	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  findLen;  j++)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  j  =  0;  j  <  findLen;  j++)  {  [BUGGY]    if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  return  INDEX_NOT_FOUND;  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1379	1379	10	replace	for(int  j  =  0;  j  <  findLen;  j++)  {	  for(int    j    =    0;    j    <    csLen;    j++)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
