bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  cs  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char  cs  =  cs.charAt(i);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char  cs  =  cs.charAt(i);	      CharSequence    cs    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars.charAt(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  CharSequence  cs  =  searchChars.charAt(i);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	CharSequence  cs  =  searchChars.charAt(i);	      CharSequence    cs    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  CharSequence  cs  =  searchChars[i];  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	CharSequence  cs  =  searchChars[i];	      CharSequence    cs    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLen);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char[]  searchChars  =  cs.getChars(i,  searchLen);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char[]  searchChars  =  cs.getChars(i,  searchLen);	      char[]    searchChars    =    cs.getChars(i);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchLen);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1,  searchLen);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char[]  searchChars  =  cs.getChars(i  +  1,  searchLen);	      char[]    searchChars    =    cs.getChars(i);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char[]  searchChars  =  cs.getChars(i  +  1);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char[]  searchChars  =  cs.getChars(i  +  1);	      char[]    searchChars    =    cs.getChars(i);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  char[]  searchChars  =(char[])cs.get(i  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char[]  searchChars  =(char[])cs.get(i  +  1);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char[]  searchChars  =(char[])cs.get(i  +  1);	      char[]    searchChars    =(char[])cs.get(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  char[]  searchChars  =(char[])cs.get(i,  searchLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char[]  searchChars  =(char[])cs.get(i,  searchLen);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char[]  searchChars  =(char[])cs.get(i,  searchLen);	      char[]    searchChars    =(char[])cs.get(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLen);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLen);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char[]  searchChars  =  cs.toCharArray(i,  searchLen);	      char[]    searchChars    =    cs.toCharArray(i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  1);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char[]  searchChars  =  cs.toCharArray(i  +  1);	      char[]    searchChars    =    cs.toCharArray(i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  1,  searchLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char[]  searchChars  =  cs.toCharArray(i  +  1,  searchLen);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char[]  searchChars  =  cs.toCharArray(i  +  1,  searchLen);	      char[]    searchChars    =    cs.toCharArray(i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  CharSequence  cs  =(CharSequence)cs.get(i  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  CharSequence  cs  =(CharSequence)cs.get(i  +  1);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	CharSequence  cs  =(CharSequence)cs.get(i  +  1);	      CharSequence    cs    =(CharSequence)cs.get(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  CharSequence  cs  =(charSequence)cs.get(i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  CharSequence  cs  =(charSequence)cs.get(i);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	CharSequence  cs  =(charSequence)cs.get(i);	      CharSequence    cs    =(CharSequence)cs.get(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char  ch  =  searchChars[i].charAt(i  +  1);  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char  ch  =  searchChars[i].charAt(i  +  1);	  char    ch    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i++);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char  ch  =  searchChars[i].charAt(i++);  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char  ch  =  searchChars[i].charAt(i++);	  char    ch    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i,  csLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char  ch  =  searchChars[i].charAt(i,  csLen);  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char  ch  =  searchChars[i].charAt(i,  csLen);	  char    ch    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchLen);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	CharSequence  cs  =  cs.getCharSequence(i,  searchLen);	      CharSequence    cs    =    cs.getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars.getCharSequence(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  CharSequence  cs  =  searchChars.getCharSequence(i);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	CharSequence  cs  =  searchChars.getCharSequence(i);	      CharSequence    cs    =    cs.getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i  +  1);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	CharSequence  cs  =  cs.getCharSequence(i  +  1);	      CharSequence    cs    =    cs.getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  String  ch  =  searchChars[i];  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  String  ch  =  searchChars[i];  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	String  ch  =  searchChars[i];	  char    ch    =    searchChars[i];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  Char  ch  =  searchChars[i];  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  Char  ch  =  searchChars[i];  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	Char  ch  =  searchChars[i];	  char    ch    =    searchChars[i];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
22	[BUG]  [BUGGY]  String  ch  =  searchChars.charAt(i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  String  ch  =  searchChars.charAt(i);  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	String  ch  =  searchChars.charAt(i);	  char    ch    =    searchChars.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  int  searchLen  =  searchChars[i].length()  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  int  searchLen  =  searchChars[i].length()  +  1;  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	int  searchLen  =  searchChars[i].length()  +  1;	      int    searchLen    =    searchChars[i].length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  int  searchLen  =  searchChars[i].length()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  int  searchLen  =  searchChars[i].length()  -  1;  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	int  searchLen  =  searchChars[i].length()  -  1;	      int    searchLen    =    searchChars[i].length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  int  searchLen  =  searchChars[i].length()  +  cs.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  int  searchLen  =  searchChars[i].length()  +  cs.length();  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	int  searchLen  =  searchChars[i].length()  +  cs.length();	      int    searchLen    =    searchChars[i].length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
26	[BUG]  [BUGGY]  String  ch  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  String  ch  =  cs.charAt(i);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	String  ch  =  cs.charAt(i);	      char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i)+  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char  ch  =  searchChars[i].charAt(i)+  1;  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char  ch  =  searchChars[i].charAt(i)+  1;	  char    ch    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i].charAt(i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  CharSequence  cs  =  searchChars[i].charAt(i);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	CharSequence  cs  =  searchChars[i].charAt(i);	      CharSequence    cs    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars[i].getCharSequence(i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  CharSequence  cs  =  searchChars[i].getCharSequence(i);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	CharSequence  cs  =  searchChars[i].getCharSequence(i);	      CharSequence    cs    =    cs.getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  CharSequence  cs  =(CharSequence)searchChars.get(i);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  CharSequence  cs  =(CharSequence)searchChars.get(i);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	CharSequence  cs  =(CharSequence)searchChars.get(i);	      CharSequence    cs    =(CharSequence)cs.get(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  int  searchLen  =  searchChars[i].length()  +  csLen;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  int  searchLen  =  searchChars[i].length()  +  csLen;  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	int  searchLen  =  searchChars[i].length()  +  csLen;	      int    searchLen    =    searchChars[i].length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char  ch  =  cs.charAt(i  +  1);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char  ch  =  cs.charAt(i  +  1);	      char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
33	[BUG]  [BUGGY]  char[]  searchChars  =(char[])cs.get(searchLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char[]  searchChars  =(char[])cs.get(searchLen);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char[]  searchChars  =(char[])cs.get(searchLen);	      char[]    searchChars    =(char[])cs.get(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  char  ch  =  searchChars.charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char  ch  =  searchChars.charAt(i  +  1);  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char  ch  =  searchChars.charAt(i  +  1);	  char    ch    =    searchChars.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
35	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  Char  ch  =  cs.charAt(i);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	Char  ch  =  cs.charAt(i);	      char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  String  ch  =  searchChars[i].charAt(i);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  String  ch  =  searchChars[i].charAt(i);  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	String  ch  =  searchChars[i].charAt(i);	  char    ch    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(csLen);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  char  ch  =  searchChars[i].charAt(csLen);  [BUGGY]    for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	char  ch  =  searchChars[i].charAt(csLen);	  char    ch    =    searchChars[i].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
38	[BUG]  [BUGGY]  Char[]  searchChars  =(char[])cs.get(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  Char[]  searchChars  =(char[])cs.get(i);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	Char[]  searchChars  =(char[])cs.get(i);	      char[]    searchChars    =(char[])cs.get(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchChars[i]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchChars[i]);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	CharSequence  cs  =  cs.getCharSequence(i,  searchChars[i]);	      CharSequence    cs    =    cs.getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchChars);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  CharSequence  cs  =  cs.getCharSequence(i,  searchChars);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	CharSequence  cs  =  cs.getCharSequence(i,  searchChars);	      CharSequence    cs    =    cs.getCharSequence(i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  CharSequence  cs  =(char)cs.get(i);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {    [BUGGY]  CharSequence  cs  =(char)cs.get(i);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1680	1680	10	replace	CharSequence  cs  =(char)cs.get(i);	      CharSequence    cs    =(CharSequence)cs.get(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
