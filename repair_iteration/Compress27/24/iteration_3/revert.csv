projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte-'0');//convertfromASCII//CheckStyle:MagicNumberON}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-3)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte-1:currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>='0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<2)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte=='0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<3)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'?currentByte-'0':currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,start,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145if(result==null){for(inti=start;i<end;i++){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,start,currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145if(result==null){for(inti=start;i<end;++i){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145if(result==null){result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,length);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145if(result==null){for(inti=start;i<length;++i){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145if(result==null){thrownewIllegalArgumentException("");}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-3)/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result/3)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-3)+(currentByte>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte-3)+(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-3)+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>='0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<2)+(currentByte>'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte=='0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte-1:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<2)+(currentByte>'0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<3)+(currentByte>'0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>='0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte-'0':0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte-'0')+(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-'0')+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(end-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte>'0'?1:0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145if(result==null){result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145if(result!=null){result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145if(result==null){result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145if(result!=null){result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-start)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte+'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'?currentByte-'0':'0')+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*3)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-3)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'||currentByte>'9');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'||currentByte>'7'));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-3)+(currentByte>'0'?'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-3)+(currentByte<'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*'0')+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<4)+(currentByte>'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(length-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?'0':currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(result,"UTF-8");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(result);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsByte(currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145if(result!=null){thrownewIllegalArgumentException("");}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsObject(result);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'?trailer-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result[i]=buffer[i];
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result[0]=buffer[i];
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result[0]=buffer[1];
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result[0]=buffer[0];
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result[1]=buffer[1];
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=newbyte[length];
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result[0]=null;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<6)+(currentByte>'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<2)+(currentByte>'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<7)+(currentByte>'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<8)+(currentByte>'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')/(currentByte+'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')/(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte-'0')/(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-'0')/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')/(currentByte-'9');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')/(currentByte-'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<1)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<3)+(currentByte>='0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<3)+(currentByte=='0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<1)+(currentByte>'0'?currentByte-1:currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<3)+(currentByte>'0'?currentByte*'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<3)+(currentByte>'0'?currentByte-'0':currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null){for(inti=start;i<end;++i){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null&&result.length>0){for(inti=start;i<end;++i){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null&&buffer.length>0){for(inti=start;i<end;++i){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null&&currentByte<='0'){for(inti=start;i<end;++i){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null&&currentByte<='9'){for(inti=start;i<end;++i){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>>'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>='0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<7)+(currentByte>>'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>='0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte+'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>>'0'||currentByte>='7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>='0'?'0':currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?'0':currentByte+'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte=='0'?'0':currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?'0':currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>>'0'?'0':currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?'9':currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<6)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<7)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<8)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<2)+(currentByte>='0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?trailer-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>='0'?trailer-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'?trailer.length-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<2)+(currentByte>'0'?trailer-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'?buffer[start-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1)/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1)+(currentByte>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1)+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte-1)+(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-1)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-3)/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte-3)/(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result/3)/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*3)/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(start-3)/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-2)/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte-3)+(end-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-3)+(currentByte>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-3)+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>='0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>>'0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>='0'?currentByte-1:currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>>'0'?currentByte-1:currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result/2)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result/2+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result/2.0)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end/3)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte/3)+(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>='0'?currentByte-'0':0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte=='0'?currentByte-'0':0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(currentByte>'0'?currentByte-'0':0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte!='0'?currentByte-'0':0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>>'0'?currentByte-'0':0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte-'0':'0')+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<3)+(currentByte>'0'?currentByte-'0':'0')+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<2)+(currentByte>'0'?currentByte-'0':'0')+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>='0'?currentByte-'0':'0')+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'?currentByte-'0':'0')/1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte-1:'0')+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte-'0')+(end-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-'0')+(currentByte>'0'?1:0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-'0')+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte=='0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte=='0'?currentByte-1:currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<2)+(currentByte=='0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-3)+(currentByte=='0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<7)+(currentByte=='0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-start)/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-start)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte-start)+(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte<'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'&&currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<3)+(currentByte>'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,buffer,start,currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,buffer,currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,end,currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,start,currentByte+1));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,currentByte,start));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte<'0'?1:0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte>='0'?1:0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte=='0'?1:0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')/(currentByte>'0'?1:0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte!='0'?1:0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte>>'0'?1:0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145thrownewIllegalArgumentException("");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aughtExceptionHandler.throwAsIOException("");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aught(newIllegalArgumentException(""));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145[Delete]
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aughtExceptionHandler.throwUnsupportedOctalException("");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aughtExceptionHandler.throwUnquotedException("");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145allowNull(result);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);result+=length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null){result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);result+=size;}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>='0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte=='0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte:'9');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte!='0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'||currentByte>'7'));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte<'0'||currentByte>'7'));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>='0'||currentByte>'7'));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<2)+(currentByte>'0'||currentByte>'7'));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'&&currentByte>'7'));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte=='0'||currentByte>'7'));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>='0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte=='0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(length>'0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(currentByte>'0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte!='0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=newbyte[length+1];System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145finalintresult=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145finalbyte[]result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145Result<=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1)+(currentByte<'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1+(currentByte<'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-start)+(currentByte<'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*3)+(currentByte<'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result/3)+(currentByte<'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-31)+(currentByte<'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-3)+(currentByte<'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte=='0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<7)+(currentByte=='0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte=='0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<2)+(currentByte=='0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<6)+(currentByte=='0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145allowNull(result){thrownewIllegalArgumentException("");}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aught(newIllegalArgumentException("")).initCause(result);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aught(newIllegalArgumentException("")).initCause(this);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte-'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte-'9');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte-'1');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<4)+(currentByte>'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<4)+(currentByte>='0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>>'0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>='0'?currentByte-1:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<2)+(currentByte>='0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>>'0'?currentByte-1:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-'0')+(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-'0')+(result-'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-'0')/(end-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')/(end-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte-'0':currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<2)+(currentByte>'0'?currentByte-'0':currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>='0'?currentByte-'0':currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte-1:currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*7)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*6)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte*3)+(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*3)+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<6)+(currentByte>'0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<7)+(currentByte>'0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<8)+(currentByte>'0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsByte(currentByte,trailer);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsByte(result);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsByte(currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsByte(stream);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsByte(result,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsByte(currentByte)+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(currentByte,"UTF-8");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(buffer,start,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(buffer,0,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(stream,"UTF-8");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(buffer,offset,length,"UTF-8");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(result,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte*'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte-'9':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<1)+(currentByte>'0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<3)+(currentByte>='0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<1)+(currentByte>'0'?currentByte-1:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<3)+(currentByte=='0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<2)+(currentByte>'0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result==null){result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,length);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null){result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,length);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=newbyte[length+1];System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145finalintresult=newbyte[length];System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result==null){result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null){result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte-7)+(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'||currentByte>'9');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>='0'||currentByte>'9');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte<'0'||currentByte>'9');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'&&currentByte>'9');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<2)+(currentByte>'0'||currentByte>'9');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>>'0'||currentByte>'9');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte-1:0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte!='0'?currentByte-1:currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(currentByte>'0'?currentByte-1:currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<1)+(currentByte>'0'?currentByte-1:'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,buffer,start,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,buffer,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,end,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,currentByte,start);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,start,currentByte-1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,start,currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1)+(currentByte>'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte=='0'?currentByte-1:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(currentByte>'0'?currentByte-1:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte!='0'?currentByte-1:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsObject(currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsObject(result,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsObject(convertByte,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsObject(currentByte,result);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsObject(TRUNCATE_OBJECT,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsObject(result,trailer);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=newbyte[length+1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145finalintresult=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);result+=length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(currentByte+'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(currentByte>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(currentByte-'0')+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(currentByte-'0',end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1)+(length-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(length-1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(length-1)+(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(end-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result/1)+(length-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result+1)+(length-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*'0')/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*'0')+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*'0')+(end-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end*'0')+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte*'0')+(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result[i]=null;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1+(currentByte>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*3)+(currentByte>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result/3)+(currentByte>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-start)+(currentByte>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1]+(currentByte>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(streamByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(convertByte,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(buffer,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(TRUNCATE_BACK_ENCODING,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(buffer,end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-'0')+(currentByte+'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*'0')+(currentByte+'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result/3)+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-2)+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(start-3)+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1)+(currentByte>'0'?'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1+(currentByte>'0'?'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*3)+(currentByte>'0'?'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-start)+(currentByte>'0'?'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result/3)+(currentByte>'0'?'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-2)+(currentByte>'0'?'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-31)+(currentByte>'0'?'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'||currentByte>'9')+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<4)+(currentByte>'0'||currentByte>'9');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<6)+(currentByte>'0'||currentByte>'9');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145safeGet(result){thrownewIllegalArgumentException("");}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aught(Throwables.wrap(buffer,start,length),currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aught(Throwables.however(currentByte)));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aught(Throwables.wrap(buffer,start,length));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aught(RuntimeException.class.getSimpleName()));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'||currentByte>'7')+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<6)+(currentByte>'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte=='0'?currentByte-'0':currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*2+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-start)+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte-3)+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1||(currentByte>'0'?currentByte:'0'));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte:'0')+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte+'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte:'0'));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(currentByte-'0',currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1]+(currentByte>'0'?'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(start-3)+(currentByte<'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(start-3)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<7)+(currentByte>='0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'?buffer-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<7)+(currentByte>'0'?trailer-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'?trailer-'0':currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145Result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145Result<N,V>result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145Result<N>result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145if(result==null){result=newbyte[length+1];System.arraycopy(buffer,offset,buffer,start,length);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145Result[]result=newbyte[length];
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(buffer,start,"UTF-8");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(buffer,"UTF-8");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(result,0,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')/(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=null;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=buffer[i];
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte+1:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte*1.0:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(start-result)+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-start)+(end-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')/(currentByte-'0'+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')/(currentByte-'0',end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145Result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145Result<N>result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145Result<N,V>result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145if(result==null){result=newbyte[length+1];System.arraycopy(buffer,offset,buffer,start,end);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>>'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(end+'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145Result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);result+=length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145Result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(length-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-start)+(length-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1+(length-'0'));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-offset)+(length-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(buffer,start);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(TRUE_ENCODING,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(buffer,start,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsByte(buffer,start);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsByte(buffer,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsByte(converter,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsByte(buffer);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsByte(currentByte,buffer[start]);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte-'0')+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result*'0')+(currentByte>'0'?1:0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(end-'0'+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<4)+(currentByte>'0'||currentByte>'7'));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsObject(buffer,start);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsObject(TRUE_ENCODING,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsObject(TRUNCATE_ENCODING,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsObject(TRUE_ENCODING);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<4)+(currentByte>'0'?currentByte-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte+1:currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte-1:'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte*1.0:currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'||currentByte>'8');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte+'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>'0'?currentByte*'0':currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,start,'0'));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,start,currentByte-1));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,start,byteValue));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,start,'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,start,byteValue);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=exceptionMessage(buffer,offset,length,start,0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145attern(result!=null)){thrownewIllegalArgumentException("");}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145attern(result==null)){thrownewIllegalArgumentException("");}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145atter(result!=null)){thrownewIllegalArgumentException("");}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte+'0':0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte*'0':0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<4)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?buffer.length-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<3)+(currentByte>>'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145||(result==null&&result.length>0)){result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,length);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145if(result!=null){result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,length);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145resulting=newbyte[length];System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(result,0,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145Result[i]=buffer[i];
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145resulting[i]=buffer[i];
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result>3)+(currentByte>'0'?'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result+3)+(currentByte>'0'?'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1||(currentByte>'0'?'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145resulting=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?trailer-1:currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')/(length-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')/(currentByte-'0',currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(length-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1+(length-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(length/'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-3)+(end-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-3)+(result-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-1)+(end-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?trailer.length-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145||(result!=null&&result.length>0)){result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result+=length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145Result<N,V>result=newbyte[length];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-currentByte)/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsObject(TRUNCATE_BACK_ENCODING,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsObject(TRUNCATE_BACK_ENCODING);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().decodeAsObject(currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<4)+(currentByte=='0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result>3)+(currentByte<'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<>3)+(currentByte<'0'||currentByte>'7');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result>=3)+(currentByte>'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?trailer-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?trailer.length-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result>3)+(currentByte>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result>0)+(currentByte>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result+3)+(currentByte>'0'?currentByte:'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result>=3)+(currentByte>'0'?currentByte-'0':'0')+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?trailer-'0':'0')+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result/'0')+(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte=='0'?currentByte-1):currentByte;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result+'0')+(currentByte+'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null){for(inti=start;i<length;++i){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null&&result.length>0){for(inti=start;i<length;++i){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null&&result[i]<=BYTE_MASK){for(inti=start;i<length;++i){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null&&result[i]<=length){for(inti=start;i<length;++i){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null&&buffer.length>0){for(inti=start;i<length;++i){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145while(result!=null&&result.length<=length){for(inti=start;i<length;++i){result[i]=buffer[i];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-31)/(currentByte-'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-3)/(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result+3)+(currentByte*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aught(newIllegalArgumentException("");}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aught(newIllegalArgumentException("");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aught(RuntimeException.class,newIllegalArgumentException("");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aught(RuntimeException.class,newIllegalArgumentException(""));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aught(Throwables.wrap(result,0,buffer.length));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result-'0')+(currentByte>'0'?2:0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result>=3)+(currentByte>'0'?currentByte-'0':currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?currentByte*'0':currentByte+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(buffer,start,end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsString(buffer,offset,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(end-'0')+(result*'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<3)+(currentByte>'0'?trailer-'0':'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().encodeAsByte(buffer,end);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=JsonStringEncoder.getInstance().decodeAsByte(currentByte,trailer);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)+(currentByte>'0'?trailer-'0':0);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(currentByte<<3)+(currentByte>'0'?trailer-'0':currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result=(result<<1)/(currentByte>'0');
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145result!=null&&result.length>0){thrownewIllegalArgumentException("");}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java145aught(Throwables.wrap(result,buffer,start,length)));
