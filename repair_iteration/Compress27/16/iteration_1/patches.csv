bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  +  1;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  +  1;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  length  +  1;	  byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  length;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  length;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  length;	  byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  *  length;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  *  length;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  *  length;	  byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  +  2;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  +  2;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  length  +  2;	  byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  +  1];  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[start  +  1];  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  +  1];	  byte    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  2];  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[start  -  2];  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  2];	  byte    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  start];  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[start  -  start];  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  start];	  byte    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
15	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  end];  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[start  -  end];  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  end];	  byte    trailer    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
16	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  start  +  1];  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  start  +  1];  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  start  +  1];	  byte    trailer    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  start  1];  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  start  1];  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  start  1];	  byte    trailer    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  offset;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  offset;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  offset;	  byte    trailer    =    buffer[end    -    1]    +    offset;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
19	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  *  offset;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  *  offset;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  *  offset;	  byte    trailer    =    buffer[end    -    1]    +    offset;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
20	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  offset  +  length;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  offset  +  length;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  offset  +  length;	  byte    trailer    =    buffer[end    -    1]    +    offset;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  width;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  width;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  width;	  byte    trailer    =    buffer[end    -    1]    +    offset;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  byte  trailer  =  buffer[offset  -  1];  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[offset  -  1];  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[offset  -  1];	  byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
23	[BUG]  [BUGGY]  byte  trailer  =  buffer[length  -  2];  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[length  -  2];  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[length  -  2];	  byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
24	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  end;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  end;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  end;	  byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  start;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  start;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  start;	  byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  length;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  length;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start  +  length;	  byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  *  start;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  *  start;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  *  start;	  byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  byte  trailer  =  buffer[length  -  1]  +  start;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[length  -  1]  +  start;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[length  -  1]  +  start;	  byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
29	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  start]  +  offset;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  start]  +  offset;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  start]  +  offset;	  byte    trailer    =    buffer[end    -    1]    +    offset;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
30	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  start]  +  1;  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  start]  +  1;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  start]  +  1;	  byte    trailer    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
31	[BUG]  [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  trailer));  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  &  BYTE_MASK;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  &  BYTE_MASK;	  byte    trailer    =    buffer[end    -    1]    +    offset;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  start]  +  length;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  start]  +  length;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  start]  +  length;	  byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
37	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  &  start;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  &  start;  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  &  start;	  byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
38	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  trailer  =  buffer[start  +  1];  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  trailer  =  buffer[start  +  1];  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  trailer  =  buffer[start  +  1];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
39	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  length;  start++)  {  trailer  =  buffer[start  +  1];  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  length;  start++)  {  trailer  =  buffer[start  +  1];  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  >  0)  {  for(int  start  =  start;  start  <  length;  start++)  {  trailer  =  buffer[start  +  1];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  trailer  =  buffer[start  -  1];  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  trailer  =  buffer[start  -  1];  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  trailer  =  buffer[start  -  1];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  length;  end++)  {  trailer  =  buffer[start  +  1];  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  length;  end++)  {  trailer  =  buffer[start  +  1];  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  >  0)  {  for(int  start  =  start;  start  <  length;  end++)  {  trailer  =  buffer[start  +  1];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
42	[BUG]  [BUGGY]  byte[]  trailer  =  buffer.toByteArray();  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte[]  trailer  =  buffer.toByteArray();  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  buffer.toByteArray();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
43	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  length;  start++)  {  trailer  =  buffer[start  -  1];  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  length;  start++)  {  trailer  =  buffer[start  -  1];  }  [BUGGY]    while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  >  0)  {  for(int  start  =  start;  start  <  length;  start++)  {  trailer  =  buffer[start  -  1];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
