bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  byte  trailer  =  buffer[length  -  1];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  byte  trailer  =  buffer[length  -  1];  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	byte  trailer  =  buffer[length  -  1];	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
2	[BUG]  [BUGGY]  if(trail!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  if(trail!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(trail!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
3	[BUG]  [BUGGY]  if(trail  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  if(trail  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(trail  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
5	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[length  -  1];  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  final  byte  trailer  =  buffer[length  -  1];  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	final  byte  trailer  =  buffer[length  -  1];	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  byte  trailer  =  buffer[offset  -  1];  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  byte  trailer  =  buffer[offset  -  1];  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	byte  trailer  =  buffer[offset  -  1];	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(trail,  0,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  System.arraycopy(trail,  0,  trailer,  0,  length);  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trail,  0,  trailer,  0,  length);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
8	[BUG]  [BUGGY]  while  (end  <  =  trailer  &&  (trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (end  <  =  trailer  &&  (trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  trailer  &&  (trailer  ==  0  ||  trailer  ==  ''))  {	  while    (start    <    =    end    &&    (trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
9	[BUG]  [BUGGY]  while  (start  <  =  trailer  &&  (trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  =  trailer  &&  (trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  trailer  &&  (trailer  ==  0  ||  trailer  ==  ''))  {	  while    (start    <    =    end    &&    (trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
10	[BUG]  [BUGGY]  while  (end  <  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (end  <  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
11	[BUG]  [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer.length  ==  ''))  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer.length  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&(trailer  ==  0  ||  trailer.length  ==  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
12	[BUG]  [BUGGY]  while  (offset  <  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (offset  <  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (offset  <  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
13	[BUG]  [BUGGY]  while  (length  <  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (length  <  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
14	[BUG]  [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&(trailer  ==  0  ||  trailer!=  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer  ==  0  ||  trailer  ==  '')  {	  while    (start    <    end    &&    trailer    ==    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
16	[BUG]  [BUGGY]  while  (start  <  =  end  &&  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  =  end  &&  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  end  &&  trailer  ==  0  ||  trailer  ==  '')  {	  while    (start    <    end    &&    trailer    ==    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
17	[BUG]  [BUGGY]  while  (end  <  start  &&  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (end  <  start  &&  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  &&  trailer  ==  0  ||  trailer  ==  '')  {	  while    (start    <    end    &&    trailer    ==    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
18	[BUG]  [BUGGY]  while  (end  <  start  ||  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (end  <  start  ||  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  ||  trailer  ==  0  ||  trailer  ==  '')  {	  while    (start    <    end    &&    trailer    ==    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
19	[BUG]  [BUGGY]  while  (start  <  end  ||  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  end  ||  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  end  ||  trailer  ==  0  ||  trailer  ==  '')  {	  while    (start    <    end    &&    trailer    ==    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
20	[BUG]  [BUGGY]  while  (end  <  start  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (end  <  start  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  ||(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
21	[BUG]  [BUGGY]  while  (end  <  =  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (end  <  =  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
22	[BUG]  [BUGGY]  while  (end  <  trailer  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (end  <  trailer  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  trailer  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
23	[BUG]  [BUGGY]  while  (end  <  trailer  &&(trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (end  <  trailer  &&(trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  trailer  &&(trailer  ==  0  ||  trailer!=  ''))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
24	[BUG]  [BUGGY]  while  (end  <  start  &&(trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (end  <  start  &&(trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  &&(trailer  ==  0  ||  trailer!=  ''))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
25	[BUG]  [BUGGY]  while(end  <  =  length  &&  (trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while(end  <  =  length  &&  (trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  =  length  &&  (trailer  ==  0  ||  trailer  ==  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
26	[BUG]  [BUGGY]  while(offset  <  =  length  &&  (trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while(offset  <  =  length  &&  (trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(offset  <  =  length  &&  (trailer  ==  0  ||  trailer  ==  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
27	[BUG]  [BUGGY]  while(start  <  =  length  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while(start  <  =  length  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  =  length  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
28	[BUG]  [BUGGY]  while(start  <  =  length  &&  (trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while(start  <  =  length  &&  (trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  =  length  &&  (trailer  ==  0  ||  trailer!=  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
29	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (start    <    end    &&    trailer!=    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
30	[BUG]  [BUGGY]  while  (end  <  start  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (end  <  start  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (start    <    end    &&    trailer!=    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
31	[BUG]  [BUGGY]  while  (start  <  =  end  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  =  end  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  end  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (start    <    end    &&    trailer!=    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  while  (end  <  end  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (end  <  end  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  end  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (start    <    end    &&    trailer!=    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  while  (start  <  0  ||  trailer!=  0  ||  end  >=  '')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  0  ||  trailer!=  0  ||  end  >=  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  0  ||  trailer!=  0  ||  end  >=  '')  {	  while    (start    <    end    &&    trailer!=    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
35	[BUG]  [BUGGY]  while  (end  <  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (end  <  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
36	[BUG]  [BUGGY]  while  (end  <  start  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (end  <  start  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  &&(trailer  ==  0  ||  trailer  ==  'e'))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
37	[BUG]  [BUGGY]  if(trole!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  if(trole!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(trole!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  if(trole  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  if(trole  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(trole  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
39	[BUG]  [BUGGY]  if(  trailer!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  if(  trailer!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(  trailer!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end);  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  end);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
43	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  ==  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while(start  <  length  &&  trailer  ==  0  ||  end  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&  trailer  ==  0  ||  end  ==  '')  {	  while    (start    <    end    &&    trailer    ==    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  ==  '')  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer  ==  0  ||  start  ==  '')  {	  while    (start    <    end    &&    trailer    ==    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
45	[BUG]  [BUGGY]  while  (start  <  =  trailer  &&  (trailer  ==  0  ||  end  ==  ''))  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  =  trailer  &&  (trailer  ==  0  ||  end  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  trailer  &&  (trailer  ==  0  ||  end  ==  ''))  {	  while    (start    <    =    end    &&    (trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
46	[BUG]  [BUGGY]  while(start  <  length  &&  (trailer  ==  0  ||  end  ==  ''))  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while(start  <  length  &&  (trailer  ==  0  ||  end  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&  (trailer  ==  0  ||  end  ==  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
47	[BUG]  [BUGGY]  while(start  <  =  length  &&  (trailer  ==  0  ||  end  ==  ''))  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while(start  <  =  length  &&  (trailer  ==  0  ||  end  ==  ''))  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  =  length  &&  (trailer  ==  0  ||  end  ==  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    trailer    ==''))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
48	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  end  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  end  ==  '')  {	  while    (start    <    end    &&    trailer!=    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
49	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!=  0  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while(start  <  length  &&  trailer!=  0  ||  end  >  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&  trailer!=  0  ||  end  >  '')  {	  while    (start    <    end    &&    trailer!=    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
50	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  start  ==  '')  {	  while    (start    <    end    &&    trailer!=    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
51	[BUG]  [BUGGY]  while  (start  <  end  &&  trailer!=  0  ||  length  >  0)  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  end  &&  trailer!=  0  ||  length  >  0)  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  end  &&  trailer!=  0  ||  length  >  0)  {	  while    (start    <    end    &&    trailer!=    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
52	[BUG]  [BUGGY]  while(start  <  =  length  &&  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while(start  <  =  length  &&  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  =  length  &&  trailer  ==  0  ||  trailer  ==  '')  {	  while    (start    <    end    &&    trailer    ==    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  length  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (start    <    end    &&    trailer!=    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
54	[BUG]  [BUGGY]  if(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  if(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];    [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start);  [BUGGY]    end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
