bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while  (start  <  length  ||  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  ||  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  ||  trailer  ==  0  ||  trailer  ==  '')  {	  while    (start    <    end    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
2	[BUG]  [BUGGY]  while  (start  <  =  end  ||  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  end  ||  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  end  ||  trailer  ==  0  ||  trailer  ==  '')  {	  while    (start    <    end    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
3	[BUG]  [BUGGY]  while  (start  <  length  ||  trailer  ==  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  ||  trailer  ==  0  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  ||  trailer  ==  0  ||  end  ==  '')  {	  while    (start    <    end    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
4	[BUG]  [BUGGY]  while  (start  <  0  ||  trailer  ==  0  ||  end  >=  '')  {  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  0  ||  trailer  ==  0  ||  end  >=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  0  ||  trailer  ==  0  ||  end  >=  '')  {	  while    (start    <    end    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
5	[BUG]  [BUGGY]  while  (start  <  end  ||  trailer  ==  0  ||  length  ==  '')  {  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  end  ||  trailer  ==  0  ||  length  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  end  ||  trailer  ==  0  ||  length  ==  '')  {	  while    (start    <    end    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
6	[BUG]  [BUGGY]  while  (length  <  start  &&  trailer!=  0  ||  start  ==  '')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  start  &&  trailer!=  0  ||  start  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  start  &&  trailer!=  0  ||  start  ==  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
7	[BUG]  [BUGGY]  while  (offset  <  length  &&  trailer!=  0  ||  start  ==  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (offset  <  length  &&  trailer!=  0  ||  start  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (offset  <  length  &&  trailer!=  0  ||  start  ==  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
8	[BUG]  [BUGGY]  while  (length  <  start  &&  trailer!=  0  ||  start  >=  '')  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  start  &&  trailer!=  0  ||  start  >=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  start  &&  trailer!=  0  ||  start  >=  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
9	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  >=  '')  {  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  >=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  start  >=  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
10	[BUG]  [BUGGY]  while  (end  <  length  &&  trailer!=  0  ||  start  ==  '')  {  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  length  &&  trailer!=  0  ||  start  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  &&  trailer!=  0  ||  start  ==  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(trail,  offset,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trail,  offset,  buffer,  0,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trail,  offset,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    trailer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(trole,  offset,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trole,  offset,  buffer,  0,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trole,  offset,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    trailer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
13	[BUG]  [BUGGY]  System.arraycopy(tank,  offset,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(tank,  offset,  buffer,  0,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(tank,  offset,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    trailer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(remote,  offset,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(remote,  offset,  buffer,  0,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(remote,  offset,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    trailer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(than,  offset,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(than,  offset,  buffer,  0,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(than,  offset,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    trailer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(t  trailer,  offset,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(t  trailer,  offset,  buffer,  0,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(t  trailer,  offset,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    trailer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
17	[BUG]  [BUGGY]  while  (length  <  start  &&  trailer  ==  0  ||  start  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  start  &&  trailer  ==  0  ||  start  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  start  &&  trailer  ==  0  ||  start  ==  '')  {	  while    (start    <    length    &&    trailer    ==    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
18	[BUG]  [BUGGY]  while  (offset  <  length  &&  trailer  ==  0  ||  start  ==  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (offset  <  length  &&  trailer  ==  0  ||  start  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (offset  <  length  &&  trailer  ==  0  ||  start  ==  '')  {	  while    (start    <    length    &&    trailer    ==    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
19	[BUG]  [BUGGY]  while  (end  <  length  &&  trailer  ==  0  ||  start  ==  '')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  length  &&  trailer  ==  0  ||  start  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  &&  trailer  ==  0  ||  start  ==  '')  {	  while    (start    <    length    &&    trailer    ==    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
20	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  >=  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  >=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer  ==  0  ||  start  >=  '')  {	  while    (start    <    length    &&    trailer    ==    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
21	[BUG]  [BUGGY]  if(trol!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(trol!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(trol!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(trole    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
22	[BUG]  [BUGGY]  if(trol  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(trol  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(trol  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(trole    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
23	[BUG]  [BUGGY]  if(  trailer  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(  trailer  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(  trailer  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(trole    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
24	[BUG]  [BUGGY]  While(trol!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  While(trol!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	While(trol!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(trole    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
25	[BUG]  [BUGGY]  ||(trol!=  null  &&  trailer.length  >  0)||(trol.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trol!=  null  &&  trailer.length  >  0)||(trol.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trol!=  null  &&  trailer.length  >  0)||(trol.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
26	[BUG]  [BUGGY]  ||(trol!=  null  &&  trailer.length  >  0)||(trol.length  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trol!=  null  &&  trailer.length  >  0)||(trol.length  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trol!=  null  &&  trailer.length  >  0)||(trol.length  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
27	[BUG]  [BUGGY]  ||(trol!=  null  &&  trailer.length  >  0)||(trol.charAt(trole.length  -  1)  ==  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trol!=  null  &&  trailer.length  >  0)||(trol.charAt(trole.length  -  1)  ==  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trol!=  null  &&  trailer.length  >  0)||(trol.charAt(trole.length  -  1)  ==  '/'))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
28	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  byte  trailer  =  buffer[end  -  1];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	byte  trailer  =  buffer[end  -  1];	  byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
29	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1];  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  byte  trailer  =  buffer[start  -  1];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	byte  trailer  =  buffer[start  -  1];	  byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
30	[BUG]  [BUGGY]  byte  trailer  =  buffer[length  -  2];  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  byte  trailer  =  buffer[length  -  2];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	byte  trailer  =  buffer[length  -  2];	  byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
31	[BUG]  [BUGGY]  byte  trailer  =  buffer[length  -  1]  +  1;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  byte  trailer  =  buffer[length  -  1]  +  1;  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	byte  trailer  =  buffer[length  -  1]  +  1;	  byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
32	[BUG]  [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer.length!=  ''))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer.length!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&(trailer  ==  0  ||  trailer.length!=  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
33	[BUG]  [BUGGY]  while  (end  <  length  &&(trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  length  &&(trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  &&(trailer  ==  0  ||  trailer!=  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
34	[BUG]  [BUGGY]  while  (offset  <  length  &&(trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (offset  <  length  &&(trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (offset  <  length  &&(trailer  ==  0  ||  trailer!=  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
35	[BUG]  [BUGGY]  while  (length  <  start  &&(trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  start  &&(trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  start  &&(trailer  ==  0  ||  trailer!=  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
36	[BUG]  [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer!=  '.'))  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer!=  '.'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&(trailer  ==  0  ||  trailer!=  '.'))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
37	[BUG]  [BUGGY]  ||(trail!=  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trail!=  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trail!=  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trail!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
38	[BUG]  [BUGGY]  ||(trail!=  null  &&  trailer.length  >  0)||(trail  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trail!=  null  &&  trailer.length  >  0)||(trail  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trail!=  null  &&  trailer.length  >  0)||(trail  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trail!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
39	[BUG]  [BUGGY]  ||  trailer!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||  trailer!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||  trailer!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(trail!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
40	[BUG]  [BUGGY]  ||(trail!=  null  &&  trailer.length  >  0)||(trail  >=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trail!=  null  &&  trailer.length  >  0)||(trail  >=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trail!=  null  &&  trailer.length  >  0)||(trail  >=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trail!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
41	[BUG]  [BUGGY]  ||(trail!=  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.length  >  0))  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trail!=  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.length  >  0))  throw  new  IllegalArgumentException( " ");  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trail!=  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.length  >  0))  throw  new  IllegalArgumentException( " ");	  if(trail!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
42	[BUG]  [BUGGY]  while  (end  <  length  ||  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  length  ||  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  ||  trailer  ==  0  ||  trailer  ==  '')  {	  while    (end    <    start    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
43	[BUG]  [BUGGY]  while  (end  <  =  start  ||  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  start  ||  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  start  ||  trailer  ==  0  ||  trailer  ==  '')  {	  while    (end    <    start    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
44	[BUG]  [BUGGY]  while  (end  <  0  ||  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  0  ||  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  0  ||  trailer  ==  0  ||  trailer  ==  '')  {	  while    (end    <    start    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
45	[BUG]  [BUGGY]  while  (end  <  start  ||  trailer  ==  0  ||  end  >  'e')  {  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  ||  trailer  ==  0  ||  end  >  'e')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  ||  trailer  ==  0  ||  end  >  'e')  {	  while    (end    <    start    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
46	[BUG]  [BUGGY]  while  (end  <  length  ||  trailer  ==  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  length  ||  trailer  ==  0  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  ||  trailer  ==  0  ||  end  ==  '')  {	  while    (end    <    start    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
47	[BUG]  [BUGGY]  while  (end  <  start  ||  trailer  ==  0  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  ||  trailer  ==  0  ||  end  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  ||  trailer  ==  0  ||  end  >  '')  {	  while    (end    <    start    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
48	[BUG]  [BUGGY]  while  (length  <  =  trailer  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  =  trailer  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  =  trailer  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (length    <    start    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
49	[BUG]  [BUGGY]  while  (length  <  =  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  =  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  =  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (length    <    start    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
50	[BUG]  [BUGGY]  while  (offset  <  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (offset  <  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (offset  <  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (length    <    start    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
51	[BUG]  [BUGGY]  while  (length  <  start  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  start  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  start  ||(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (length    <    start    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
52	[BUG]  [BUGGY]  while  (length  <  0  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  0  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  0  ||(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (length    <    start    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
53	[BUG]  [BUGGY]  while(start  <  =  length  &&  (trailer  ==  0  ||  end  >  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  =  length  &&  (trailer  ==  0  ||  end  >  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  =  length  &&  (trailer  ==  0  ||  end  >  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
54	[BUG]  [BUGGY]  while(length  <  =  start  &&  (trailer  ==  0  ||  end  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(length  <  =  start  &&  (trailer  ==  0  ||  end  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(length  <  =  start  &&  (trailer  ==  0  ||  end  ==  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
55	[BUG]  [BUGGY]  while(length  <  start  &&  trailer!=  0  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(length  <  start  &&  trailer!=  0  ||  end  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(length  <  start  &&  trailer!=  0  ||  end  >  '')  {	  while(start    <    length    &&    trailer!=    0    ||    end    >    '')    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
56	[BUG]  [BUGGY]  while(offset  <  length  &&  trailer!=  0  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(offset  <  length  &&  trailer!=  0  ||  end  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(offset  <  length  &&  trailer!=  0  ||  end  >  '')  {	  while(start    <    length    &&    trailer!=    0    ||    end    >    '')    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
57	[BUG]  [BUGGY]  while(end  <  length  &&  trailer!=  0  ||  start  >  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(end  <  length  &&  trailer!=  0  ||  start  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  length  &&  trailer!=  0  ||  start  >  '')  {	  while(start    <    length    &&    trailer!=    0    ||    end    >    '')    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
58	[BUG]  [BUGGY]  while(end  <  length  &&  trailer!=  0  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(end  <  length  &&  trailer!=  0  ||  end  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  length  &&  trailer!=  0  ||  end  >  '')  {	  while(start    <    length    &&    trailer!=    0    ||    end    >    '')    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
59	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!=  null  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  length  &&  trailer!=  null  ||  end  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&  trailer!=  null  ||  end  >  '')  {	  while(start    <    length    &&    trailer!=    0    ||    end    >    '')    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
60	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  ==  0  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  length  &&  trailer  ==  0  ||  end  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&  trailer  ==  0  ||  end  >  '')  {	  while(start    <    length    &&    trailer!=    0    ||    end    >    '')    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
61	[BUG]  [BUGGY]  while(end  <  length  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(end  <  length  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  length  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {	  while(end    <    =    length    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
62	[BUG]  [BUGGY]  while(end  <  =  length  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(end  <  =  length  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  =  length  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {	  while(end    <    =    length    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
63	[BUG]  [BUGGY]  while(end  <  =  length  &&  (trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(end  <  =  length  &&  (trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  =  length  &&  (trailer  ==  0  ||  trailer!=  ''))  {	  while(end    <    =    length    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start  +  1);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start  +  1);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start  +  1);	  System.arraycopy(buffer,    offset,    trailer,    0,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  1);  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  1);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length  -  1);	  System.arraycopy(buffer,    offset,    trailer,    0,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end  -  start);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end  -  start);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  end  -  start);	  System.arraycopy(buffer,    offset,    trailer,    0,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(trail,  offset,  buffer,  0,  length  -  start);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trail,  offset,  buffer,  0,  length  -  start);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trail,  offset,  buffer,  0,  length  -  start);	  System.arraycopy(buffer,    offset,    trailer,    0,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(trole,  offset,  buffer,  0,  length  -  start);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trole,  offset,  buffer,  0,  length  -  start);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trole,  offset,  buffer,  0,  length  -  start);	  System.arraycopy(buffer,    offset,    trailer,    0,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
69	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start  +  1,  length);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start  +  1,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start  +  1,  length);	  System.arraycopy(buffer,    offset,    trailer,    0,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
70	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start,  buffer.length);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start,  buffer.length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start,  buffer.length);	  System.arraycopy(buffer,    offset,    trailer,    0,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
71	[BUG]  [BUGGY]  while  (end  <  =  start  &&  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  start  &&  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  start  &&  trailer  ==  0  ||  trailer  ==  '')  {	  while    (start    <    =    end    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
72	[BUG]  [BUGGY]  while  (start  <  =  trailer  &&  end  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  trailer  &&  end  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  trailer  &&  end  ==  0  ||  trailer  ==  '')  {	  while    (start    <    =    end    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
73	[BUG]  [BUGGY]  while  (twin  <  =  end  &&  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (twin  <  =  end  &&  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (twin  <  =  end  &&  trailer  ==  0  ||  trailer  ==  '')  {	  while    (start    <    =    end    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
74	[BUG]  [BUGGY]  while  (start  <  end  &&  trailer  ==  0  ||  trailer!=  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  end  &&  trailer  ==  0  ||  trailer!=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  end  &&  trailer  ==  0  ||  trailer!=  '')  {	  while    (start    <    =    end    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
75	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  length  >  0)  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  length  >  0)  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  length  >  0)  {	  while    (start    <    end    &&    trailer!=    0    ||    length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
76	[BUG]  [BUGGY]  while  (offset  <  end  &&  trailer!=  0  ||  length  >  0)  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (offset  <  end  &&  trailer!=  0  ||  length  >  0)  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (offset  <  end  &&  trailer!=  0  ||  length  >  0)  {	  while    (start    <    end    &&    trailer!=    0    ||    length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
77	[BUG]  [BUGGY]  while  (end  <  start  &&  trailer!=  0  ||  length  >  0)  {  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  &&  trailer!=  0  ||  length  >  0)  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  &&  trailer!=  0  ||  length  >  0)  {	  while    (start    <    end    &&    trailer!=    0    ||    length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
78	[BUG]  [BUGGY]  while  (length  <  end  &&  trailer!=  0  ||  start  >  0)  {  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  end  &&  trailer!=  0  ||  start  >  0)  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  end  &&  trailer!=  0  ||  start  >  0)  {	  while    (start    <    end    &&    trailer!=    0    ||    length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
79	[BUG]  [BUGGY]  while  (start  <  =  end  &&  trailer!=  0  ||  length  >  0)  {  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  end  &&  trailer!=  0  ||  length  >  0)  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  end  &&  trailer!=  0  ||  length  >  0)  {	  while    (start    <    end    &&    trailer!=    0    ||    length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
80	[BUG]  [BUGGY]  while  (end  <  end  &&  trailer!=  0  ||  length  >  0)  {  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  end  &&  trailer!=  0  ||  length  >  0)  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  end  &&  trailer!=  0  ||  length  >  0)  {	  while    (start    <    end    &&    trailer!=    0    ||    length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
81	[BUG]  [BUGGY]  while  (end  <  length  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  length  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  ||(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (end    <    length    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
82	[BUG]  [BUGGY]  while  (end  <  length  &&(trailer  ==  0  ||  trailer.charAt(end  -  1)  ==  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  length  &&(trailer  ==  0  ||  trailer.charAt(end  -  1)  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  &&(trailer  ==  0  ||  trailer.charAt(end  -  1)  ==  ''))  {	  while    (end    <    length    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
83	[BUG]  [BUGGY]  while  (start  <  =  trailer  &&  (trailer  ==  0  ||  end  >  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  trailer  &&  (trailer  ==  0  ||  end  >  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  trailer  &&  (trailer  ==  0  ||  end  >  ''))  {	  while    (start    <    =    trailer    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
84	[BUG]  [BUGGY]  while  (trailer  <  =  start  &&  (trailer  ==  0  ||  end  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (trailer  <  =  start  &&  (trailer  ==  0  ||  end  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (trailer  <  =  start  &&  (trailer  ==  0  ||  end  ==  ''))  {	  while    (start    <    =    trailer    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
85	[BUG]  [BUGGY]  while(offset  <  length  &&  trailer  ==  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(offset  <  length  &&  trailer  ==  0  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(offset  <  length  &&  trailer  ==  0  ||  end  ==  '')  {	  while(start    <    length    &&    trailer    ==    0    ||    end    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
86	[BUG]  [BUGGY]  while(length  <  start  &&  trailer  ==  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(length  <  start  &&  trailer  ==  0  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(length  <  start  &&  trailer  ==  0  ||  end  ==  '')  {	  while(start    <    length    &&    trailer    ==    0    ||    end    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
87	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  ==  0  ||  end  >  'e')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  length  &&  trailer  ==  0  ||  end  >  'e')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&  trailer  ==  0  ||  end  >  'e')  {	  while(start    <    length    &&    trailer    ==    0    ||    end    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
88	[BUG]  [BUGGY]  while  (length  <  =  start  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  =  start  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  =  start  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (start    <    =    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
89	[BUG]  [BUGGY]  while  (end  <  =  length  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  length  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  length  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (start    <    =    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
90	[BUG]  [BUGGY]  while  (offset  <  =  length  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (offset  <  =  length  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (offset  <  =  length  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (start    <    =    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
91	[BUG]  [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  trailer!=  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  trailer!=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  length  &&  trailer!=  0  ||  trailer!=  '')  {	  while    (start    <    =    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
92	[BUG]  [BUGGY]  while  (start  <  =  trailer  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  trailer  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  trailer  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {	  while    (start    <    =    trailer    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
93	[BUG]  [BUGGY]  while  (start  <  =  trailer  &&  (trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  trailer  &&  (trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  trailer  &&  (trailer  ==  0  ||  trailer!=  ''))  {	  while    (start    <    =    trailer    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
94	[BUG]  [BUGGY]  while  (trailer  <  =  start  &&  (trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (trailer  <  =  start  &&  (trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (trailer  <  =  start  &&  (trailer  ==  0  ||  trailer  ==  ''))  {	  while    (start    <    =    trailer    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
95	[BUG]  [BUGGY]  while  (offset  <  length  &&(trailer  ==  0  ||  trailer.length  ==  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (offset  <  length  &&(trailer  ==  0  ||  trailer.length  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (offset  <  length  &&(trailer  ==  0  ||  trailer.length  ==  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer.length    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
96	[BUG]  [BUGGY]  while  (length  <  start  &&(trailer  ==  0  ||  trailer.length  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  start  &&(trailer  ==  0  ||  trailer.length  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  start  &&(trailer  ==  0  ||  trailer.length  ==  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer.length    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
97	[BUG]  [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer.length  <  =  ''))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer.length  <  =  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&(trailer  ==  0  ||  trailer.length  <  =  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer.length    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
98	[BUG]  [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer.length  >=  ''))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer.length  >=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&(trailer  ==  0  ||  trailer.length  >=  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer.length    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
99	[BUG]  [BUGGY]  while  (start  <  length  &&(trailer!=  0  ||  trailer.length  ==  ''))  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&(trailer!=  0  ||  trailer.length  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&(trailer!=  0  ||  trailer.length  ==  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer.length    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
100	[BUG]  [BUGGY]  ||(tor!=  null  &&  trailer.length  >  0)||(tor  {  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(tor!=  null  &&  trailer.length  >  0)||(tor  {  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(tor!=  null  &&  trailer.length  >  0)||(tor  {  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(    trailer!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
101	[BUG]  [BUGGY]  ||(tor!=  null  &&  trailer.length  >  0)||(tor  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(tor!=  null  &&  trailer.length  >  0)||(tor  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(tor!=  null  &&  trailer.length  >  0)||(tor  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(    trailer!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
102	[BUG]  [BUGGY]  ||(tor!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(tor!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(tor!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(    trailer!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
103	[BUG]  [BUGGY]  ||(tor!=  null  &&  trailer.length  >  0)||(tor  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(tor!=  null  &&  trailer.length  >  0)||(tor  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(tor!=  null  &&  trailer.length  >  0)||(tor  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(    trailer!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
104	[BUG]  [BUGGY]  ||(tor!=  null  &&  trailer.length  >  0)||(tor  <  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(tor!=  null  &&  trailer.length  >  0)||(tor  <  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(tor!=  null  &&  trailer.length  >  0)||(tor  <  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(    trailer!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
105	[BUG]  [BUGGY]  While(tor!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  While(tor!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	While(tor!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(    trailer!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
106	[BUG]  [BUGGY]  ||(tor!=  null  &&  trailer.length  >  0)||(tor  <  =  LAST_VALID_BYTE))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(tor!=  null  &&  trailer.length  >  0)||(tor  <  =  LAST_VALID_BYTE))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(tor!=  null  &&  trailer.length  >  0)||(tor  <  =  LAST_VALID_BYTE))  {  throw  new  IllegalArgumentException( " ");  }	  if(    trailer!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
107	[BUG]  [BUGGY]  ||(start  <  length  &&  trailer.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(start  <  length  &&  trailer.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(start  <  length  &&  trailer.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
108	[BUG]  [BUGGY]  ||(start  <  length  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(start  <  length  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(start  <  length  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
109	[BUG]  [BUGGY]  ||(start  <  length  &&  trailer!=  null))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(start  <  length  &&  trailer!=  null))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(start  <  length  &&  trailer!=  null))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
110	[BUG]  [BUGGY]  ||(start  <  length  &&  trailer.charAt(rent.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(start  <  length  &&  trailer.charAt(rent.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(start  <  length  &&  trailer.charAt(rent.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
111	[BUG]  [BUGGY]  ||(start  <  length  &&  trailer.length  >  0)||(start  >  trailer.length  -  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(start  <  length  &&  trailer.length  >  0)||(start  >  trailer.length  -  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(start  <  length  &&  trailer.length  >  0)||(start  >  trailer.length  -  1))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
112	[BUG]  [BUGGY]  ||(start  <  length  &&  trailer.charAt(rent.length  -  1)!=  'n'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(start  <  length  &&  trailer.charAt(rent.length  -  1)!=  'n'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(start  <  length  &&  trailer.charAt(rent.length  -  1)!=  'n'))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
113	[BUG]  [BUGGY]  ||(start  <  length  &&  trailer.charAt(rent.length  -  1)!=  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(start  <  length  &&  trailer.charAt(rent.length  -  1)!=  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(start  <  length  &&  trailer.charAt(rent.length  -  1)!=  '-'))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
114	[BUG]  [BUGGY]  while  (start  <  0  ||  trailer!=  0  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  0  ||  trailer!=  0  ||  end  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  0  ||  trailer!=  0  ||  end  >  '')  {	  while    (start    <    0    ||    trailer!=    0    ||    end    >=    '')    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
115	[BUG]  [BUGGY]  while  (start  <  0  ||  trailer  ==  0  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  0  ||  trailer  ==  0  ||  end  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  0  ||  trailer  ==  0  ||  end  >  '')  {	  while    (start    <    0    ||    trailer!=    0    ||    end    >=    '')    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
116	[BUG]  [BUGGY]  while  (twin  <  0  ||  trailer!=  0  ||  end  >=  '')  {  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (twin  <  0  ||  trailer!=  0  ||  end  >=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (twin  <  0  ||  trailer!=  0  ||  end  >=  '')  {	  while    (start    <    0    ||    trailer!=    0    ||    end    >=    '')    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
117	[BUG]  [BUGGY]  while  (start  >=  0  ||  trailer!=  0  ||  end  >=  '')  {  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  >=  0  ||  trailer!=  0  ||  end  >=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  >=  0  ||  trailer!=  0  ||  end  >=  '')  {	  while    (start    <    0    ||    trailer!=    0    ||    end    >=    '')    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
118	[BUG]  [BUGGY]  while  (end  <  0  ||  trailer!=  0  ||  end  >=  '')  {  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  0  ||  trailer!=  0  ||  end  >=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  0  ||  trailer!=  0  ||  end  >=  '')  {	  while    (start    <    0    ||    trailer!=    0    ||    end    >=    '')    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
119	[BUG]  [BUGGY]  while  (start  <  0  ||  trailer  >=  0  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  0  ||  trailer  >=  0  ||  end  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  0  ||  trailer  >=  0  ||  end  >  '')  {	  while    (start    <    0    ||    trailer!=    0    ||    end    >=    '')    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
120	[BUG]  [BUGGY]  while(offset  <  length  &&  (trailer  ==  0  ||  end  ==  ''))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(offset  <  length  &&  (trailer  ==  0  ||  end  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(offset  <  length  &&  (trailer  ==  0  ||  end  ==  ''))  {	  while(start    <    length    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
121	[BUG]  [BUGGY]  while(start  <  length  &&  (trailer  ==  0  ||  end  >  trailer.length))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  length  &&  (trailer  ==  0  ||  end  >  trailer.length))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&  (trailer  ==  0  ||  end  >  trailer.length))  {	  while(start    <    length    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
122	[BUG]  [BUGGY]  byte  trailer  =  buffer[offset  +  1];  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  byte  trailer  =  buffer[offset  +  1];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	byte  trailer  =  buffer[offset  +  1];	  byte    trailer    =    buffer[offset    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
123	[BUG]  [BUGGY]  byte  trailer  =  buffer[offset  -  2];  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  byte  trailer  =  buffer[offset  -  2];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	byte  trailer  =  buffer[offset  -  2];	  byte    trailer    =    buffer[offset    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
124	[BUG]  [BUGGY]  System.arraycopy(trail,  0,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trail,  0,  buffer,  0,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trail,  0,  buffer,  0,  length);	  System.arraycopy(trail,    0,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(trail,  0,  trailer,  0,  length  -  1);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trail,  0,  trailer,  0,  length  -  1);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trail,  0,  trailer,  0,  length  -  1);	  System.arraycopy(trail,    0,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  0,  trailer,  0,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  0,  trailer,  0,  length);	  System.arraycopy(trail,    0,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
127	[BUG]  [BUGGY]  System.arraycopy(trail,  offset,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trail,  offset,  trailer,  0,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trail,  offset,  trailer,  0,  length);	  System.arraycopy(trail,    0,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
128	[BUG]  [BUGGY]  System.arraycopy(trail,  0,  trailer,  0,  length  +  1);  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trail,  0,  trailer,  0,  length  +  1);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trail,  0,  trailer,  0,  length  +  1);	  System.arraycopy(trail,    0,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
129	[BUG]  [BUGGY]  System.arraycopy(trail,  0,  container,  0,  length);  [CE]  <identifier>  expected  [FE]                                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trail,  0,  container,  0,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trail,  0,  container,  0,  length);	  System.arraycopy(trail,    0,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
130	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  final  byte  trailer  =  buffer[end  -  1];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	final  byte  trailer  =  buffer[end  -  1];	  final    byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
131	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[offset  -  1];  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  final  byte  trailer  =  buffer[offset  -  1];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	final  byte  trailer  =  buffer[offset  -  1];	  final    byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
132	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[start  -  1];  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  final  byte  trailer  =  buffer[start  -  1];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	final  byte  trailer  =  buffer[start  -  1];	  final    byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
133	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[length  -  2];  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  final  byte  trailer  =  buffer[length  -  2];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	final  byte  trailer  =  buffer[length  -  2];	  final    byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
134	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[load  -  1];  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  final  byte  trailer  =  buffer[load  -  1];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	final  byte  trailer  =  buffer[load  -  1];	  final    byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
135	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[length  -  1]  +  1;  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  final  byte  trailer  =  buffer[length  -  1]  +  1;  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	final  byte  trailer  =  buffer[length  -  1]  +  1;	  final    byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
136	[BUG]  [BUGGY]  while  (end  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
137	[BUG]  [BUGGY]  while  (offset  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (offset  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (offset  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
138	[BUG]  [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer!=  'e'))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer!=  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&(trailer  ==  0  ||  trailer!=  'e'))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
139	[BUG]  [BUGGY]  while  (length  <  start  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  start  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  start  &&(trailer  ==  0  ||  trailer  ==  'e'))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
140	[BUG]  [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer.length  ==  'e'))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  trailer.length  ==  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&(trailer  ==  0  ||  trailer.length  ==  'e'))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
141	[BUG]  [BUGGY]  while  (start  <  length  &&(trailer!=  0  ||  trailer  ==  'e'))  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&(trailer!=  0  ||  trailer  ==  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&(trailer!=  0  ||  trailer  ==  'e'))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
142	[BUG]  [BUGGY]  while  (end  <  =  start  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  start  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  start  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (start    <    =    end    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
143	[BUG]  [BUGGY]  while  (start  <  =  trailer  &&  end!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  trailer  &&  end!=  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  trailer  &&  end!=  0  ||  trailer  ==  '')  {	  while    (start    <    =    end    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
144	[BUG]  [BUGGY]  while  (twin  <  =  end  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (twin  <  =  end  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (twin  <  =  end  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (start    <    =    end    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
145	[BUG]  [BUGGY]  while  (length  <  start  &&  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  start  &&  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  start  &&  trailer  ==  0  ||  trailer  ==  '')  {	  while    (start    <    length    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
146	[BUG]  [BUGGY]  while  (offset  <  length  &&  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (offset  <  length  &&  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (offset  <  length  &&  trailer  ==  0  ||  trailer  ==  '')  {	  while    (start    <    length    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
147	[BUG]  [BUGGY]  while  (end  <  length  &&  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  length  &&  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  &&  trailer  ==  0  ||  trailer  ==  '')  {	  while    (start    <    length    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
148	[BUG]  [BUGGY]  while  (end  <  trailer  &&(trailer  ==  0  ||  trailer.length  ==  ''))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  trailer  &&(trailer  ==  0  ||  trailer.length  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  trailer  &&(trailer  ==  0  ||  trailer.length  ==  ''))  {	  while    (end    <    trailer    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
149	[BUG]  [BUGGY]  while  (end  <  trailer  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  trailer  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  trailer  ||(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (end    <    trailer    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
150	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  start,  end);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  start,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
151	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  start);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  start);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  start);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
152	[BUG]  [BUGGY]  System.arraycopy(trail,  offset,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trail,  offset,  buffer,  start,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trail,  offset,  buffer,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
153	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  start,  end);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  start,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
154	[BUG]  [BUGGY]  System.arraycopy(trole,  offset,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trole,  offset,  buffer,  start,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trole,  offset,  buffer,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
155	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  start,  length);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  start,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  start,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
156	[BUG]  [BUGGY]  System.arraycopy(trail,  offset,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trail,  offset,  buffer,  start,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trail,  offset,  buffer,  start,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
157	[BUG]  [BUGGY]  System.arraycopy(trole,  offset,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trole,  offset,  buffer,  start,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trole,  offset,  buffer,  start,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
158	[BUG]  [BUGGY]  System.arraycopy(bucket,  offset,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(bucket,  offset,  buffer,  start,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(bucket,  offset,  buffer,  start,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
159	[BUG]  [BUGGY]  System.arraycopy(trail,  0,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trail,  0,  buffer,  start,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trail,  0,  buffer,  start,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
160	[BUG]  [BUGGY]  System.arraycopy(frame,  offset,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(frame,  offset,  buffer,  start,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(frame,  offset,  buffer,  start,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
161	[BUG]  [BUGGY]  while  (end  <  length  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  length  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (end    <    end    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
162	[BUG]  [BUGGY]  while  (end  <  =  end  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  end  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  end  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (end    <    end    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
163	[BUG]  [BUGGY]  while  (end  <  len  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  len  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  len  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (end    <    end    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
164	[BUG]  [BUGGY]  while  (end  <  start  ||(trailer  ==  0  &&  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  ||(trailer  ==  0  &&  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  ||(trailer  ==  0  &&  trailer!=  ''))  {	  while    (end    <    start    ||(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
165	[BUG]  [BUGGY]  while  (end  <  trailer  ||(trailer  ==  0  &&  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  trailer  ||(trailer  ==  0  &&  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  trailer  ||(trailer  ==  0  &&  trailer!=  ''))  {	  while    (end    <    start    ||(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
166	[BUG]  [BUGGY]  while  (end  <  =  trailer  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  trailer  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  trailer  ||(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (end    <    start    ||(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
167	[BUG]  [BUGGY]  while  (end  <  start  ||(trailer  ==  0  &&  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  ||(trailer  ==  0  &&  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  ||(trailer  ==  0  &&  trailer  ==  ''))  {	  while    (end    <    start    ||(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
168	[BUG]  [BUGGY]  while  (end  <  trailer  ||(trailer  ==  0  &&  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  trailer  ||(trailer  ==  0  &&  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  trailer  ||(trailer  ==  0  &&  trailer  ==  ''))  {	  while    (end    <    start    ||(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
169	[BUG]  [BUGGY]  while  (length  <  start  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  start  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  start  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
170	[BUG]  [BUGGY]  while  (offset  <  length  &&  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (offset  <  length  &&  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (offset  <  length  &&  trailer!=  0  ||  trailer  ==  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
171	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  trailer  ==  'e')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  trailer  ==  'e')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  trailer  ==  'e')  {	  while    (start    <    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
172	[BUG]  [BUGGY]  while(end  <  =  length  &&  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(end  <  =  length  &&  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  =  length  &&  trailer  ==  0  ||  trailer  ==  '')  {	  while(start    <    =    length    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
173	[BUG]  [BUGGY]  while(length  <  =  start  &&  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(length  <  =  start  &&  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(length  <  =  start  &&  trailer  ==  0  ||  trailer  ==  '')  {	  while(start    <    =    length    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
174	[BUG]  [BUGGY]  while(offset  <  =  length  &&  trailer  ==  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(offset  <  =  length  &&  trailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(offset  <  =  length  &&  trailer  ==  0  ||  trailer  ==  '')  {	  while(start    <    =    length    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
175	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  ==  0  ||  trailer!=  '')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  length  &&  trailer  ==  0  ||  trailer!=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&  trailer  ==  0  ||  trailer!=  '')  {	  while(start    <    =    length    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
176	[BUG]  [BUGGY]  while(start  <  =  length  &&  trailer  ==  0  ||  trailer!=  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  =  length  &&  trailer  ==  0  ||  trailer!=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  =  length  &&  trailer  ==  0  ||  trailer!=  '')  {	  while(start    <    =    length    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
177	[BUG]  [BUGGY]  while  (end  <  start  ||(trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  ||(trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  ||(trailer  ==  0  ||  trailer!=  ''))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
178	[BUG]  [BUGGY]  while  (end  <  =  trailer  &&(trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  trailer  &&(trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  trailer  &&(trailer  ==  0  ||  trailer!=  ''))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
179	[BUG]  [BUGGY]  while  (end  <  =  start  &&(trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  start  &&(trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  start  &&(trailer  ==  0  ||  trailer!=  ''))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
180	[BUG]  [BUGGY]  while  (end  <  start  &&(trailer  ==  0  ||  trailer.length!=  ''))  {  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  &&(trailer  ==  0  ||  trailer.length!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  &&(trailer  ==  0  ||  trailer.length!=  ''))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
181	[BUG]  [BUGGY]  while(offset  <  =  length  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(offset  <  =  length  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(offset  <  =  length  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {	  while(offset    <    =    length    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
182	[BUG]  [BUGGY]  while(offset  >=  length  &&  (trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(offset  >=  length  &&  (trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(offset  >=  length  &&  (trailer  ==  0  ||  trailer  ==  ''))  {	  while(offset    <    =    length    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
183	[BUG]  [BUGGY]  while(offset  <  =  length  &&  (trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(offset  <  =  length  &&  (trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(offset  <  =  length  &&  (trailer  ==  0  ||  trailer!=  ''))  {	  while(offset    <    =    length    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
184	[BUG]  [BUGGY]  ||(trol!=  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trol!=  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trol!=  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
185	[BUG]  [BUGGY]  ||(trol!=  null  &&  trailer.length  >  0)||(trol  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trol!=  null  &&  trailer.length  >  0)||(trol  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trol!=  null  &&  trailer.length  >  0)||(trol  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
186	[BUG]  [BUGGY]  while(start  <  =  length  &&  (trailer  ==  0  ||  trailer.length!=  ''))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  =  length  &&  (trailer  ==  0  ||  trailer.length!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  =  length  &&  (trailer  ==  0  ||  trailer.length!=  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
187	[BUG]  [BUGGY]  while(length  <  =  start  &&  (trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(length  <  =  start  &&  (trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(length  <  =  start  &&  (trailer  ==  0  ||  trailer!=  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
188	[BUG]  [BUGGY]  while  (offset  <  length  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (offset  <  length  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (offset  <  length  ||(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (offset    <    length    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
189	[BUG]  [BUGGY]  System.arraycopy(trail,  offset,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trail,  offset,  buffer,  0,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trail,  offset,  buffer,  0,  length);	  System.arraycopy(buffer,    offset,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
190	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  +  1);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  +  1);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length  +  1);	  System.arraycopy(buffer,    offset,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
191	[BUG]  [BUGGY]  System.arraycopy(trole,  offset,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trole,  offset,  buffer,  0,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trole,  offset,  buffer,  0,  length);	  System.arraycopy(buffer,    offset,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
192	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  2);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  2);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length  -  2);	  System.arraycopy(buffer,    offset,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
193	[BUG]  [BUGGY]  while  (length  <  start  &&  trailer!=  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (length  <  start  &&  trailer!=  0  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (length  <  start  &&  trailer!=  0  ||  end  ==  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    end    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
194	[BUG]  [BUGGY]  while  (offset  <  length  &&  trailer!=  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (offset  <  length  &&  trailer!=  0  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (offset  <  length  &&  trailer!=  0  ||  end  ==  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    end    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
195	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  end  >  'e')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  end  >  'e')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  end  >  'e')  {	  while    (start    <    length    &&    trailer!=    0    ||    end    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
196	[BUG]  [BUGGY]  while  (end  <  length  &&  trailer!=  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  length  &&  trailer!=  0  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  &&  trailer!=  0  ||  end  ==  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    end    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
197	[BUG]  [BUGGY]  while  (start  <  length  ||  trailer!=  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  ||  trailer!=  0  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  ||  trailer!=  0  ||  end  ==  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    end    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
198	[BUG]  [BUGGY]  while  (end  <  start  ||(trailer  ==  0  ||  trailer  ==  'e'))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  ||(trailer  ==  0  ||  trailer  ==  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  ||(trailer  ==  0  ||  trailer  ==  'e'))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
199	[BUG]  [BUGGY]  while  (end  <  trailer  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  trailer  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  trailer  &&(trailer  ==  0  ||  trailer  ==  'e'))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
200	[BUG]  [BUGGY]  while  (end  <  =  start  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  start  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  start  &&(trailer  ==  0  ||  trailer  ==  'e'))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
201	[BUG]  [BUGGY]  while  (end  <  =  trailer  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  trailer  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  trailer  &&(trailer  ==  0  ||  trailer  ==  'e'))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
202	[BUG]  [BUGGY]  while  (end  <  start  &&(trailer  ==  0  ||  trailer!=  'e'))  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  &&(trailer  ==  0  ||  trailer!=  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  &&(trailer  ==  0  ||  trailer!=  'e'))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
203	[BUG]  [BUGGY]  while(length  <  =  start  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(length  <  =  start  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(length  <  =  start  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    trailer.length    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
204	[BUG]  [BUGGY]  while  (end  <  trailer  &&(trailer  ==  0  ||  trailer.length!=  ''))  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  trailer  &&(trailer  ==  0  ||  trailer.length!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  trailer  &&(trailer  ==  0  ||  trailer.length!=  ''))  {	  while    (end    <    trailer    &&(trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
205	[BUG]  [BUGGY]  while  (end  <  trailer  ||(trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  trailer  ||(trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  trailer  ||(trailer  ==  0  ||  trailer!=  ''))  {	  while    (end    <    trailer    &&(trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
206	[BUG]  [BUGGY]  while  (end  <  0  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  0  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  0  ||(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (end    <    end    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
207	[BUG]  [BUGGY]  while  (end  <  =  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (end    <    end    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
208	[BUG]  [BUGGY]  while  (end  <  len  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  len  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  len  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (end    <    end    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
209	[BUG]  [BUGGY]  ||(trail  ==  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trail  ==  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trail  ==  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trail    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
210	[BUG]  [BUGGY]  ||  trailer  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||  trailer  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||  trailer  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(trail    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
211	[BUG]  [BUGGY]  ||(trail  ==  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.charAt(trail.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trail  ==  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.charAt(trail.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trail  ==  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.charAt(trail.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }	  if(trail    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
212	[BUG]  [BUGGY]  ||(trail  ==  null  &&  trailer.length  >  0)||(trail  >=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trail  ==  null  &&  trailer.length  >  0)||(trail  >=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trail  ==  null  &&  trailer.length  >  0)||(trail  >=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trail    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
213	[BUG]  [BUGGY]  ||(trail  ==  null  &&  trailer.length  >  0)||(trail  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trail  ==  null  &&  trailer.length  >  0)||(trail  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trail  ==  null  &&  trailer.length  >  0)||(trail  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trail    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
214	[BUG]  [BUGGY]  while  (end  <  =  trailer  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  trailer  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  trailer  &&  (trailer  ==  0  ||  trailer.length  ==  ''))  {	  while    (end    <    =    trailer    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
215	[BUG]  [BUGGY]  while  (end  <  start  &&  trailer  ==  0  ||  trailer!=  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  &&  trailer  ==  0  ||  trailer!=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  &&  trailer  ==  0  ||  trailer!=  '')  {	  while    (end    <    start    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
216	[BUG]  [BUGGY]  while  (end  <  start  ||  trailer!=  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  ||  trailer!=  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  ||  trailer!=  0  ||  trailer  ==  '')  {	  while    (end    <    start    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
217	[BUG]  [BUGGY]  while  (end  <  start  &&  trailer!=  0  ||  trailer  ==  'e')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  &&  trailer!=  0  ||  trailer  ==  'e')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  &&  trailer!=  0  ||  trailer  ==  'e')  {	  while    (end    <    start    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
218	[BUG]  [BUGGY]  byte  trailer  =  buffer[offset  -  1]  +  length;  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  byte  trailer  =  buffer[offset  -  1]  +  length;  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	byte  trailer  =  buffer[offset  -  1]  +  length;	  byte    trailer    =    buffer[offset    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
219	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[0];  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  final  byte  trailer  =  buffer[0];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	final  byte  trailer  =  buffer[0];	  final    byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
220	[BUG]  [BUGGY]  while  (end  <  =  trailer  &&  (trailer  ==  0  ||  start  ==  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  trailer  &&  (trailer  ==  0  ||  start  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  trailer  &&  (trailer  ==  0  ||  start  ==  ''))  {	  while    (start    <    =    trailer    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
221	[BUG]  [BUGGY]  while(start  <  =  length  &&  (trailer  ==  0  ||  end  >  trailer.length))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  =  length  &&  (trailer  ==  0  ||  end  >  trailer.length))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  =  length  &&  (trailer  ==  0  ||  end  >  trailer.length))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
222	[BUG]  [BUGGY]  while(end  <  =  length  &&  (trailer  ==  0  ||  start  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(end  <  =  length  &&  (trailer  ==  0  ||  start  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  =  length  &&  (trailer  ==  0  ||  start  ==  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
223	[BUG]  [BUGGY]  while(end  <  =  length  &&  (trailer  ==  0  ||  end  ==  ''))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(end  <  =  length  &&  (trailer  ==  0  ||  end  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  =  length  &&  (trailer  ==  0  ||  end  ==  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
224	[BUG]  [BUGGY]  ||(trole  ==  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trole  ==  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trole  ==  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
225	[BUG]  [BUGGY]  ||(trole  ==  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.charAt(trole.length  -  1)!=  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trole  ==  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.charAt(trole.length  -  1)!=  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trole  ==  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.charAt(trole.length  -  1)!=  '-'))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
226	[BUG]  [BUGGY]  ||(trole  ==  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.charAt(trole.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trole  ==  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.charAt(trole.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trole  ==  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.charAt(trole.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
227	[BUG]  [BUGGY]  ||(trole  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trole  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trole  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
228	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(trole    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
229	[BUG]  [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  start  >  'e'))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&(trailer  ==  0  ||  start  >  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&(trailer  ==  0  ||  start  >  'e'))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
230	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  1);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  1);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
231	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  +  1);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  +  1);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end  +  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
232	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  start);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  start);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end  -  start);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
233	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
234	[BUG]  [BUGGY]  ||(trole!=  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trole!=  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trole!=  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
235	[BUG]  [BUGGY]  ||(trole!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trole!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trole!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
236	[BUG]  [BUGGY]  ||(trole!=  null  &&  trailer.length  >  0)||(trole  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trole!=  null  &&  trailer.length  >  0)||(trole  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trole!=  null  &&  trailer.length  >  0)||(trole  ==  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
237	[BUG]  [BUGGY]  if(rent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(rent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(rent!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(trole!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
238	[BUG]  [BUGGY]  ||(trole!=  null  &&  trailer.length  >  0)||(trole  >=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trole!=  null  &&  trailer.length  >  0)||(trole  >=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trole!=  null  &&  trailer.length  >  0)||(trole  >=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
239	[BUG]  [BUGGY]  while  (end  <  =  trailer  &&(trailer  ==  0  ||  end  ==  ''))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  trailer  &&(trailer  ==  0  ||  end  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  trailer  &&(trailer  ==  0  ||  end  ==  ''))  {	  while    (end    <    =    start    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
240	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    trailer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
241	[BUG]  [BUGGY]  System.arraycopy(trolo,  offset,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trolo,  offset,  buffer,  0,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trolo,  offset,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    trailer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
242	[BUG]  [BUGGY]  System.arraycopy(twin,  offset,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(twin,  offset,  buffer,  0,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(twin,  offset,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    trailer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
243	[BUG]  [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(trail!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
244	[BUG]  [BUGGY]  while(trail!=  null)  {  trailer  =  trailer[end  -  1];  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(trail!=  null)  {  trailer  =  trailer[end  -  1];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(trail!=  null)  {  trailer  =  trailer[end  -  1];	  if(trail!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
245	[BUG]  [BUGGY]  while(trail!=  null)  {  trailer  =  trailer.getByte();  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(trail!=  null)  {  trailer  =  trailer.getByte();  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(trail!=  null)  {  trailer  =  trailer.getByte();	  if(trail!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
246	[BUG]  [BUGGY]  while(end  <  length  &&  (trailer  ==  0  ||  start  ==  ''))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(end  <  length  &&  (trailer  ==  0  ||  start  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  length  &&  (trailer  ==  0  ||  start  ==  ''))  {	  while(end    <    =    length    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
247	[BUG]  [BUGGY]  while(end  <  length  &&  (trailer  ==  0  ||  end  ==  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(end  <  length  &&  (trailer  ==  0  ||  end  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  length  &&  (trailer  ==  0  ||  end  ==  ''))  {	  while(end    <    =    length    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
248	[BUG]  [BUGGY]  while(offset  <  length  &&  (trailer  ==  0  ||  start  ==  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(offset  <  length  &&  (trailer  ==  0  ||  start  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(offset  <  length  &&  (trailer  ==  0  ||  start  ==  ''))  {	  while(offset    <    =    length    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
249	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  trailer,  length);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  trailer,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  trailer,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
250	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
251	[BUG]  [BUGGY]  System.arraycopy(twin,  offset,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(twin,  offset,  buffer,  start,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(twin,  offset,  buffer,  start,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
252	[BUG]  [BUGGY]  while  (end  <  length  ||  trailer  ==  0  ||  start  ==  '')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  length  ||  trailer  ==  0  ||  start  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  ||  trailer  ==  0  ||  start  ==  '')  {	  while    (end    <    start    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
253	[BUG]  [BUGGY]  while  (end  <  start  ||  end  >  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  ||  end  >  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  ||  end  >  0  ||  trailer  ==  '')  {	  while    (end    <    start    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
254	[BUG]  [BUGGY]  while  (end  <  start  ||  trailer  ==  0  ||  length  >  '')  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  ||  trailer  ==  0  ||  length  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  ||  trailer  ==  0  ||  length  >  '')  {	  while    (end    <    start    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
255	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  >  '')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  start  >  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
256	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  >=  'e')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  >=  'e')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  start  >=  'e')  {	  while    (start    <    length    &&    trailer!=    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
257	[BUG]  [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  length  &&  trailer!=  0  ||  end  ==  '')  {	  while    (start    <    =    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
258	[BUG]  [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  end  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  length  &&  trailer!=  0  ||  end  >  '')  {	  while    (start    <    =    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
259	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  >  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer  ==  0  ||  start  >  '')  {	  while    (start    <    length    &&    trailer    ==    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
260	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  >=  'e')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  >=  'e')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer  ==  0  ||  start  >=  'e')  {	  while    (start    <    length    &&    trailer    ==    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
261	[BUG]  [BUGGY]  While(trail!=  null)  {  trailer  =  trailer.getByte();  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  While(trail!=  null)  {  trailer  =  trailer.getByte();  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	While(trail!=  null)  {  trailer  =  trailer.getByte();  }	  if(trail    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
262	[BUG]  [BUGGY]  while(trail!=  null)  {  trailer  =  trailer[0];  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(trail!=  null)  {  trailer  =  trailer[0];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(trail!=  null)  {  trailer  =  trailer[0];	  if(trail    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
263	[BUG]  [BUGGY]  while  (end  <  start  &&  trailer!=  0  ||  end  >  'e')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  &&  trailer!=  0  ||  end  >  'e')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  &&  trailer!=  0  ||  end  >  'e')  {	  while    (end    <    start    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
264	[BUG]  [BUGGY]  while  (end  <  start  &&  trailer!=  0  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  &&  trailer!=  0  ||  end  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  &&  trailer!=  0  ||  end  >  '')  {	  while    (end    <    start    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
265	[BUG]  [BUGGY]  while  (end  <  0  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  0  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  0  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (end    <    trailer    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
266	[BUG]  [BUGGY]  while  (end  <  0  &&(trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  0  &&(trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  0  &&(trailer  ==  0  ||  trailer!=  ''))  {	  while    (end    <    trailer    &&(trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
267	[BUG]  [BUGGY]  while  (end  <  end  &&(trailer  ==  0  ||  trailer!=  ''))  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  end  &&(trailer  ==  0  ||  trailer!=  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  end  &&(trailer  ==  0  ||  trailer!=  ''))  {	  while    (end    <    trailer    &&(trailer    ==    0    ||    trailer!=    ''))    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
268	[BUG]  [BUGGY]  while(start  >=  length  &&  trailer!=  0  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  >=  length  &&  trailer!=  0  ||  end  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  >=  length  &&  trailer!=  0  ||  end  >  '')  {	  while(start    <    length    &&    trailer!=    0    ||    end    >    '')    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
269	[BUG]  [BUGGY]  while(length  <  =  0  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(length  <  =  0  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(length  <  =  0  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (length    <    start    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
270	[BUG]  [BUGGY]  while(end  <  start  &&  trailer  ==  0  ||  end  >  trailer.length)  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(end  <  start  &&  trailer  ==  0  ||  end  >  trailer.length)  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  start  &&  trailer  ==  0  ||  end  >  trailer.length)  {	  while    (end    <    start    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
271	[BUG]  [BUGGY]  while  (start  <  0  ||  end  >  0  ||  trailer!=  '')  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  0  ||  end  >  0  ||  trailer!=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  0  ||  end  >  0  ||  trailer!=  '')  {	  while    (start    <    0    ||    trailer!=    0    ||    end    >=    '')    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
272	[BUG]  [BUGGY]  while  (start  <  0  ||  start  >  0  ||  end  >=  '')  {  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  0  ||  start  >  0  ||  end  >=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  0  ||  start  >  0  ||  end  >=  '')  {	  while    (start    <    0    ||    trailer!=    0    ||    end    >=    '')    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
273	[BUG]  [BUGGY]  while  (end  <  length  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  length  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  length  &&(trailer  ==  0  ||  trailer  ==  '.'))  {	  while    (end    <    length    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
274	[BUG]  [BUGGY]  while  (end  <  =  trailer  &&  (trailer  ==  0  ||  end  >  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  =  trailer  &&  (trailer  ==  0  ||  end  >  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  =  trailer  &&  (trailer  ==  0  ||  end  >  ''))  {	  while    (end    <    =    trailer    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
275	[BUG]  [BUGGY]  while  (start  <  end  ||  trailer  ==  0  ||  length  >  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  end  ||  trailer  ==  0  ||  length  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  end  ||  trailer  ==  0  ||  length  >  '')  {	  while    (start    <    end    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
276	[BUG]  [BUGGY]  while(start  <  =  length  &&  trailer  ==  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  =  length  &&  trailer  ==  0  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  =  length  &&  trailer  ==  0  ||  end  ==  '')  {	  while(start    <    =    length    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
277	[BUG]  [BUGGY]  while  (twin  <  length  &&  trailer!=  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (twin  <  length  &&  trailer!=  0  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (twin  <  length  &&  trailer!=  0  ||  end  ==  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    end    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
278	[BUG]  [BUGGY]  while  (end  <  end  ||(trailer  ==  0  &&  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  end  ||(trailer  ==  0  &&  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  end  ||(trailer  ==  0  &&  trailer  ==  ''))  {	  while    (end    <    start    ||(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
279	[BUG]  [BUGGY]  if(twin  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(twin  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(twin  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
280	[BUG]  [BUGGY]  if(tunnecessary)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(tunnecessary)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(tunnecessary)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
281	[BUG]  [BUGGY]  if(tor  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(tor  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(tor  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
282	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  >  trailer.length)  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  >  trailer.length)  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer  ==  0  ||  start  >  trailer.length)  {	  while    (start    <    length    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
283	[BUG]  [BUGGY]  byte  trailer  =  buffer[load  -  1];  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  byte  trailer  =  buffer[load  -  1];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	byte  trailer  =  buffer[load  -  1];	  byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
284	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  ==  0  ||  start  >  end)  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  length  &&  trailer  ==  0  ||  start  >  end)  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&  trailer  ==  0  ||  start  >  end)  {	  while(start    <    length    &&    trailer    ==    0    ||    end    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
285	[BUG]  [BUGGY]  if(twin!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(twin!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(twin!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(    trailer!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
286	[BUG]  [BUGGY]  while(twin!=  null)  {  trailer  =  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(twin!=  null)  {  trailer  =  buffer[end  -  1];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(twin!=  null)  {  trailer  =  buffer[end  -  1];	  if(    trailer!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
287	[BUG]  [BUGGY]  while(twin!=  null)  {  buffer[end  -  1]  =  new  byte[length  -  1];  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(twin!=  null)  {  buffer[end  -  1]  =  new  byte[length  -  1];  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(twin!=  null)  {  buffer[end  -  1]  =  new  byte[length  -  1];	  if(    trailer!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
288	[BUG]  [BUGGY]  while  (end  <  0  ||  trailer!=  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  0  ||  trailer!=  0  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  0  ||  trailer!=  0  ||  end  ==  '')  {	  while    (end    <    end    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
289	[BUG]  [BUGGY]  while  (start  <  end  &&  trailer!=  0  ||  start  ==  '')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  end  &&  trailer!=  0  ||  start  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  end  &&  trailer!=  0  ||  start  ==  '')  {	  while    (start    <    =    end    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
290	[BUG]  [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  start  ==  '')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  start  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  length  &&  trailer!=  0  ||  start  ==  '')  {	  while    (start    <    =    end    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
291	[BUG]  [BUGGY]  while  (start  <  end  &&  trailer  ==  0  ||  start  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  end  &&  trailer  ==  0  ||  start  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  end  &&  trailer  ==  0  ||  start  ==  '')  {	  while    (start    <    =    end    &&    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
292	[BUG]  [BUGGY]  System.arraycopy(trolo,  offset,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trolo,  offset,  buffer,  0,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trolo,  offset,  buffer,  0,  length);	  System.arraycopy(buffer,    offset,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
293	[BUG]  [BUGGY]  while(start  <  length  &&  (trailer  ==  0  ||  end  >  ''))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  length  &&  (trailer  ==  0  ||  end  >  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&  (trailer  ==  0  ||  end  >  ''))  {	  while(start    <    length    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
294	[BUG]  [BUGGY]  while(start  >=  length  &&  (trailer  ==  0  ||  end  ==  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  >=  length  &&  (trailer  ==  0  ||  end  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  >=  length  &&  (trailer  ==  0  ||  end  ==  ''))  {	  while(start    <    length    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
295	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  end  >  0)  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  end  >  0)  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  end  >  0)  {	  while    (start    <    end    &&    trailer!=    0    ||    length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
296	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  start);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  start);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  -  start);	  System.arraycopy(buffer,    offset,    trailer,    0,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
297	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  start  -  length);  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  start  -  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  start  -  length);	  System.arraycopy(buffer,    offset,    trailer,    0,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
298	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  >  'e')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  >  'e')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  start  >  'e')  {	  while    (start    <    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
299	[BUG]  [BUGGY]  while  (twin  <  length  &&  trailer!=  0  ||  start  ==  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (twin  <  length  &&  trailer!=  0  ||  start  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (twin  <  length  &&  trailer!=  0  ||  start  ==  '')  {	  while    (start    <    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
300	[BUG]  [BUGGY]  while  (end  <  end  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  end  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  end  &&(trailer  ==  0  ||  trailer  ==  'e'))  {	  while    (end    <    start    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
301	[BUG]  [BUGGY]  System.arraycopy(trails,  0,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trails,  0,  buffer,  0,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trails,  0,  buffer,  0,  length);	  System.arraycopy(trail,    0,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
302	[BUG]  [BUGGY]  System.arraycopy(report,  0,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(report,  0,  trailer,  0,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(report,  0,  trailer,  0,  length);	  System.arraycopy(trail,    0,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
303	[BUG]  [BUGGY]  System.arraycopy(TRUE,  0,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(TRUE,  0,  buffer,  0,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(TRUE,  0,  buffer,  0,  length);	  System.arraycopy(trail,    0,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
304	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  end  >  '9')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  end  >  '9')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  end  >  '9')  {	  while    (start    <    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
305	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  >  '9')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  >  '9')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  start  >  '9')  {	  while    (start    <    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
306	[BUG]  [BUGGY]  while(start  <  length  &&(end  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  length  &&(end  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&(end  ==  0  ||  trailer  ==  ''))  {	  while(start    <    length    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
307	[BUG]  [BUGGY]  while(offset  <  =  length  &&  (trailer!=  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(offset  <  =  length  &&  (trailer!=  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(offset  <  =  length  &&  (trailer!=  0  ||  trailer  ==  ''))  {	  while(offset    <    =    length    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
308	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  end,  length);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  end,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  end,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
309	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer.length  >  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer.length  >  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&(trailer  ==  0  ||  trailer.length  >  ''))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer.length    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
310	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start  +  1,  buffer.length);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start  +  1,  buffer.length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start  +  1,  buffer.length);	  System.arraycopy(buffer,    offset,    trailer,    0,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
311	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start  +  1,  length  -  1);  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start  +  1,  length  -  1);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length  -  start  +  1,  length  -  1);	  System.arraycopy(buffer,    offset,    trailer,    0,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
312	[BUG]  [BUGGY]  ||(trole!=  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.charAt(trole.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trole!=  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.charAt(trole.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trole!=  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.charAt(trole.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
313	[BUG]  [BUGGY]  ||(trole!=  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.charAt(trole.length  -  1)!=  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trole!=  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.charAt(trole.length  -  1)!=  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trole!=  null  &&  trailer.length  >  0)||(trole!=  null  &&  trailer.charAt(trole.length  -  1)!=  '-'))  {  throw  new  IllegalArgumentException( " ");  }	  if(trole!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
314	[BUG]  [BUGGY]  ||(trail!=  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.charAt(trail.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trail!=  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.charAt(trail.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trail!=  null  &&  trailer.length  >  0)||(trail!=  null  &&  trailer.charAt(trail.length  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( " ");  }	  if(trail!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
315	[BUG]  [BUGGY]  while(trail!=  null  &&  trailer.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(trail!=  null  &&  trailer.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(trail!=  null  &&  trailer.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(trail!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
316	[BUG]  [BUGGY]  ||(trail!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(trail!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(trail!=  null  &&  trailer.length  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(trail!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
317	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  >=  end)  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  >=  end)  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer  ==  0  ||  start  >=  end)  {	  while    (start    <    length    &&    trailer    ==    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
318	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  >  '9')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer  ==  0  ||  start  >  '9')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer  ==  0  ||  start  >  '9')  {	  while    (start    <    length    &&    trailer    ==    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
319	[BUG]  [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  length  >  0)  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  length  >  0)  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  length  &&  trailer!=  0  ||  length  >  0)  {	  while    (start    <    end    &&    trailer!=    0    ||    length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
320	[BUG]  [BUGGY]  while(start  <  end  ||  trailer  ==  0  ||  length  >  '9')  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  end  ||  trailer  ==  0  ||  length  >  '9')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  end  ||  trailer  ==  0  ||  length  >  '9')  {	  while    (start    <    end    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
321	[BUG]  [BUGGY]  if(tor  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(tor  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(tor  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(    trailer!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
322	[BUG]  [BUGGY]  while(end  <  length  &&  trailer  ==  0  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(end  <  length  &&  trailer  ==  0  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  length  &&  trailer  ==  0  ||  end  ==  '')  {	  while(start    <    length    &&    trailer    ==    0    ||    end    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
323	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!=  null  ||  end  ==  '')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  length  &&  trailer!=  null  ||  end  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&  trailer!=  null  ||  end  ==  '')  {	  while(start    <    length    &&    trailer    ==    0    ||    end    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
324	[BUG]  [BUGGY]  if(trail  ==  null  ||  trailer.length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(trail  ==  null  ||  trailer.length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(trail  ==  null  ||  trailer.length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(trail    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
325	[BUG]  [BUGGY]  while(offset  <  length  &&(trailer!=  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(offset  <  length  &&(trailer!=  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(offset  <  length  &&(trailer!=  0  ||  trailer  ==  ''))  {	  while    (offset    <    length    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
326	[BUG]  [BUGGY]  while(length  >  trailer  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(length  >  trailer  &&(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(length  >  trailer  &&(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (length    <    start    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
327	[BUG]  [BUGGY]  if(trol  ==  null  ||  trailer.length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(trol  ==  null  ||  trailer.length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(trol  ==  null  ||  trailer.length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(trole    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
328	[BUG]  [BUGGY]  System.arraycopy(trail,  start,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trail,  start,  buffer,  0,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trail,  start,  buffer,  0,  length);	  System.arraycopy(trail,    0,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
329	[BUG]  [BUGGY]  System.arraycopy(stream,  0,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(stream,  0,  trailer,  0,  length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(stream,  0,  trailer,  0,  length);	  System.arraycopy(trail,    0,    trailer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
330	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end  -  1);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end  -  1);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  end  -  1);	  System.arraycopy(buffer,    offset,    trailer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
331	[BUG]  [BUGGY]  System.arraycopy(twin,  offset,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(twin,  offset,  buffer,  start,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(twin,  offset,  buffer,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
332	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  trailer.length);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  trailer.length);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  trailer.length);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
333	[BUG]  [BUGGY]  System.arraycopy(trole,  0,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  System.arraycopy(trole,  0,  buffer,  start,  end);  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	System.arraycopy(trole,  0,  buffer,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
334	[BUG]  [BUGGY]  while(start  <  length  ||  trailer!=  0  ||  end  >  '')  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  length  ||  trailer!=  0  ||  end  >  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  ||  trailer!=  0  ||  end  >  '')  {	  while(start    <    length    &&    trailer!=    0    ||    end    >    '')    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
335	[BUG]  [BUGGY]  while(start  <  =  length  &&  (trailer!=  0  ||  trailer.length  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  =  length  &&  (trailer!=  0  ||  trailer.length  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  =  length  &&  (trailer!=  0  ||  trailer.length  ==  ''))  {	  while(start    <    =    length    &&    (trailer    ==    0    ||    trailer.length    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
336	[BUG]  [BUGGY]  while  (start  <  =  trailer  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  trailer  ||(trailer  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  trailer  ||(trailer  ==  0  ||  trailer  ==  ''))  {	  while    (start    <    =    trailer    &&    (trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
337	[BUG]  [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  >=  end)  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  length  &&  trailer!=  0  ||  start  >=  end)  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  length  &&  trailer!=  0  ||  start  >=  end)  {	  while    (start    <    length    &&    trailer!=    0    ||    start    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
338	[BUG]  [BUGGY]  while  (end  <  start  ||  trailer  ==  0  ||  end  >  '9')  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (end  <  start  ||  trailer  ==  0  ||  end  >  '9')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (end  <  start  ||  trailer  ==  0  ||  end  >  '9')  {	  while    (end    <    start    ||    trailer    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
339	[BUG]  [BUGGY]  while(start  <  =  0  ||  trailer!=  0  ||  end  >=  '')  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  =  0  ||  trailer!=  0  ||  end  >=  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  =  0  ||  trailer!=  0  ||  end  >=  '')  {	  while    (start    <    0    ||    trailer!=    0    ||    end    >=    '')    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
340	[BUG]  [BUGGY]  while  (start  <  =  trailer  &&(end  ==  0  ||  trailer  ==  ''))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  trailer  &&(end  ==  0  ||  trailer  ==  ''))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  trailer  &&(end  ==  0  ||  trailer  ==  ''))  {	  while    (start    <    =    trailer    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
341	[BUG]  [BUGGY]  while(start  <  =  trailer  &&(trailer  ==  0  ||  end  >  trailer.length))  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  =  trailer  &&(trailer  ==  0  ||  end  >  trailer.length))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  =  trailer  &&(trailer  ==  0  ||  end  >  trailer.length))  {	  while    (start    <    =    trailer    &&    (trailer    ==    0    ||    end    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
342	[BUG]  [BUGGY]  while(end  <  length  &&(trailer  ==  0)||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(end  <  length  &&(trailer  ==  0)||  trailer  ==  '')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(end  <  length  &&(trailer  ==  0)||  trailer  ==  '')  {	  while    (end    <    length    &&(trailer    ==    0    ||    trailer    ==    ''))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
343	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'  ||  trailer  ==  'E'))  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'  ||  trailer  ==  'E'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'  ||  trailer  ==  'E'))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
344	[BUG]  [BUGGY]  while(start  <  =  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  =  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  =  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {	  while    (start    <    length    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
345	[BUG]  [BUGGY]  if(start  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(start  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(start  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
346	[BUG]  [BUGGY]  if(trole  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(trole  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(trole  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
347	[BUG]  [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
348	[BUG]  [BUGGY]  if(trail  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  if(trail  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	if(trail  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
349	[BUG]  [BUGGY]  ||(start  <  length  &&  trailer  <  =  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  ||(start  <  length  &&  trailer  <  =  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	||(start  <  length  &&  trailer  <  =  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
350	[BUG]  [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  end  >  '9')  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  {  break;  }  }      byte  trailer  =  buffer[end  -  1];      [BUGGY]  while  (start  <  =  length  &&  trailer!=  0  ||  end  >  '9')  {  [BUGGY]      end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	while  (start  <  =  length  &&  trailer!=  0  ||  end  >  '9')  {	  while    (start    <    =    length    &&    trailer!=    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
