bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return 0L; [FE] IllegalArgumentException [CONTEXT] public static long parseOctal(final byte[] buffer, final int offset, final int length) { longresult = 0; int end = offset + length; int start = offset; if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { [BUGGY] return 0L; [BUGGY] }  while (start < end){ if (buffer[start] == ' '){ start++; } else { break; } } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	112	112	1	replace	
2	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static long parseOctal(final byte[] buffer, final int offset, final int length) { longresult = 0; int end = offset + length; int start = offset; if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { [BUGGY] [BUGGY] return 0L; }  while (start < end){ if (buffer[start] == ' '){ start++; } else { break; } } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	112	112	1	add	
3	[BUG] [BUGGY] throw new IllegalArgumentException(  exceptionMessage(buffer, offset, length, start, trailer)); [FE] IllegalArgumentException [CONTEXT]     byte trailer = buffer[end - 1]; while (start < end && (trailer == 0 || trailer == ' ')) { end--; trailer = buffer[end - 1]; } if (start == end) { [BUGGY] throw new IllegalArgumentException(     exceptionMessage(buffer, offset, length, start, trailer)); [BUGGY] exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start];  if (currentByte < '0' || currentByte > '7'){ throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	134	135	1	replace	
4	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT]     byte trailer = buffer[end - 1]; while (start < end && (trailer == 0 || trailer == ' ')) { end--; trailer = buffer[end - 1]; } if (start == end) { [BUGGY] [BUGGY] throw new IllegalArgumentException(     exceptionMessage(buffer, offset, length, start, trailer)); exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start];  if (currentByte < '0' || currentByte > '7'){ throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	134	135	1	add	
5	[BUG] [BUGGY] start++; [FE] IllegalArgumentException [CONTEXT] throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; }  while (start < end){ if (buffer[start] == ' '){ [BUGGY] start++; [BUGGY] } else { break; } }     byte trailer = buffer[end - 1]; [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	118	118	1	replace	
6	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; }  while (start < end){ if (buffer[start] == ' '){ [BUGGY] [BUGGY] start++; } else { break; } }     byte trailer = buffer[end - 1]; [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	118	118	1	add	
7	[BUG] [BUGGY] String string = new String(buffer, offset, length); [FE] IllegalArgumentException [CONTEXT] private static String exceptionMessage(byte[] buffer, final int offset, final int length, int current, final byte currentByte) {        [BUGGY] String string = new String(buffer, offset, length); [BUGGY]  string=string.replaceAll("\0", "{NUL}"); // Replace NULs to allow string to be printed final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+" in '"+string+"' len="+length; return s; } [CLASS] TarUtils 1 [METHOD] exceptionMessage [RETURN_TYPE] String  byte[] buffer final int offset final int length int current final byte currentByte [VARIABLES] byte[] buffer String s string boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK current end i length offset start byte currentByte  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	247	247	1	replace	
8	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] private static String exceptionMessage(byte[] buffer, final int offset, final int length, int current, final byte currentByte) {        [BUGGY] [BUGGY] String string = new String(buffer, offset, length); string=string.replaceAll("\0", "{NUL}"); // Replace NULs to allow string to be printed final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+" in '"+string+"' len="+length; return s; } [CLASS] TarUtils 1 [METHOD] exceptionMessage [RETURN_TYPE] String  byte[] buffer final int offset final int length int current final byte currentByte [VARIABLES] byte[] buffer String s string boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK current end i length offset start byte currentByte  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	247	247	1	add	
9	[BUG] [BUGGY] string=string.replaceAll("\0", "{NUL}"); // Replace NULs to allow string to be printed final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+" in '"+string+"' len="+length; [FE] IllegalArgumentException [CONTEXT] final int length, int current, final byte currentByte) {        String string = new String(buffer, offset, length); [BUGGY] string=string.replaceAll("\0", "{NUL}"); // Replace NULs to allow string to be printed  final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+" in '"+string+"' len="+length; [BUGGY] final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+" in '"+string+"' len="+length; return s; } [CLASS] TarUtils 1 [METHOD] exceptionMessage [RETURN_TYPE] String  byte[] buffer final int offset final int length int current final byte currentByte [VARIABLES] byte[] buffer String s string boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK current end i length offset start byte currentByte  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	249	250	1	replace	
10	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] final int length, int current, final byte currentByte) {        String string = new String(buffer, offset, length); [BUGGY] [BUGGY] string=string.replaceAll("\0", "{NUL}"); // Replace NULs to allow string to be printed  final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+" in '"+string+"' len="+length; final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+" in '"+string+"' len="+length; return s; } [CLASS] TarUtils 1 [METHOD] exceptionMessage [RETURN_TYPE] String  byte[] buffer final int offset final int length int current final byte currentByte [VARIABLES] byte[] buffer String s string boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK current end i length offset start byte currentByte  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	249	250	1	add	
11	[BUG] [BUGGY] final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+" in '"+string+"' len="+length; [FE] IllegalArgumentException [CONTEXT]        String string = new String(buffer, offset, length); string=string.replaceAll("\0", "{NUL}"); // Replace NULs to allow string to be printed [BUGGY] final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+" in '"+string+"' len="+length; [BUGGY] return s; } [CLASS] TarUtils 1 [METHOD] exceptionMessage [RETURN_TYPE] String  byte[] buffer final int offset final int length int current final byte currentByte [VARIABLES] byte[] buffer String s string boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK current end i length offset start byte currentByte  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	250	250	1	replace	
12	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT]        String string = new String(buffer, offset, length); string=string.replaceAll("\0", "{NUL}"); // Replace NULs to allow string to be printed [BUGGY] [BUGGY] final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+" in '"+string+"' len="+length; return s; } [CLASS] TarUtils 1 [METHOD] exceptionMessage [RETURN_TYPE] String  byte[] buffer final int offset final int length int current final byte currentByte [VARIABLES] byte[] buffer String s string boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK current end i length offset start byte currentByte  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	250	250	1	add	
13	[BUG] [BUGGY] return s; [FE] IllegalArgumentException [CONTEXT]       String string = new String(buffer, offset, length); string=string.replaceAll("\0", "{NUL}"); // Replace NULs to allow string to be printed final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+" in '"+string+"' len="+length; [BUGGY] return s; [BUGGY] } [CLASS] TarUtils 1 [METHOD] exceptionMessage [RETURN_TYPE] String  byte[] buffer final int offset final int length int current final byte currentByte [VARIABLES] byte[] buffer String s string boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK current end i length offset start byte currentByte  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	251	251	1	replace	
14	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT]       String string = new String(buffer, offset, length); string=string.replaceAll("\0", "{NUL}"); // Replace NULs to allow string to be printed final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+" in '"+string+"' len="+length; [BUGGY] [BUGGY] return s; } [CLASS] TarUtils 1 [METHOD] exceptionMessage [RETURN_TYPE] String  byte[] buffer final int offset final int length int current final byte currentByte [VARIABLES] byte[] buffer String s string boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK current end i length offset start byte currentByte  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	251	251	1	add	
15	[BUG] [BUGGY] return result; [FE] IllegalArgumentException [CONTEXT] final byte currentByte = buffer[start];  if (currentByte < '0' || currentByte > '7'){ throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); } result = (result << 3) + (currentByte - '0'); // convert from ASCII  } [BUGGY] return result; [BUGGY] } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	149	149	1	replace	
16	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] final byte currentByte = buffer[start];  if (currentByte < '0' || currentByte > '7'){ throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); } result = (result << 3) + (currentByte - '0'); // convert from ASCII  } [BUGGY] [BUGGY] return result; } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	149	149	1	add	
17	[BUG] [BUGGY] longresult = 0; [FE] IllegalArgumentException [CONTEXT] public static long parseOctal(final byte[] buffer, final int offset, final int length) { [BUGGY] longresult = 0; [BUGGY] int end = offset + length; int start = offset; if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	103	103	1	replace	
18	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static long parseOctal(final byte[] buffer, final int offset, final int length) { [BUGGY] [BUGGY] longresult = 0; int end = offset + length; int start = offset; if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	103	103	1	add	
19	[BUG] [BUGGY] int end = offset + length; [FE] IllegalArgumentException [CONTEXT] public static long parseOctal(final byte[] buffer, final int offset, final int length) { longresult = 0; [BUGGY] int end = offset + length; [BUGGY] int start = offset; if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; }  [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	
20	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static long parseOctal(final byte[] buffer, final int offset, final int length) { longresult = 0; [BUGGY] [BUGGY] int end = offset + length; int start = offset; if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; }  [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	add	
21	[BUG] [BUGGY] int start = offset; [FE] IllegalArgumentException [CONTEXT] public static long parseOctal(final byte[] buffer, final int offset, final int length) { longresult = 0; int end = offset + length; [BUGGY] int start = offset; [BUGGY]  if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; }   [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	105	105	1	replace	
22	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static long parseOctal(final byte[] buffer, final int offset, final int length) { longresult = 0; int end = offset + length; [BUGGY] [BUGGY] int start = offset; if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; }   [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	105	105	1	add	
23	[BUG] [BUGGY] if (length < 2){ [FE] IllegalArgumentException [CONTEXT] public static long parseOctal(final byte[] buffer, final int offset, final int length) { longresult = 0; int end = offset + length; int start = offset; [BUGGY] if (length < 2){ [BUGGY] throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; }  while (start < end){ if (buffer[start] == ' '){ [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	107	107	1	replace	
24	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static long parseOctal(final byte[] buffer, final int offset, final int length) { longresult = 0; int end = offset + length; int start = offset; [BUGGY] [BUGGY] if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; }  while (start < end){ if (buffer[start] == ' '){ [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	107	107	1	add	
25	[BUG] [BUGGY] if (buffer[start] == 0) { [FE] IllegalArgumentException [CONTEXT] public static long parseOctal(final byte[] buffer, final int offset, final int length) { longresult = 0; int end = offset + length; int start = offset; if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } [BUGGY] if (buffer[start] == 0) { [BUGGY] return 0L; }  while (start < end){ if (buffer[start] == ' '){ start++; } else { break; } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	111	111	1	replace	
26	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public static long parseOctal(final byte[] buffer, final int offset, final int length) { longresult = 0; int end = offset + length; int start = offset; if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } [BUGGY] [BUGGY] if (buffer[start] == 0) { return 0L; }  while (start < end){ if (buffer[start] == ' '){ start++; } else { break; } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	111	111	1	add	
27	[BUG] [BUGGY] while (start < end){ [FE] IllegalArgumentException [CONTEXT] if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; }  [BUGGY] while (start < end){ [BUGGY] if (buffer[start] == ' '){ start++; } else { break; } }     [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	116	116	1	replace	
28	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; }  [BUGGY] [BUGGY] while (start < end){ if (buffer[start] == ' '){ start++; } else { break; } }     [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	116	116	1	add	
29	[BUG] [BUGGY] if (buffer[start] == ' '){ [FE] IllegalArgumentException [CONTEXT] if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; }  while (start < end){ [BUGGY] if (buffer[start] == ' '){ [BUGGY] start++; } else { break; } }      [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	117	117	1	replace	
30	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] if (length < 2){ throw new IllegalArgumentException("Length "+length+" must be at least 2"); } if (buffer[start] == 0) { return 0L; }  while (start < end){ [BUGGY] [BUGGY] if (buffer[start] == ' '){ start++; } else { break; } }      [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	117	117	1	add	
31	[BUG] [BUGGY] byte trailer = buffer[end - 1]; [FE] IllegalArgumentException [CONTEXT] start++; } else { break; } }     [BUGGY] byte trailer = buffer[end - 1]; [BUGGY] while (start < end && (trailer == 0 || trailer == ' ')) { end--; trailer = buffer[end - 1]; } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	
32	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] start++; } else { break; } }     [BUGGY] [BUGGY] byte trailer = buffer[end - 1]; while (start < end && (trailer == 0 || trailer == ' ')) { end--; trailer = buffer[end - 1]; } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	add	
33	[BUG] [BUGGY] while (start < end && (trailer == 0 || trailer == ' ')) { [FE] IllegalArgumentException [CONTEXT] } else { break; } }     byte trailer = buffer[end - 1]; [BUGGY] while (start < end && (trailer == 0 || trailer == ' ')) { [BUGGY] end--; trailer = buffer[end - 1]; } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start]; [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	replace	
34	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] } else { break; } }     byte trailer = buffer[end - 1]; [BUGGY] [BUGGY] while (start < end && (trailer == 0 || trailer == ' ')) { end--; trailer = buffer[end - 1]; } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start]; [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	129	129	1	add	
35	[BUG] [BUGGY] end--; [FE] IllegalArgumentException [CONTEXT] break; } }     byte trailer = buffer[end - 1]; while (start < end && (trailer == 0 || trailer == ' ')) { [BUGGY] end--; [BUGGY] trailer = buffer[end - 1]; } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start];  [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	
36	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] break; } }     byte trailer = buffer[end - 1]; while (start < end && (trailer == 0 || trailer == ' ')) { [BUGGY] [BUGGY] end--; trailer = buffer[end - 1]; } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start];  [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	add	
37	[BUG] [BUGGY] trailer = buffer[end - 1]; [FE] IllegalArgumentException [CONTEXT] } }     byte trailer = buffer[end - 1]; while (start < end && (trailer == 0 || trailer == ' ')) { end--; [BUGGY] trailer = buffer[end - 1]; [BUGGY] } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start];  if (currentByte < '0' || currentByte > '7'){ [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	
38	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] } }     byte trailer = buffer[end - 1]; while (start < end && (trailer == 0 || trailer == ' ')) { end--; [BUGGY] [BUGGY] trailer = buffer[end - 1]; } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start];  if (currentByte < '0' || currentByte > '7'){ [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	add	
39	[BUG] [BUGGY] if (start == end) { [FE] IllegalArgumentException [CONTEXT]     byte trailer = buffer[end - 1]; while (start < end && (trailer == 0 || trailer == ' ')) { end--; trailer = buffer[end - 1]; } [BUGGY] if (start == end) { [BUGGY] throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start];  if (currentByte < '0' || currentByte > '7'){ throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	133	133	1	replace	
40	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT]     byte trailer = buffer[end - 1]; while (start < end && (trailer == 0 || trailer == ' ')) { end--; trailer = buffer[end - 1]; } [BUGGY] [BUGGY] if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start];  if (currentByte < '0' || currentByte > '7'){ throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	133	133	1	add	
41	[BUG] [BUGGY] for ( ;start < end; start++) { [FE] IllegalArgumentException [CONTEXT] byte trailer = buffer[end - 1]; while (start < end && (trailer == 0 || trailer == ' ')) { end--; trailer = buffer[end - 1]; } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } [BUGGY] for ( ;start < end; start++) { [BUGGY] final byte currentByte = buffer[start];  if (currentByte < '0' || currentByte > '7'){ throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); } result = (result << 3) + (currentByte - '0'); // convert from ASCII  }  [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	
42	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] byte trailer = buffer[end - 1]; while (start < end && (trailer == 0 || trailer == ' ')) { end--; trailer = buffer[end - 1]; } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } [BUGGY] [BUGGY] for ( ;start < end; start++) { final byte currentByte = buffer[start];  if (currentByte < '0' || currentByte > '7'){ throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); } result = (result << 3) + (currentByte - '0'); // convert from ASCII  }  [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	add	
43	[BUG] [BUGGY] final byte currentByte = buffer[start]; [FE] IllegalArgumentException [CONTEXT] while (start < end && (trailer == 0 || trailer == ' ')) { end--; trailer = buffer[end - 1]; } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { [BUGGY] final byte currentByte = buffer[start]; [BUGGY]  if (currentByte < '0' || currentByte > '7'){ throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); } result = (result << 3) + (currentByte - '0'); // convert from ASCII  } return result; [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	139	139	1	replace	
44	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] while (start < end && (trailer == 0 || trailer == ' ')) { end--; trailer = buffer[end - 1]; } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { [BUGGY] [BUGGY] final byte currentByte = buffer[start];  if (currentByte < '0' || currentByte > '7'){ throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); } result = (result << 3) + (currentByte - '0'); // convert from ASCII  } return result; [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	139	139	1	add	
45	[BUG] [BUGGY] if (currentByte < '0' || currentByte > '7'){ [FE] IllegalArgumentException [CONTEXT] trailer = buffer[end - 1]; } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start];  [BUGGY] if (currentByte < '0' || currentByte > '7'){ [BUGGY] throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); } result = (result << 3) + (currentByte - '0'); // convert from ASCII  } return result; } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	141	141	1	replace	
46	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] trailer = buffer[end - 1]; } if (start == end) { throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start];  [BUGGY] [BUGGY] if (currentByte < '0' || currentByte > '7'){ throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); } result = (result << 3) + (currentByte - '0'); // convert from ASCII  } return result; } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	141	141	1	add	
47	[BUG] [BUGGY] result = (result << 3) + (currentByte - '0'); // convert from ASCII // CheckStyle:MagicNumber ON } [FE] IllegalArgumentException [CONTEXT] exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start];  if (currentByte < '0' || currentByte > '7'){ throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); } [BUGGY] result = (result << 3) + (currentByte - '0'); // convert from ASCII   // CheckStyle:MagicNumber ON    } [BUGGY]  } return result; } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	145	147	1	replace	
48	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] exceptionMessage(buffer, offset, length, start, trailer)); } for ( ;start < end; start++) { final byte currentByte = buffer[start];  if (currentByte < '0' || currentByte > '7'){ throw new IllegalArgumentException( exceptionMessage(buffer, offset, length, start, currentByte)); } [BUGGY] [BUGGY] result = (result << 3) + (currentByte - '0'); // convert from ASCII   // CheckStyle:MagicNumber ON    }  } return result; } [CLASS] TarUtils 1 [METHOD] parseOctal [RETURN_TYPE] long  final byte[] buffer final int offset final int length [VARIABLES] byte[] buffer boolean ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING int BYTE_MASK end i length offset start long result byte currentByte trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	145	147	1	add	
49	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] private static final int BYTE_MASK = 255; [CLASS] TarUtils 1  [VARIABLES] 	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.2581988897471611	40	40	1	replace	
50	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] private static final int BYTE_MASK = 255; [CLASS] TarUtils 1  [VARIABLES] 	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.2581988897471611	40	40	1	add	
51	[BUG] [BUGGY] static final ZipEncoding FALLBACK_ENCODING = new ZipEncoding() { [FE] IllegalArgumentException [CONTEXT] [BUGGY] static final ZipEncoding FALLBACK_ENCODING = new ZipEncoding() { [BUGGY] public boolean canEncode(String name) { return true; } public ByteBuffer encode(String name) { final int length = name.length(); byte[] buf = new byte[length];  for (int i = 0; i < length; ++i) { buf[i] = (byte) name.charAt(i); } [CLASS] TarUtils 1  [VARIABLES] 	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.2581988897471611	47	47	1	replace	
52	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] [BUGGY] [BUGGY] static final ZipEncoding FALLBACK_ENCODING = new ZipEncoding() { public boolean canEncode(String name) { return true; } public ByteBuffer encode(String name) { final int length = name.length(); byte[] buf = new byte[length];  for (int i = 0; i < length; ++i) { buf[i] = (byte) name.charAt(i); } [CLASS] TarUtils 1  [VARIABLES] 	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.2581988897471611	47	47	1	add	
