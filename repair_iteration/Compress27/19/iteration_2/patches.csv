bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  trailer  =  trailer[offset  -  1]  +  length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[offset  -  1]  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[offset  -  1]  +  length;	  trailer    =    trailer[offset    -    1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
2	[BUG]  [BUGGY]  trailer  =  trailer[offset  +  1];  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[offset  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[offset  +  1];	  trailer    =    trailer[offset    -    1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
3	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  trailer  ==  'n')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  trailer  ==  'n')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  trailer  ==  'n')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    ==    'n')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
4	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[start  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    ==    'n')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
5	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer!=  'n')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer!=  'n')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer!=  'n')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    ==    'n')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
6	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  trailer!=  'n')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  trailer!=  'n')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  trailer!=  'n')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    ==    'n')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
7	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer!=  'n')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer!=  'n')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer!=  'n')?  buffer[start  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    ==    'n')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
8	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[length  -  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[length  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  trailer[length  -  1];	  Trailer    <    K,    V>    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	87	None	replace
9	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  this.trailer[length  -  1];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  this.trailer[length  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  this.trailer[length  -  1];	  Trailer    <    K,    V>    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	87	None	replace
10	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[length  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[length  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[length  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	87	None	replace
11	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  =='')?  buffer[length  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  =='')?  buffer[length  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  =='')?  buffer[length  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	87	None	replace
12	[BUG]  [BUGGY]  trailer  =  buffer[length  -  1]  +  trailer;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[length  -  1]  +  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[length  -  1]  +  trailer;	  trailer    =    buffer[length    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
13	[BUG]  [BUGGY]  trailer  =  buffer[length  -  1]  +  offset;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[length  -  1]  +  offset;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[length  -  1]  +  offset;	  trailer    =    buffer[length    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
14	[BUG]  [BUGGY]  trailer  =  buffer[length  -  1]  +  start  +  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[length  -  1]  +  start  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[length  -  1]  +  start  +  1;	  trailer    =    buffer[length    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
15	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
16	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
17	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
18	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer.toByteArray();  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer.toByteArray();  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer.toByteArray();  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
19	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  new  ByteArrayInputStream(buffer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  new  ByteArrayInputStream(buffer,  0,  length);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  new  ByteArrayInputStream(buffer,  0,  length);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
20	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Thread.currentThread().interrupt();	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
21	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  container;  }  [CE]  <identifier>  expected  [FE]                                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  container;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  container;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
22	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[start  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
23	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[0]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[0]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[0]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
24	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  new  BYTE_MASK();  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  new  BYTE_MASK();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  new  BYTE_MASK();	  Trailer    <    K,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
25	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer!=  '')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer!=  '')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer!=  '')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
26	[BUG]  [BUGGY]  Trailer  trailer  =  trailer[end  -  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  trailer  =  trailer[end  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  trailer  =  trailer[end  -  1];	  trailer    =    trailer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	36	None	replace
27	[BUG]  [BUGGY]  trailer  =  trailer[0];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[0];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[0];	  trailer    =    trailer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	36	None	replace
28	[BUG]  [BUGGY]  trailer  =  new  byte[length  -  2];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  new  byte[length  -  2];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  new  byte[length  -  2];	  trailer    =    new    byte[length    -    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
29	[BUG]  [BUGGY]  trailer  =  new  byte[trailer  -  1];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  new  byte[trailer  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  new  byte[trailer  -  1];	  trailer    =    new    byte[length    -    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
30	[BUG]  [BUGGY]  Trailer  trailer  =  new  byte[length  -  1];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  trailer  =  new  byte[length  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  trailer  =  new  byte[length  -  1];	  trailer    =    new    byte[length    -    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
31	[BUG]  [BUGGY]  trailer  =  new  byte[length  -  4];  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  new  byte[length  -  4];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  new  byte[length  -  4];	  trailer    =    new    byte[length    -    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
32	[BUG]  [BUGGY]  trailer  =  new  byte[length  +  1];  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  new  byte[length  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  new  byte[length  +  1];	  trailer    =    new    byte[length    -    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
33	[BUG]  [BUGGY]  trailer  =  new  byte[length  /  1];  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  new  byte[length  /  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  new  byte[length  /  1];	  trailer    =    new    byte[length    -    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
34	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[start  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
35	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[0]  :  null;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[0]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[0]  :  null;	  Trailer    <    T>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
36	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[length  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[length  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[length  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
37	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
38	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer!=  '')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer!=  '')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer!=  '')?  buffer[end  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
39	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  trailer[length  -  1];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  trailer[length  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  trailer[length  -  1];	  Trailer    <    T>    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  this.trailer[length  -  1];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  this.trailer[length  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  this.trailer[length  -  1];	  Trailer    <    T>    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  new  Trailer  <  T>(trailer.length  -  1]);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  new  Trailer  <  T>(trailer.length  -  1]);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  new  Trailer  <  T>(trailer.length  -  1]);	  Trailer    <    T>    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
42	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[length  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[length  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[length  -  1]  :  null;	  Trailer    <    T>    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
43	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer!=  ']')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer!=  ']')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer!=  ']')?  buffer[start  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
44	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
45	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  >=  ']')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  >=  ']')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  >=  ']')?  buffer[end  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
46	[BUG]  [BUGGY]  Trailer  trailer  =  this.trailer[start  -  1];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  trailer  =  this.trailer[start  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  trailer  =  this.trailer[start  -  1];	  Trailer    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
47	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  trailer;	  Trailer    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
48	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  '[')?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  trailer  =(trailer  ==  '[')?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  trailer  =(trailer  ==  '[')?  this.trailer[end  -  1]  :  trailer;	  Trailer    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
49	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  =='')?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  trailer  =(trailer  =='')?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  trailer  =(trailer  =='')?  this.trailer[end  -  1]  :  trailer;	  Trailer    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
50	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  trailer  =  buffer[end  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  trailer  =  buffer[end  -  1];	  Trailer    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
51	[BUG]  [BUGGY]  trailer  =  this.trailer[end  -  1]  *  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[end  -  1]  *  FALLBACK_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[end  -  1]  *  FALLBACK_ENCODING;	  trailer    =    this.trailer[end    -    1]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	74	None	replace
52	[BUG]  [BUGGY]  trailer  =  this.trailer[end  -  1]  *  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[end  -  1]  *  BYTE_MASK  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[end  -  1]  *  BYTE_MASK  +  1;	  trailer    =    this.trailer[end    -    1]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	74	None	replace
53	[BUG]  [BUGGY]  trailer  =  this.trailer[end  -  1]  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[end  -  1]  /  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[end  -  1]  /  BYTE_MASK;	  trailer    =    this.trailer[end    -    1]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	74	None	replace
54	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  *  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  *  BYTE_MASK;	  trailer    =    this.trailer[end    -    1]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	74	None	replace
55	[BUG]  [BUGGY]  trailer  =  this.trailer[end  -  1]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[end  -  1]  &  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[end  -  1]  &  BYTE_MASK;	  trailer    =    this.trailer[end    -    1]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	74	None	replace
56	[BUG]  [BUGGY]  trailer  =  this.trailer[start  -  1]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[start  -  1]  *  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[start  -  1]  *  BYTE_MASK;	  trailer    =    this.trailer[end    -    1]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	74	None	replace
57	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.toByteArray();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  trailer.toByteArray();	  trailer    =    buffer[end    -    1]    +    trailer.length;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
58	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  +  buffer.length;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  +  buffer.length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  +  buffer.length;	  trailer    =    buffer[end    -    1]    +    trailer.length;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
59	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.charAt(start  +  length);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.charAt(start  +  length);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  trailer.charAt(start  +  length);	  trailer    =    buffer[end    -    1]    +    trailer.length;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
60	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.getByte();  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.getByte();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  trailer.getByte();	  trailer    =    buffer[end    -    1]    +    trailer.length;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
61	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.getCharset();  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.getCharset();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  trailer.getCharset();	  trailer    =    buffer[end    -    1]    +    trailer.length;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
62	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  +  trailer.length;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  +  trailer.length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  +  trailer.length;	  trailer    =    buffer[end    -    1]    +    trailer.length;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
63	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  this.trailer[start  -  1];  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  this.trailer[start  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  this.trailer[start  -  1];	  Trailer    <    T>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
64	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  0)?  buffer[start  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  0)?  buffer[start  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  0)?  buffer[start  -  1]  :  trailer;	  Trailer    <    T>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
65	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  trailer;	  Trailer    <    T>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
66	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  2;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  +  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  +  2;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
67	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  3;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  +  3;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  +  3;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
68	[BUG]  [BUGGY]  trailer  =  buffer[start  -  end]  +  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  end]  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  end]  +  1;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
69	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  1L;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  +  1L;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  +  1L;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
70	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  trailer[end  -  1].toByteArray();  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  trailer[end  -  1].toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  trailer[end  -  1].toByteArray();	  Trailer    <    T>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
71	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  trailer.toByteArray();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  trailer.toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  trailer.toByteArray();	  Trailer    <    T>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
72	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  this.trailer[end  -  1].toByteArray();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  this.trailer[end  -  1].toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  this.trailer[end  -  1].toByteArray();	  Trailer    <    T>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
73	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  trailer[start  -  1].toByteArray();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  trailer[start  -  1].toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  trailer[start  -  1].toByteArray();	  Trailer    <    T>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
74	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1].toByteArray();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1].toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1].toByteArray();	  Trailer    <    T>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
75	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer!=  ']')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer!=  ']')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer!=  ']')?  buffer[start  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
76	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
77	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  >=  ']')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  >=  ']')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  >=  ']')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
78	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
79	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
80	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  =='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length  &&  trailer  =='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length  &&  trailer  =='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
81	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
82	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  'n'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  'n'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==''  ||  trailer  ==  'n'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
83	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
84	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
85	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  *  2;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  *  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  *  2;	  trailer    =    trailer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
86	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  +  4;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  +  4;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  +  4;	  trailer    =    trailer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
87	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  +  3;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  +  3;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  +  3;	  trailer    =    trailer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
88	[BUG]  [BUGGY]  trailer  =  trailer[start  -  1]  +  2;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  -  1]  +  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  -  1]  +  2;	  trailer    =    trailer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
89	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[start  -  1];  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[start  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  trailer[start  -  1];	  Trailer    <    N,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
90	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[length  -  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[length  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  trailer[length  -  1];	  Trailer    <    N,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
91	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[0];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[0];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  trailer[0];	  Trailer    <    N,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
92	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[offset  -  1];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[offset  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  trailer[offset  -  1];	  Trailer    <    N,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
93	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[1];  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  trailer[1];	  Trailer    <    N,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
94	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[end  -  2];  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[end  -  2];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  trailer[end  -  2];	  Trailer    <    N,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
95	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  2];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  2];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  buffer[end  -  2];	  trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
96	[BUG]  [BUGGY]  trailer  =  buffer[start  -  2];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  2];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  2];	  trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
97	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  [Delete]  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	[Delete]	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
98	[BUG]  [BUGGY]  allowNonEmpty(start,  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  allowNonEmpty(start,  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	allowNonEmpty(start,  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
99	[BUG]  [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	allowNonEmpty(start)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
100	[BUG]  [BUGGY]  allowNonEmptyChar(start))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  allowNonEmptyChar(start))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	allowNonEmptyChar(start))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
101	[BUG]  [BUGGY]  allowNonEmptyChar(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  allowNonEmptyChar(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	allowNonEmptyChar(start)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
102	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  trailer));  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  trailer));  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  trailer));	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
103	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  trailer[0];  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  trailer[0];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  trailer[0];	  Trailer    <    T>    trailer    =    trailer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	89	None	replace
104	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  trailer[start  +  1];  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  trailer[start  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  trailer[start  +  1];	  Trailer    <    T>    trailer    =    trailer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	89	None	replace
105	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.length  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  trailer.length  +  1;	  trailer    =    buffer[end    -    1]    +    length    +    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
106	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  offset  +  1;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  offset  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  offset  +  1;	  trailer    =    buffer[end    -    1]    +    length    +    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
107	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  length  *  2  +  1;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  length  *  2  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  length  *  2  +  1;	  trailer    =    buffer[end    -    1]    +    length    +    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
108	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  start  +  1;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  start  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  start  +  1;	  trailer    =    buffer[end    -    1]    +    length    +    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
109	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  +  length  +  1;  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  +  length  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  +  length  +  1;	  trailer    =    buffer[end    -    1]    +    length    +    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
110	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  +  offset;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  +  offset;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  +  offset;	  trailer    =    buffer[start    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
111	[BUG]  [BUGGY]  trailer  =  buffer[start  +  1]  +  length;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  +  1]  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  +  1]  +  length;	  trailer    =    buffer[start    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
112	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  +  length  +  2;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  +  length  +  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  +  length  +  2;	  trailer    =    buffer[start    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
113	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  +  length  -  1;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  +  length  -  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  +  length  -  1;	  trailer    =    buffer[start    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
114	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[start]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
115	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[start]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
116	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[start]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
117	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  container[i];  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  container[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[start]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
118	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  new  ByteArrayInputStream(buffer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  new  ByteArrayInputStream(buffer,  0,  length);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  new  ByteArrayInputStream(buffer,  0,  length);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[start]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
119	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[end]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[end]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==''  ||  trailer  ==  '-'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[end]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[start]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
120	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  new  byte[length];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  new  byte[length];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  new  byte[length];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[start]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
121	[BUG]  [BUGGY]  trailer  =  trailer[start  -  end];  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  -  end];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  -  end];	  trailer    =    trailer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
122	[BUG]  [BUGGY]  trailer  =  trailer[length  -  start];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[length  -  start];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[length  -  start];	  trailer    =    trailer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
123	[BUG]  [BUGGY]  trailer  =  trailer[end  -  2];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  2];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  2];	  trailer    =    trailer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
124	[BUG]  [BUGGY]  trailer  =  this.trailer[start  -  2];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[start  -  2];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[start  -  2];	  trailer    =    this.trailer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	55	None	replace
125	[BUG]  [BUGGY]  trailer  =  this.trailer[end  +  1];  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[end  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[end  +  1];	  trailer    =    this.trailer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	55	None	replace
126	[BUG]  [BUGGY]  trailer  =  this.trailer[end  *  2];  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[end  *  2];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[end  *  2];	  trailer    =    this.trailer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	55	None	replace
127	[BUG]  [BUGGY]  trailer  =  this.trailer[offset  -  1];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[offset  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[offset  -  1];	  trailer    =    buffer[offset    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
128	[BUG]  [BUGGY]  trailer  =  buffer[offset  +  1];  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[offset  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[offset  +  1];	  trailer    =    buffer[offset    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
129	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[offset  -  1];  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  buffer[offset  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  buffer[offset  -  1];	  trailer    =    buffer[offset    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
130	[BUG]  [BUGGY]  trailer  =  trailer[start  -  1]  +  start;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  -  1]  +  start;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  -  1]  +  start;	  trailer    =    buffer[start    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
131	[BUG]  [BUGGY]  trailer  =  buffer[start  +  1]  +  start;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  +  1]  +  start;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  +  1]  +  start;	  trailer    =    buffer[start    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
132	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
133	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[0]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[0]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[0]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
134	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer!=  '[')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer!=  '[')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer!=  '[')?  buffer[end  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
135	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[start  -  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[start  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  trailer[start  -  1];	  Trailer    <    K,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
136	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[0];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[0];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  trailer[0];	  Trailer    <    K,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
137	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[offset  -  1];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[offset  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  trailer[offset  -  1];	  Trailer    <    K,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
138	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[1];  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  trailer[1];	  Trailer    <    K,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
139	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[end  -  2];  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[end  -  2];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  trailer[end  -  2];	  Trailer    <    K,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
140	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
141	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
142	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  new  ByteArrayInputStream(buffer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  new  ByteArrayInputStream(buffer,  0,  length);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  new  ByteArrayInputStream(buffer,  0,  length);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
143	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  new  byte[length];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  new  byte[length];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  new  byte[length];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
144	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
145	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
146	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  &  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  &  trailer;	  trailer    =    buffer[end    -    1]    &    start;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
147	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  trailer.length;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  &  trailer.length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  &  trailer.length;	  trailer    =    buffer[end    -    1]    &    start;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
148	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  &  end;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  &  end;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  &  end;	  trailer    =    buffer[end    -    1]    &    start;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
149	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  &  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  &  BYTE_MASK;	  trailer    =    buffer[end    -    1]    &    start;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
150	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  trailerByte;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  &  trailerByte;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  &  trailerByte;	  trailer    =    buffer[end    -    1]    &    start;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
151	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  &  start;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  &  start;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  &  start;	  trailer    =    buffer[end    -    1]    &    start;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
152	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[end  -  1].toByteArray();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[end  -  1].toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  trailer[end  -  1].toByteArray();	  Trailer    <    N,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
153	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  this.trailer[end  -  1].toByteArray();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  this.trailer[end  -  1].toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  this.trailer[end  -  1].toByteArray();	  Trailer    <    N,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
154	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer.toByteArray();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer.toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  trailer.toByteArray();	  Trailer    <    N,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
155	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[start  -  1].toByteArray();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[start  -  1].toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  trailer[start  -  1].toByteArray();	  Trailer    <    N,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
156	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  /  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  /  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  /  trailer;	  trailer    =    buffer[end    -    1]    /    start;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
157	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  /  length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  /  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  /  length;	  trailer    =    buffer[end    -    1]    /    start;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
158	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  /  start;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  /  start;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  /  start;	  trailer    =    buffer[end    -    1]    /    start;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
159	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  /  trailer.length;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  /  trailer.length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  /  trailer.length;	  trailer    =    buffer[end    -    1]    /    start;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
160	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  /  2;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  /  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  /  2;	  trailer    =    buffer[end    -    1]    /    start;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
161	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  /  end;  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  /  end;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  /  end;	  trailer    =    buffer[end    -    1]    /    start;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
162	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  4;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  4;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  4;	  trailer    =    buffer[end    -    1]    +    4;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
163	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
164	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
165	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
166	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
167	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  length);  System.arraycopy(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  length);  System.arraycopy(buffer,  offset,  length);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  length);  System.arraycopy(buffer,  offset,  length);  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
168	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
169	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[0]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[0]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[0]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
170	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer!=  '[')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer!=  '[')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer!=  '[')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
171	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[1]  :  null;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
172	[BUG]  [BUGGY]  trailer  =  trailer[start  -  1]  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  -  1]  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  -  1]  +  1;	  trailer    =    trailer[end    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
173	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  *  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  *  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  *  1;	  trailer    =    trailer[end    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
174	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer!=  '['  ||  trailer  ==  ']')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer!=  '['  ||  trailer  ==  ']')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer!=  '['  ||  trailer  ==  ']')?  buffer[end  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '['    ||    trailer    ==    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
175	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  +  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  +  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  +  trailer;	  trailer    =    buffer[end    -    1]    +    trailer;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
176	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  &&  trailer  ==  '')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  &&  trailer  ==  '')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  &&  trailer  ==  '')?  buffer[end  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
177	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '')?  buffer[start  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
178	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  &&  trailer!=  '')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  &&  trailer!=  '')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  &&  trailer!=  '')?  buffer[end  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
179	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer!=  '')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer!=  '')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer!=  '')?  buffer[end  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
180	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '/')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '/')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '/')?  buffer[end  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
181	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  this.trailer[start  -  1];  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  this.trailer[start  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  this.trailer[start  -  1];	  Trailer    <    N,    V>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	61	None	replace
182	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	61	None	replace
183	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  =='')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  =='')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  =='')?  buffer[start  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	61	None	replace
184	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[end  -  1].toByteArray();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[end  -  1].toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  trailer[end  -  1].toByteArray();	  Trailer    <    K,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
185	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  this.trailer[end  -  1].toByteArray();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  this.trailer[end  -  1].toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  this.trailer[end  -  1].toByteArray();	  Trailer    <    K,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
186	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[start  -  1].toByteArray();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer[start  -  1].toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  trailer[start  -  1].toByteArray();	  Trailer    <    K,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
187	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer.toByteArray();  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  trailer.toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  trailer.toByteArray();	  Trailer    <    K,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
188	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  trailer[offset  -  1];  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  trailer[offset  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  trailer[offset  -  1];	  Trailer    <    T>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	24	None	replace
189	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  trailer[1];  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  trailer[1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  trailer[1];	  Trailer    <    T>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	24	None	replace
190	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
191	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
192	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
193	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
194	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  new  ByteArrayInputStream(buffer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  new  ByteArrayInputStream(buffer,  0,  length);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  new  ByteArrayInputStream(buffer,  0,  length);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
195	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  new  ByteArrayInputStream(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  new  ByteArrayInputStream(buffer,  offset,  length);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  new  ByteArrayInputStream(buffer,  offset,  length);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
196	[BUG]  [BUGGY]  trailer  =  trailer[load  -  1];  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[load  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[load  -  1];	  trailer    =    buffer[load    -    1];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
197	[BUG]  [BUGGY]  trailer  =  this.trailer[load  -  1];  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[load  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[load  -  1];	  trailer    =    buffer[load    -    1];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
198	[BUG]  [BUGGY]  trailer  =  trailer[end  -  start  +  1];  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  start  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  start  +  1];	  trailer    =    buffer[end    -    start    +    1];    	non-compiled	[CE]  <identifier>  expected	77	None	replace
199	[BUG]  [BUGGY]  trailer  =  buffer[start  -  start  +  1];  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  start  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  start  +  1];	  trailer    =    buffer[end    -    start    +    1];    	non-compiled	[CE]  <identifier>  expected	77	None	replace
200	[BUG]  [BUGGY]  trailer  =  buffer[start  -  end  +  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  end  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  end  +  1];	  trailer    =    buffer[end    -    start    +    1];    	non-compiled	[CE]  <identifier>  expected	77	None	replace
201	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start  +  2];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start  +  2];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start  +  2];	  trailer    =    buffer[end    -    start    +    1];    	non-compiled	[CE]  <identifier>  expected	77	None	replace
202	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  trailer[end  -  start];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  trailer[end  -  start];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  trailer[end  -  start];	  Trailer    <    T>    trailer    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
203	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  this.trailer[end  -  start];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  this.trailer[end  -  start];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  this.trailer[end  -  start];	  Trailer    <    T>    trailer    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
204	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[start  -  end];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  buffer[start  -  end];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  buffer[start  -  end];	  Trailer    <    T>    trailer    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
205	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  length  /  2;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  length  /  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  length  /  2;	  trailer    =    buffer[end    -    1]    +    length    +    2;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
206	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  length  -  2;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  length  -  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  length  -  2;	  trailer    =    buffer[end    -    1]    +    length    +    2;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
207	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  length  *  2;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  length  *  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  length  *  2;	  trailer    =    buffer[end    -    1]    +    length    +    2;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
208	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.length  +  2;  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.length  +  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  trailer.length  +  2;	  trailer    =    buffer[end    -    1]    +    length    +    2;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
209	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  start  +  2;  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  start  +  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  start  +  2;	  trailer    =    buffer[end    -    1]    +    length    +    2;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
210	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  offset  +  length;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  offset  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  offset  +  length;	  trailer    =    buffer[end    -    1]    +    offset;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
211	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  offset;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  offset;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  offset;	  trailer    =    buffer[end    -    1]    +    offset;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
212	[BUG]  [BUGGY]  trailer  =  trailer[end  +  1];  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  +  1];	  trailer    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
213	[BUG]  [BUGGY]  trailer  =  trailer[start  +  1]  &  0x7f;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  +  1]  &  0x7f;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  +  1]  &  0x7f;	  trailer    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
214	[BUG]  [BUGGY]  trailer  =  trailer[start  +  1]  &  0xffff;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  +  1]  &  0xffff;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  +  1]  &  0xffff;	  trailer    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
215	[BUG]  [BUGGY]  trailer  =  trailer[start  +  1]  &  0xfff;  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  +  1]  &  0xfff;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  +  1]  &  0xfff;	  trailer    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
216	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.length;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  trailer.length;	  trailer    =    buffer[end    -    1]    *    length;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
217	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  length  +  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  length  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  length  +  1;	  trailer    =    buffer[end    -    1]    *    length;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
218	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.toByteArray();  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  trailer.toByteArray();	  trailer    =    buffer[end    -    1]    *    length;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
219	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.getCharacterEncoding();  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.getCharacterEncoding();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  trailer.getCharacterEncoding();	  trailer    =    buffer[end    -    1]    *    length;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
220	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.getCharset();  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.getCharset();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  trailer.getCharset();	  trailer    =    buffer[end    -    1]    *    length;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
221	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
222	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
223	[BUG]  [BUGGY]  ||(trailer  ==  '-'  &&  trailer.length  >  0)||(trailer  ==  '+'  &&  trailer[i]!=  '-'))  {  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||(trailer  ==  '-'  &&  trailer.length  >  0)||(trailer  ==  '+'  &&  trailer[i]!=  '-'))  {  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||(trailer  ==  '-'  &&  trailer.length  >  0)||(trailer  ==  '+'  &&  trailer[i]!=  '-'))  {	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
224	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i].toByteArray();  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i].toByteArray();  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i].toByteArray();  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
225	[BUG]  [BUGGY]  ||(trailer  ==  '-'  &&  trailer.length  >  0)||(trailer  ==  '+'  &&  trailer[i]!=  end))  {  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||(trailer  ==  '-'  &&  trailer.length  >  0)||(trailer  ==  '+'  &&  trailer[i]!=  end))  {  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||(trailer  ==  '-'  &&  trailer.length  >  0)||(trailer  ==  '+'  &&  trailer[i]!=  end))  {	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
226	[BUG]  [BUGGY]  ||(trailer  ==  '-'  &&  trailer.length  >  0)||(trailer!=  '+'  &&  trailer[i]  <  =  '9'))  {  [CE]  <identifier>  expected  [FE]                                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||(trailer  ==  '-'  &&  trailer.length  >  0)||(trailer!=  '+'  &&  trailer[i]  <  =  '9'))  {  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||(trailer  ==  '-'  &&  trailer.length  >  0)||(trailer!=  '+'  &&  trailer[i]  <  =  '9'))  {	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
227	[BUG]  [BUGGY]  trailer  =  trailer[start  -  1]  +  end;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  -  1]  +  end;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  -  1]  +  end;	  trailer    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
228	[BUG]  [BUGGY]  trailer  =  buffer[start  +  1]  +  end;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  +  1]  +  end;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  +  1]  +  end;	  trailer    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
229	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  end;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  end;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  end;	  trailer    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
230	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    N,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
231	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    N,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
232	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer  :  trailer[end  -  1];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer  :  trailer[end  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer  :  trailer[end  -  1];	  Trailer    <    N,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
233	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer  :  trailer[end  -  1];  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer  :  trailer[end  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer  :  trailer[end  -  1];	  Trailer    <    N,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
234	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  offset;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  +  offset;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  +  offset;	  trailer    =    buffer[end    -    start]    +    length;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
235	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  length  +  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  +  length  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  +  length  +  1;	  trailer    =    buffer[end    -    start]    +    length;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
236	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  *  length;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  *  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  *  length;	  trailer    =    buffer[end    -    start]    +    length;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
237	[BUG]  [BUGGY]  trailer  =  buffer[start  -  end]  +  length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  end]  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  end]  +  length;	  trailer    =    buffer[end    -    start]    +    length;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
238	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
239	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
240	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
241	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
242	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  Trailer[i];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  Trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  Trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
243	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  container[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
244	[BUG]  [BUGGY]  trailer  =  trailer[start  -  1]  +  offset;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  -  1]  +  offset;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  -  1]  +  offset;	  trailer    =    trailer[start    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
245	[BUG]  [BUGGY]  trailer  =  trailer[start  -  1]  +  length  +  1;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  -  1]  +  length  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  -  1]  +  length  +  1;	  trailer    =    trailer[start    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
246	[BUG]  [BUGGY]  trailer  =  trailer[start  -  1]  +  buffer.length;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  -  1]  +  buffer.length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  -  1]  +  buffer.length;	  trailer    =    trailer[start    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
247	[BUG]  [BUGGY]  trailer  =  trailer[start  +  1]  +  length;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  +  1]  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  +  1]  +  length;	  trailer    =    trailer[start    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
248	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[0]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[0]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[0]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
249	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer!=  '[')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer!=  '[')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer!=  '[')?  buffer[end  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
250	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[length  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[length  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[length  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
251	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[1]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
252	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  trailer;	  trailer    =    buffer[end    -    1]    *    start;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
253	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.trim();  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.trim();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  trailer.trim();	  trailer    =    buffer[end    -    1]    *    start;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
254	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.reset();  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.reset();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  trailer.reset();	  trailer    =    buffer[end    -    1]    *    start;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
255	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.byteValue();  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.byteValue();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  trailer.byteValue();	  trailer    =    buffer[end    -    1]    *    start;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
256	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  2;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  2;	  trailer    =    buffer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
257	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  +  2;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  +  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  +  2;	  trailer    =    buffer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
258	[BUG]  [BUGGY]  trailer  =  trailer[start  -  start];  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  -  start];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  -  start];	  trailer    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	83	None	replace
259	[BUG]  [BUGGY]  trailer  =  this.trailer[start  -  start];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[start  -  start];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[start  -  start];	  trailer    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	83	None	replace
260	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  width  +  1;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  width  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  width  +  1;	  trailer    =    buffer[end    -    1]    +    width;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
261	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  width  +  2;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  width  +  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  width  +  2;	  trailer    =    buffer[end    -    1]    +    width;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
262	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  +  width;  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  +  width;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  +  width;	  trailer    =    buffer[end    -    1]    +    width;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
263	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  width;  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  width;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  width;	  trailer    =    buffer[end    -    1]    +    width;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
264	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer));  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer));  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
265	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  trailer: "  +  trailer);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  trailer: "  +  trailer);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  trailer: "  +  trailer);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
266	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
267	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  trailer: ");  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  trailer: ");  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  trailer: ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
268	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : " ");  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : " ");  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
269	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Can  not  parse  trailer: "  +  trailer);  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalArgumentException( "Can  not  parse  trailer: "  +  trailer);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalArgumentException( "Can  not  parse  trailer: "  +  trailer);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
270	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  this.trailer[start  -  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  this.trailer[start  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  this.trailer[start  -  1];	  Trailer    <    K,    V>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	65	None	replace
271	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  0)?  buffer[start  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  0)?  buffer[start  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  0)?  buffer[start  -  1]  :  trailer;	  Trailer    <    K,    V>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	65	None	replace
272	[BUG]  [BUGGY]  trailer  =  buffer[start  +  end];  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  +  end];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  +  end];	  trailer    =    buffer[start    -    end];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
273	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
274	[BUG]  [BUGGY]  while(start  <  end  &&  trailer  =='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&  trailer  =='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&  trailer  =='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
275	[BUG]  [BUGGY]  while(start  <  end  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
276	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
277	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  trailer.byteValue();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  trailer.byteValue();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  trailer.byteValue();	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
278	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[0]  :  trailer;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[0]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[0]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
279	[BUG]  [BUGGY]  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =(trailer  ==  '[')?  buffer[start  -  1]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
280	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[start  +  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[start  +  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[start  +  1]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
281	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    T>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
282	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  this.trailer[end  -  2];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  this.trailer[end  -  2];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  this.trailer[end  -  2];	  Trailer    <    T>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
283	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  +  offset;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  +  offset;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  +  offset;	  trailer    =    trailer[end    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
284	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  +  length  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  +  length  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  +  length  +  1;	  trailer    =    trailer[end    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
285	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  *  length;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  *  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  *  length;	  trailer    =    trailer[end    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
286	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  start  +  length  +  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  start  +  length  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  start  +  length  +  1;	  trailer    =    buffer[end    -    1]    +    start    +    length;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
287	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  start  +  length  +  2;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  start  +  length  +  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  start  +  length  +  2;	  trailer    =    buffer[end    -    1]    +    start    +    length;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
288	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  start  +  offset;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  start  +  offset;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  start  +  offset;	  trailer    =    buffer[end    -    1]    +    start    +    length;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
289	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  start  +  length  +  3;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  start  +  length  +  3;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  start  +  length  +  3;	  trailer    =    buffer[end    -    1]    +    start    +    length;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
290	[BUG]  [BUGGY]  trailer  =  buffer[start  -  length];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  length];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  length];	  trailer    =    buffer[length    -    start];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
291	[BUG]  [BUGGY]  trailer  =  buffer[offset  -  start];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[offset  -  start];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[offset  -  start];	  trailer    =    buffer[length    -    start];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
292	[BUG]  [BUGGY]  trailer  =  buffer[length  -  start  +  1];  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[length  -  start  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[length  -  start  +  1];	  trailer    =    buffer[length    -    start];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
293	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  BYTE_MASK;	  trailer    =    buffer[end    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
294	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  *  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  *  BYTE_MASK  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  *  BYTE_MASK  +  1;	  trailer    =    buffer[end    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
295	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  *  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  *  FALLBACK_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  *  FALLBACK_ENCODING;	  trailer    =    buffer[end    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
296	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  *  BYTE_MASK  +  2;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  *  BYTE_MASK  +  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  *  BYTE_MASK  +  2;	  trailer    =    buffer[end    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
297	[BUG]  [BUGGY]  trailer  =  buffer[start  -  end]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  end]  *  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  end]  *  BYTE_MASK;	  trailer    =    buffer[end    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
298	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  *  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  *  BYTE_SIZE;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  *  BYTE_SIZE;	  trailer    =    buffer[end    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
299	[BUG]  [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
300	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  =='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length  &&  trailer  =='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length  &&  trailer  =='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
301	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
302	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
303	[BUG]  [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
304	[BUG]  [BUGGY]  trailer  =  this.trailer[start  -  1]  +  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[start  -  1]  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[start  -  1]  +  1;	  trailer    =    this.trailer[end    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
305	[BUG]  [BUGGY]  trailer  =  this.trailer[end  -  1]  +  3;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[end  -  1]  +  3;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[end  -  1]  +  3;	  trailer    =    this.trailer[end    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
306	[BUG]  [BUGGY]  trailer  =  this.trailer[end  -  1]  +  4;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[end  -  1]  +  4;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[end  -  1]  +  4;	  trailer    =    this.trailer[end    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
307	[BUG]  [BUGGY]  trailer  =  this.trailer[end  -  1]  *  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[end  -  1]  *  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[end  -  1]  *  1;	  trailer    =    this.trailer[end    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
308	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  -  start;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  -  start;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  -  start;	  trailer    =    buffer[end    -    1]    -    start;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
309	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  -  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  -  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  -  trailer;	  trailer    =    buffer[end    -    1]    -    start;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
310	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  -  trailer.length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  -  trailer.length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  -  trailer.length;	  trailer    =    buffer[end    -    1]    -    start;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
311	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  -  trailer.toByteArray();  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  -  trailer.toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  -  trailer.toByteArray();	  trailer    =    buffer[end    -    1]    -    start;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
312	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  -  start  +  1;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  -  start  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  -  start  +  1;	  trailer    =    buffer[end    -    1]    -    start;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
313	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  -  trailer.byteValue();  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  -  trailer.byteValue();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  -  trailer.byteValue();	  trailer    =    buffer[end    -    1]    -    start;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
314	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
315	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
316	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
317	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer.toByteArray();  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer.toByteArray();  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer.toByteArray();  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
318	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  new  ByteArrayInputStream(buffer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  new  ByteArrayInputStream(buffer,  0,  length);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  new  ByteArrayInputStream(buffer,  0,  length);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
319	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  container;  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  container;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  container;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
320	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  +  3;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  +  3;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  +  3;	  trailer    =    buffer[start    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
321	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  +  4;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  +  4;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  +  4;	  trailer    =    buffer[start    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
322	[BUG]  [BUGGY]  trailer  =  buffer[length  -  1]  +  2;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[length  -  1]  +  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[length  -  1]  +  2;	  trailer    =    buffer[length    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
323	[BUG]  [BUGGY]  trailer  =  buffer[length  -  1]  +  3;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[length  -  1]  +  3;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[length  -  1]  +  3;	  trailer    =    buffer[length    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
324	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end  -  1]  +  1;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  trailer  =  buffer[end  -  1]  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  trailer  =  buffer[end  -  1]  +  1;	  trailer    =    buffer[length    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
325	[BUG]  [BUGGY]  trailer  =  buffer[length  -  1]  +  4;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[length  -  1]  +  4;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[length  -  1]  +  4;	  trailer    =    buffer[length    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
326	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  3;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  3;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  3;	  trailer    =    buffer[end    -    1]    +    3;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
327	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[0]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[0]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[0]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
328	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer!=  '')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer!=  '')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer!=  '')?  buffer[end  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
329	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  new  BYTE_MASK();  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  new  BYTE_MASK();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  new  BYTE_MASK();	  Trailer    <    N,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
330	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[length  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[length  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[length  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
331	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    K,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
332	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  =='')?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  =='')?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  =='')?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    K,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
333	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==''  ||  trailer  ==  '-')?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==''  ||  trailer  ==  '-')?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==''  ||  trailer  ==  '-')?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    K,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
334	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(this.trailer[end  -  1]  ==  null?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(this.trailer[end  -  1]  ==  null?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(this.trailer[end  -  1]  ==  null?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    K,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
335	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '')?  buffer[start  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '')?  buffer[start  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '')?  buffer[start  -  1]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
336	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  &&  trailer  ==  '')?  buffer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  &&  trailer  ==  '')?  buffer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  &&  trailer  ==  '')?  buffer[end  -  1]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
337	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  &&  trailer!=  '')?  buffer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  &&  trailer!=  '')?  buffer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  &&  trailer!=  '')?  buffer[end  -  1]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
338	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer!=  '')?  buffer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer!=  '')?  buffer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer!=  '')?  buffer[end  -  1]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
339	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer!=  '')?  buffer[start  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer!=  '')?  buffer[start  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer!=  '')?  buffer[start  -  1]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
340	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  *  start;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  *  start;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  *  start;	  trailer    =    trailer[end    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
341	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  +  start  +  length;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  +  start  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  +  start  +  length;	  trailer    =    trailer[end    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
342	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  +  width;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  +  width;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  +  width;	  trailer    =    trailer[end    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
343	[BUG]  [BUGGY]  trailer  =  this.trailer[end  -  1]  *  2;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[end  -  1]  *  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[end  -  1]  *  2;	  trailer    =    this.trailer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
344	[BUG]  [BUGGY]  trailer  =  this.trailer[start  -  1]  +  2;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[start  -  1]  +  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[start  -  1]  +  2;	  trailer    =    this.trailer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
345	[BUG]  [BUGGY]  trailer  =  this.trailer[start  +  1];  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[start  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[start  +  1];	  trailer    =    this.trailer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
346	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
347	[BUG]  [BUGGY]  while(start  <  end  &&  trailer  =='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&  trailer  =='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&  trailer  =='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
348	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  '['  ||  trailer  ==  ']'))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
349	[BUG]  [BUGGY]  while(start  <  end  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&  trailer!='')  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
350	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  this.trailer[length  -  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  this.trailer[length  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  this.trailer[length  -  1];	  Trailer    <    N,    V>    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	62	None	replace
351	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer!=  '['  ||  trailer  ==  ']')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer!=  '['  ||  trailer  ==  ']')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer!=  '['  ||  trailer  ==  ']')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '['    ||    trailer    ==    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
352	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  trailer  ==  '')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  trailer  ==  '')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  trailer  ==  '')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
353	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  '')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  '')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  '')?  buffer[start  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
354	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  trailer!=  '')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  trailer!=  '')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  trailer!=  '')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
355	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer!=  '')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer!=  '')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer!=  '')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
356	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  '/')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  '/')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  '/')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
357	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==''  ||  trailer  =='')?  buffer[length  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==''  ||  trailer  =='')?  buffer[length  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==''  ||  trailer  =='')?  buffer[length  -  1]  :  null;	  Trailer    <    T>    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
358	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  =='')?  trailer[0]  :  trailer[end  -  1];  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  =='')?  trailer[0]  :  trailer[end  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  =='')?  trailer[0]  :  trailer[end  -  1];	  Trailer    <    N,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
359	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  =='')?  trailer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  =='')?  trailer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  =='')?  trailer[end  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
360	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start  +  3];  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start  +  3];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start  +  3];	  trailer    =    buffer[end    -    start    +    1];    	non-compiled	[CE]  <identifier>  expected	77	None	replace
361	[BUG]  [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
362	[BUG]  [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  start  +  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  start  +  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	result  |=  length  >  0)  {  for(int  i  =  start;  i  <  start  +  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
363	[BUG]  [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  start;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  start;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	result  |=  length  >  0)  {  for(int  i  =  start;  i  <  start;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
364	[BUG]  [BUGGY]  safeMultiply(start,  length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  safeMultiply(start,  length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	safeMultiply(start,  length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
365	[BUG]  [BUGGY]  safeMultiply(start,  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  safeMultiply(start,  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	safeMultiply(start,  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
366	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  &&  trailer!=  ']')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  &&  trailer!=  ']')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '['  &&  trailer!=  ']')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
367	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[0]  :  null;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[0]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[0]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
368	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer!=  '['  ||  trailer  ==  ']')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer!=  '['  ||  trailer  ==  ']')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer!=  '['  ||  trailer  ==  ']')?  buffer[start  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
369	[BUG]  [BUGGY]  trailer  =  buffer[start  -  start]  +  length;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  start]  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  start]  +  length;	  trailer    =    buffer[start    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
370	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  =='')?  trailer[0]  :  trailer[end  -  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  =='')?  trailer[0]  :  trailer[end  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  =='')?  trailer[0]  :  trailer[end  -  1];	  Trailer    <    K,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
371	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  =='')?  trailer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  =='')?  trailer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  =='')?  trailer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
372	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  =='')?  trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  =='')?  trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  =='')?  trailer[end  -  1]  :  trailer;	  Trailer    <    K,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
373	[BUG]  [BUGGY]  trailer  =  this.trailer[end  -  1]  +  length;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[end  -  1]  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[end  -  1]  +  length;	  trailer    =    trailer[end    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
374	[BUG]  [BUGGY]  trailer  =  length[end  -  1]  +  trailer;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  length[end  -  1]  +  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  length[end  -  1]  +  trailer;	  trailer    =    trailer[end    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
375	[BUG]  [BUGGY]  trailer  =  start[end  -  1]  +  length;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  start[end  -  1]  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  start[end  -  1]  +  length;	  trailer    =    trailer[end    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
376	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  -  start  +  2;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  -  start  +  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  -  start  +  2;	  trailer    =    buffer[end    -    1]    -    start;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
377	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  -  offset;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  -  offset;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  -  offset;	  trailer    =    buffer[end    -    1]    -    start;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
378	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  -  length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  -  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  -  length;	  trailer    =    buffer[end    -    1]    -    start;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
379	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  -  start  +  length;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  -  start  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  -  start  +  length;	  trailer    =    buffer[end    -    1]    -    start;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
380	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  DEFAULT_ENCODING;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  DEFAULT_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  DEFAULT_ENCODING;	  Trailer    <    K,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
381	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[start  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[start  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[start  -  start]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
382	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1].toByteArray(trailer);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1].toByteArray(trailer);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  buffer[end  -  1].toByteArray(trailer);	  Trailer    <    T>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
383	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[start  -  1].toByteArray();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  buffer[start  -  1].toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  buffer[start  -  1].toByteArray();	  Trailer    <    T>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
384	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1].convertToByteArray();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1].convertToByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  buffer[end  -  1].convertToByteArray();	  Trailer    <    T>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
385	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1].subtract(trailer);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1].subtract(trailer);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  buffer[end  -  1].subtract(trailer);	  Trailer    <    T>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
386	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[end  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
387	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[start  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
388	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '-')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '-')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '-')?  buffer[end  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
389	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[end  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
390	[BUG]  [BUGGY]  trailer  =  buffer[trailer  -  1];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[trailer  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[trailer  -  1];	  trailer    =    buffer[offset    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
391	[BUG]  [BUGGY]  trailer  =  buffer[loader  -  1];  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[loader  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[loader  -  1];	  trailer    =    buffer[offset    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
392	[BUG]  [BUGGY]  trailer  =  buffer[offset  -  1]  +  start;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[offset  -  1]  +  start;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[offset  -  1]  +  start;	  trailer    =    buffer[offset    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
393	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  *  2;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  *  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  *  2;	  trailer    =    buffer[end    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
394	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  *  BYTE_BACK_ENCODING;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  *  BYTE_BACK_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  *  BYTE_BACK_ENCODING;	  trailer    =    buffer[end    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
395	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[start  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[start  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[start  -  start]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
396	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  DEFAULT_ENCODING;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  DEFAULT_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  DEFAULT_ENCODING;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
397	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer!=  '[')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer!=  '[')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer!=  '[')?  buffer[start  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
398	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[start  +  1]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[start  +  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[start  +  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
399	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  'n')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  'n')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  &&  'n')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    ==    'n')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
400	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[start  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[start  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[start  -  start]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    ==    'n')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
401	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[0]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[0]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[0]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    ==    'n')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
402	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  FALLBACK_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  FALLBACK_ENCODING;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
403	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  BYTE_MASK;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
404	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  DEFAULT_ENCODING;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  DEFAULT_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  DEFAULT_ENCODING;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
405	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer!=  '[')?  buffer[start  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer!=  '[')?  buffer[start  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer!=  '[')?  buffer[start  -  1]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
406	[BUG]  [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
407	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
408	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
409	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
410	[BUG]  [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
411	[BUG]  [BUGGY]  trailer  =  buffer[start  +  1];  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  +  1];	  trailer    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
412	[BUG]  [BUGGY]  trailer  =  trailer[start  +  1]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  +  1]  &  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  +  1]  &  BYTE_MASK;	  trailer    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
413	[BUG]  [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
414	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
415	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
416	[BUG]  [BUGGY]  while(start  <  length  &&  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length  &&  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length  &&  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
417	[BUG]  [BUGGY]  while(start  <  end  &&  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
418	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
419	[BUG]  [BUGGY]  trailer  =  buffer[start  -  start]  +  end;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  start]  +  end;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  start]  +  end;	  trailer    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
420	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  FALLBACK_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  FALLBACK_ENCODING;	  Trailer    <    T>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
421	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  DEFAULT_ENCODING;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  DEFAULT_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  DEFAULT_ENCODING;	  Trailer    <    T>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
422	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
423	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[start  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
424	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  '-')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  '-')?  buffer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  '-')?  buffer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
425	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.charAt(start);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  trailer.charAt(start);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  trailer.charAt(start);	  trailer    =    buffer[end    -    1]    +    trailer.length;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
426	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
427	[BUG]  [BUGGY]  while(start  >  0  &&  end  <  length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  >  0  &&  end  <  length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  >  0  &&  end  <  length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
428	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start  +  1;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start  +  1;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start  +  1;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
429	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer.toByteArray();  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer.toByteArray();  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer.toByteArray();  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
430	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  new  byte[offset];  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  new  byte[offset];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  new  byte[offset];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
431	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  length.intValue();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  +  length.intValue();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  +  length.intValue();	  trailer    =    buffer[end    -    start]    +    length;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
432	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  length.toIntByteArray();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  +  length.toIntByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  +  length.toIntByteArray();	  trailer    =    buffer[end    -    start]    +    length;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
433	[BUG]  [BUGGY]  trailer  =  trailer[end  -  start]  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  start]  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  start]  +  1;	  trailer    =    trailer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
434	[BUG]  [BUGGY]  trailer  =  this.trailer[end  -  start];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[end  -  start];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[end  -  start];	  trailer    =    trailer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
435	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  DEFAULT_ENCODING;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  DEFAULT_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  DEFAULT_ENCODING;	  Trailer    <    N,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
436	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[start  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[start  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[start  -  start]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
437	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  *  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  *  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  *  1;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
438	[BUG]  [BUGGY]  allowNegatives(trailer)  {  if(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  allowNegatives(trailer)  {  if(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	allowNegatives(trailer)  {  if(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
439	[BUG]  [BUGGY]  allowNegatives(false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  allowNegatives(false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	allowNegatives(false)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
440	[BUG]  [BUGGY]  allowNegatives(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  allowNegatives(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	allowNegatives(trailer)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
441	[BUG]  [BUGGY]  allowNegatives(true)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  allowNegatives(true)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	allowNegatives(true)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
442	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  =='')?  trailer[start  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  =='')?  trailer[start  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  =='')?  trailer[start  -  1]  :  trailer;	  Trailer    <    T>    trailer    =    trailer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	89	None	replace
443	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==''?  trailer[start  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==''?  trailer[start  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==''?  trailer[start  -  1]  :  trailer;	  Trailer    <    T>    trailer    =    trailer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	89	None	replace
444	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  >='')?  buffer[length  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  >='')?  buffer[length  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  >='')?  buffer[length  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	87	None	replace
445	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  buffer[offset  -  1];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  buffer[offset  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  buffer[offset  -  1];	  Trailer    <    K,    V>    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	87	None	replace
446	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer!=  '[')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer!=  '[')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer!=  '[')?  buffer[start  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
447	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[start  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[start  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[start  -  start]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
448	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
449	[BUG]  [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
450	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
451	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
452	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  offset;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  offset;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  offset;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
453	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  new  byte[buffer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  new  byte[buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  new  byte[buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
454	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  buffer[end  -  1].toByteArray(trailer);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  buffer[end  -  1].toByteArray(trailer);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  buffer[end  -  1].toByteArray(trailer);	  Trailer    <    K,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
455	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  buffer[start  -  1].toByteArray();  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  buffer[start  -  1].toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  buffer[start  -  1].toByteArray();	  Trailer    <    K,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
456	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  buffer[end  -  1].getByteArray();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  buffer[end  -  1].getByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  buffer[end  -  1].getByteArray();	  Trailer    <    K,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
457	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  start  +  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  start  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  buffer[end  -  start  +  1];	  Trailer    <    T>    trailer    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
458	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  start  1];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  start  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  buffer[end  -  start  1];	  Trailer    <    T>    trailer    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
459	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end  -  1].toByteArray(trailer);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end  -  1].toByteArray(trailer);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  buffer[end  -  1].toByteArray(trailer);	  Trailer    <    N,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
460	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[start  -  1].toByteArray();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[start  -  1].toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  buffer[start  -  1].toByteArray();	  Trailer    <    N,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
461	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end  -  1].getByteArray();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end  -  1].getByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  buffer[end  -  1].getByteArray();	  Trailer    <    N,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
462	[BUG]  [BUGGY]  trailer  =  buffer[start  -  start]  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  start]  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  start]  +  1;	  trailer    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	83	None	replace
463	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[start  -  start];  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  buffer[start  -  start];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  buffer[start  -  start];	  Trailer    <    T>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
464	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  *  end;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  *  end;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  *  end;	  trailer    =    buffer[end    -    1]    *    start;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
465	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[0]  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[0]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[0]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '['    ||    trailer    ==    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
466	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  start]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '['    ||    trailer    ==    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
467	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer!=  '['  ||  trailer  ==  ']')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer!=  '['  ||  trailer  ==  ']')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer!=  '['  ||  trailer  ==  ']')?  buffer[start  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '['    ||    trailer    ==    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
468	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  start]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '['    ||    trailer    ==    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
469	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[offset  -  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[offset  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  buffer[offset  -  1];	  Trailer    <    N,    V>    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	62	None	replace
470	[BUG]  [BUGGY]  trailer  =  this.trailer[start  -  1]  +  length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[start  -  1]  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[start  -  1]  +  length;	  trailer    =    trailer[start    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
471	[BUG]  [BUGGY]  trailer  =  length[start  -  1]  +  trailer;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  length[start  -  1]  +  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  length[start  -  1]  +  trailer;	  trailer    =    trailer[start    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
472	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  +  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  +  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  +  BYTE_MASK;	  trailer    =    trailer[end    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
473	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  +  start  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  +  start  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  +  start  +  1;	  trailer    =    trailer[end    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
474	[BUG]  [BUGGY]  trailer  =  this.trailer[length  -  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[length  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[length  -  1];	  trailer    =    trailer[length    -    1];    	non-compiled	[CE]  <identifier>  expected	36	None	replace
475	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  /  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  /  BYTE_MASK;	  trailer    =    buffer[end    -    1]    /    start;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
476	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  /  Trailer;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  /  Trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  /  Trailer;	  trailer    =    buffer[end    -    1]    /    start;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
477	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  /  TTR_BACK_ENCODING;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  /  TTR_BACK_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  /  TTR_BACK_ENCODING;	  trailer    =    buffer[end    -    1]    /    start;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
478	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  *  length;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  *  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  *  length;	  trailer    =    buffer[end    -    1]    *    length;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
479	[BUG]  [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
480	[BUG]  [BUGGY]  safeToInt(start,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  safeToInt(start,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	safeToInt(start,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
481	[BUG]  [BUGGY]  safeToInt(start,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  safeToInt(start,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	safeToInt(start,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
482	[BUG]  [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ".);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
483	[BUG]  [BUGGY]  safeToInt(start,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  safeToInt(start,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	safeToInt(start,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ".);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
484	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  }  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  }  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
485	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  'n')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  }  else  if(trailer  ==  'n')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  }  else  if(trailer  ==  'n')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
486	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  '.')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  }  else  if(trailer  ==  '.')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  }  else  if(trailer  ==  '.')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
487	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  =='')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  }  else  if(trailer  =='')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  }  else  if(trailer  =='')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
488	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  null)  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  }  else  if(trailer  ==  null)  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  }  else  if(trailer  ==  null)  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
489	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  }  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  }  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  trailer  =  buffer[end  -  2];  }  else  {  throw  new  IllegalStateException( " ");  }	  trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
490	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  5;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  5;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  5;	  trailer    =    buffer[end    -    1]    +    4;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
491	[BUG]  [BUGGY]  trailer  =  new  byte[trailer.length  -  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  new  byte[trailer.length  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  new  byte[trailer.length  -  1];	  trailer    =    new    byte[length    -    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
492	[BUG]  [BUGGY]  trailer  =  new  byte[start  -  1];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  new  byte[start  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  new  byte[start  -  1];	  trailer    =    new    byte[length    -    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
493	[BUG]  [BUGGY]  trailer  =  new  byte[length  -  start];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  new  byte[length  -  start];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  new  byte[length  -  start];	  trailer    =    new    byte[length    -    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
494	[BUG]  [BUGGY]  trailer  =  new  byte[end  -  1];  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  new  byte[end  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  new  byte[end  -  1];	  trailer    =    new    byte[length    -    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
495	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  =='')?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  =='')?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  =='')?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    N,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
496	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  instanceof  ZipEncoding)?((  ZipEncoding)this.trailer).encode(trailer):  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  instanceof  ZipEncoding)?((  ZipEncoding)this.trailer).encode(trailer):  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  instanceof  ZipEncoding)?((  ZipEncoding)this.trailer).encode(trailer):  null;	  Trailer    <    N,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
497	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  instanceof  ZipEncoding)?((  ZipEncoding)this.trailer[end  -  1]):  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  instanceof  ZipEncoding)?((  ZipEncoding)this.trailer[end  -  1]):  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  instanceof  ZipEncoding)?((  ZipEncoding)this.trailer[end  -  1]):  trailer;	  Trailer    <    N,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
498	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  +  start.length;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  +  start.length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  +  start.length;	  trailer    =    buffer[start    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
499	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  *  start;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  *  start;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  *  start;	  trailer    =    buffer[start    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
500	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==''  ||  trailer  =='')?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==''  ||  trailer  =='')?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==''  ||  trailer  =='')?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    K,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
501	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    K,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
502	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==''  ||  trailer  =='')?  this.trailer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==''  ||  trailer  =='')?  this.trailer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==''  ||  trailer  =='')?  this.trailer[end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
503	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[start  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[start  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[start  -  start]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
504	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  DEFAULT_ENCODING;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  DEFAULT_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  DEFAULT_ENCODING;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
505	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer!=  '[')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer!=  '[')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer!=  '[')?  buffer[start  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
506	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[start  +  1]  :  null;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[start  +  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[start  +  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
507	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==''  ||  trailer  =='')?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==''  ||  trailer  =='')?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==''  ||  trailer  =='')?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    T>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
508	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(this.trailer[end  -  1]!='')?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(this.trailer[end  -  1]!='')?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(this.trailer[end  -  1]!='')?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    T>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
509	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==''  ||  trailer  =='')?  this.trailer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==''  ||  trailer  =='')?  this.trailer[end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==''  ||  trailer  =='')?  this.trailer[end  -  1]  :  null;	  Trailer    <    T>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
510	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  start  *  length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  start  *  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  start  *  length;	  trailer    =    buffer[end    -    1]    +    start    +    length;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
511	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  length  +  offset;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  length  +  offset;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  length  +  offset;	  trailer    =    buffer[end    -    1]    +    start    +    length;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
512	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  >=  ']')?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  >=  ']')?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  >=  ']')?  buffer[start  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
513	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  this.trailer[end  -  2];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  this.trailer[end  -  2];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  this.trailer[end  -  2];	  trailer    =    this.trailer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	55	None	replace
514	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalArgumentException( " "  +  trailer);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
515	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".getMessage());  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalArgumentException( " ".getMessage());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
516	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( ". ");  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalArgumentException( ". ");  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalArgumentException( ". ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
517	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Can  not  parse  ' "  +  trailer);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalArgumentException( "Can  not  parse  ' "  +  trailer);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalArgumentException( "Can  not  parse  ' "  +  trailer);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
518	[BUG]  [BUGGY]  Trailer  trailer  =(trailer!=  null)?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  trailer  =(trailer!=  null)?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  trailer  =(trailer!=  null)?  this.trailer[end  -  1]  :  trailer;	  Trailer    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
519	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  buffer[end  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  trailer  =(trailer  ==  null)?  this.trailer[end  -  1]  :  buffer[end  -  1];	  Trailer    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
520	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
521	[BUG]  [BUGGY]  if(trailer  =='')  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(trailer  =='')  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(trailer  =='')  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
522	[BUG]  [BUGGY]  safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
523	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
524	[BUG]  [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ".);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
525	[BUG]  [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start  +  end;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start  +  end;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	result  |=  length  >  0)  {  for(int  i  =  start  +  end;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
526	[BUG]  [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	result  |=  length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( ". ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
527	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[start  -  start];  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[start  -  start];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  buffer[start  -  start];	  Trailer    <    N,    V>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	61	None	replace
528	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[start]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[start]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[start]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[start]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
529	[BUG]  [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[start]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
530	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[start]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
531	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[start]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
532	[BUG]  [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  container[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[start]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
533	[BUG]  [BUGGY]  System.arraycopy(trailer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  System.arraycopy(trailer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	System.arraycopy(trailer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
534	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length,  trailer);  System.arraycopy(buffer,  offset,  end,  length);  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length,  trailer);  System.arraycopy(buffer,  offset,  end,  length);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length,  trailer);  System.arraycopy(buffer,  offset,  end,  length);  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
535	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
536	[BUG]  [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
537	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
538	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
539	[BUG]  [BUGGY]  if(trailer  =='')  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(trailer  =='')  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(trailer  =='')  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
540	[BUG]  [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
541	[BUG]  [BUGGY]  safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
542	[BUG]  [BUGGY]  End  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  End  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	End  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
543	[BUG]  [BUGGY]  safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  container;  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  container;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  container;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
544	[BUG]  [BUGGY]  safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  new  byte[length];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  new  byte[length];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  new  byte[length];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
545	[BUG]  [BUGGY]  safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  null;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  null;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
546	[BUG]  [BUGGY]  safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  this.trailer;  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  this.trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	safeMultiply(trailer,  offset,  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  this.trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
547	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  =='')?  buffer[start  -  1]  :  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  =='')?  buffer[start  -  1]  :  buffer[end  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  =='')?  buffer[start  -  1]  :  buffer[end  -  1];	  Trailer    <    K,    V>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	65	None	replace
548	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[start  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[start  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[start  -  1]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
549	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '')?  buffer[end  -  1]  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '')?  buffer[end  -  1]  :  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  '')?  buffer[end  -  1]  :  BYTE_MASK;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
550	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[end  -  1]  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[end  -  1]  :  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[end  -  1]  :  BYTE_MASK;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
551	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  offset  +  2;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  offset  +  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  offset  +  2;	  trailer    =    buffer[end    -    1]    +    length    +    2;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
552	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  start  +  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  &  start  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  &  start  +  1;	  trailer    =    buffer[end    -    1]    &    start;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
553	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  trailer.toByteArray();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  &  trailer.toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  &  trailer.toByteArray();	  trailer    =    buffer[end    -    1]    &    start;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
554	[BUG]  [BUGGY]  trailer  =  trailer[start  -  1]  +  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  -  1]  +  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  -  1]  +  BYTE_MASK;	  trailer    =    buffer[start    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
555	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  start]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
556	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  1]  :  new  BYTE_MASK();  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  1]  :  new  BYTE_MASK();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  1]  :  new  BYTE_MASK();	  Trailer    <    K,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
557	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[loader  -  1];  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  trailer[loader  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  trailer[loader  -  1];	  Trailer    <    N,    V>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
558	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  this.trailer[end  -  1])  {  trailer  =  trailer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  }  else  if(trailer  ==  this.trailer[end  -  1])  {  trailer  =  trailer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  }  else  if(trailer  ==  this.trailer[end  -  1])  {  trailer  =  trailer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    this.trailer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	55	None	replace
559	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  this.trailer[end  -  2])  {  trailer  =  trailer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  }  else  if(trailer  ==  this.trailer[end  -  2])  {  trailer  =  trailer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  }  else  if(trailer  ==  this.trailer[end  -  2])  {  trailer  =  trailer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    this.trailer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	55	None	replace
560	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  this.trailer)  {  trailer  =  trailer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  }  else  if(trailer  ==  this.trailer)  {  trailer  =  trailer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  }  else  if(trailer  ==  this.trailer)  {  trailer  =  trailer[end  -  2];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    this.trailer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	55	None	replace
561	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  this.trailer[end  -  1])  {  trailer  =  trailer[end  -  2];  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  }  else  if(trailer  ==  this.trailer[end  -  1])  {  trailer  =  trailer[end  -  2];  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  }  else  if(trailer  ==  this.trailer[end  -  1])  {  trailer  =  trailer[end  -  2];  }  else  {  throw  new  IllegalStateException( " ");  }	  trailer    =    this.trailer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	55	None	replace
562	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  this.trailer[end  -  2])  {  trailer  =  trailer[end  -  1];  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  }  else  if(trailer  ==  this.trailer[end  -  2])  {  trailer  =  trailer[end  -  1];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  }  else  if(trailer  ==  this.trailer[end  -  2])  {  trailer  =  trailer[end  -  1];  }	  trailer    =    this.trailer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	55	None	replace
563	[BUG]  [BUGGY]  aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  start,  length));  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  start,  length));  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  start,  length));	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
564	[BUG]  [BUGGY]  aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  offset,  length));  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  offset,  length));  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  offset,  length));	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
565	[BUG]  [BUGGY]  aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  offset,  length);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  offset,  length);	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
566	[BUG]  [BUGGY]  aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  0,  length));  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  0,  length));  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  0,  length));	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
567	[BUG]  [BUGGY]  aught(IllegalArgumentException.DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  aught(IllegalArgumentException.DEFAULT_ENCODING);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	aught(IllegalArgumentException.DEFAULT_ENCODING);	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
568	[BUG]  [BUGGY]  aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  length));  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  length));  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	aught(IllegalArgumentException.DEFAULT_ENCODING,  trailer,  length));	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
569	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  trailer[start  -  start];  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  trailer[start  -  start];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  trailer[start  -  start];	  Trailer    <    T>    trailer    =    trailer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	89	None	replace
570	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
571	[BUG]  [BUGGY]  ||(end  >  0  &&  trailer!=  '.'))  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||(end  >  0  &&  trailer!=  '.'))  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||(end  >  0  &&  trailer!=  '.'))  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
572	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
573	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  buffer[i]  =  trailer;  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  buffer[i]  =  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  buffer[i]  =  trailer;	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
574	[BUG]  [BUGGY]  while(i  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  buffer[i]  =  trailer;  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(i  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  buffer[i]  =  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(i  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  buffer[i]  =  trailer;	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
575	[BUG]  [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[start]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[start]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
576	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
577	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getByte());  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getByte());  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getByte());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
578	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getMillis());  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getMillis());  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getMillis());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
579	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.length);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.length);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.length);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
580	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  trailer;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  trailer;	  Trailer    <    T>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
581	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  /  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  /  BYTE_MASK;	  trailer    =    buffer[end    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
582	[BUG]  [BUGGY]  trailer  =  trailer[end  -  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  start]  *  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  start]  *  BYTE_MASK;	  trailer    =    buffer[end    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
583	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  &  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  &  BYTE_MASK;	  trailer    =    buffer[end    -    1]    &    start;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
584	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  trailer.charAt(start);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  &  trailer.charAt(start);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  &  trailer.charAt(start);	  trailer    =    buffer[end    -    1]    &    start;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
585	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end  -  1].convertToByteArray();  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end  -  1].convertToByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  buffer[end  -  1].convertToByteArray();	  Trailer    <    N,    V>    trailer    =    buffer[end    -    1].toByteArray();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
586	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
587	[BUG]  [BUGGY]  while(start  >  0  &&  end  <  =  trailer.length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  >  0  &&  end  <  =  trailer.length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  >  0  &&  end  <  =  trailer.length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
588	[BUG]  [BUGGY]  while(start  >  0  &&  end  <  trailer.length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  >  0  &&  end  <  trailer.length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  >  0  &&  end  <  trailer.length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
589	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
590	[BUG]  [BUGGY]  while(start  >  0  &&  end  <  length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  >  0  &&  end  <  length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  >  0  &&  end  <  length)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
591	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  1,  end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  1,  end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  1,  end  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '['    ||    trailer    ==    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
592	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  1,  length  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  1,  length  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  1,  length  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '['    ||    trailer    ==    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
593	[BUG]  [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
594	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  getTrailer(start  -  1]);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =  getTrailer(start  -  1]);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =  getTrailer(start  -  1]);	  Trailer    <    K,    V>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	65	None	replace
595	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  FALLBACK_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  FALLBACK_ENCODING;	  Trailer    <    K,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
596	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  BYTE_MASK;	  Trailer    <    K,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
597	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  start]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
598	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  trailer;	  Trailer    <    K,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
599	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  width;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  &  width;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  &  width;	  trailer    =    buffer[end    -    1]    +    width;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
600	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
601	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  FALLBACK_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  FALLBACK_ENCODING;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
602	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  BYTE_MASK;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
603	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  start]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
604	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
605	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  BYTE_MASK;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
606	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[end  -  1]  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[end  -  1]  :  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[end  -  1]  :  BYTE_MASK;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
607	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  buffer;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  buffer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  buffer;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
608	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  new  byte[length  -  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  new  byte[length  -  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  new  byte[length  -  1];	  trailer    =    new    byte[length    -    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
609	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  0xff;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  &  0xff;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  &  0xff;	  trailer    =    buffer[end    -    1]    *    length;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
610	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  &  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  &  length;	  trailer    =    buffer[end    -    1]    *    length;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
611	[BUG]  [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
612	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
613	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  offset;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  offset;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  offset;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
614	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(end  -  1)?  buffer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(end  -  1)?  buffer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(end  -  1)?  buffer[start  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	61	None	replace
615	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(end  -  1)?  buffer[start  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(end  -  1)?  buffer[start  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(end  -  1)?  buffer[start  -  1]  :  trailer;	  Trailer    <    N,    V>    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	61	None	replace
616	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
617	[BUG]  [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
618	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!='')  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length  &&  trailer!='')  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length  &&  trailer!='')  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
619	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  trailer.length;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  +  trailer.length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  +  trailer.length;	  trailer    =    buffer[end    -    1]    +    trailer.length;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
620	[BUG]  [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
621	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  &  2;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  &  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  &  2;	  trailer    =    trailer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
622	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
623	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '[')?  buffer[end  -  start]  :  null;	  Trailer    <    T>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
624	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'e')?  buffer[end  -  1]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
625	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[end  -  1]  :  trailer;	  Trailer    <    T>    trailer    =(trailer    ==''    ||    trailer    =='')?    buffer[end    -    1]    :    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
626	[BUG]  [BUGGY]  trailer  =  trailer[start  -  start]  +  length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  -  start]  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  -  start]  +  length;	  trailer    =    trailer[start    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
627	[BUG]  [BUGGY]  trailer  =  trailer[start  -  1]  &  0xff;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[start  -  1]  &  0xff;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[start  -  1]  &  0xff;	  trailer    =    trailer[start    -    1]    +    length;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
628	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  *  2  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  *  2  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  *  2  +  1;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
629	[BUG]  [BUGGY]  trailer  =  trailer[length  -  1]  +  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[length  -  1]  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[length  -  1]  +  1;	  trailer    =    buffer[length    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
630	[BUG]  [BUGGY]  trailer  =  buffer[offset  -  1]  +  1;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[offset  -  1]  +  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[offset  -  1]  +  1;	  trailer    =    buffer[length    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
631	[BUG]  [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||  length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
632	[BUG]  [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
633	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  =='')  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length  &&  trailer  =='')  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length  &&  trailer  =='')  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
634	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
635	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  length,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  length,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  offset,  length,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
636	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  length);  System.arraycopy(buffer,  offset,  end,  length);  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  length);  System.arraycopy(buffer,  offset,  end,  length);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  length);  System.arraycopy(buffer,  offset,  end,  length);  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
637	[BUG]  [BUGGY]  System.arraycopy(trailer,  start,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  System.arraycopy(trailer,  start,  buffer,  0,  length);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	System.arraycopy(trailer,  start,  buffer,  0,  length);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
638	[BUG]  [BUGGY]  trailer  =  this.trailer[end  -  1]  /  2;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  this.trailer[end  -  1]  /  2;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  this.trailer[end  -  1]  /  2;	  trailer    =    this.trailer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
639	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1]  +  start  +  length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[start  -  1]  +  start  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[start  -  1]  +  start  +  length;	  trailer    =    buffer[end    -    1]    +    start    +    length;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
640	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    T>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
641	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(this.trailer[end  -  1]  =='')?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(this.trailer[end  -  1]  =='')?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(this.trailer[end  -  1]  =='')?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    T>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
642	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    T>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
643	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
644	[BUG]  [BUGGY]  ||(end  >  0  &&  trailer!=  '.'))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||(end  >  0  &&  trailer!=  '.'))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||(end  >  0  &&  trailer!=  '.'))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
645	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
646	[BUG]  [BUGGY]  ||(end  <  0  &&  trailer!=  '.'))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  ||(end  <  0  &&  trailer!=  '.'))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	||(end  <  0  &&  trailer!=  '.'))  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  trailer;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
647	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  new  byte[length];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  new  byte[length];  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  buffer[i]  =  new  byte[length];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    buffer[i]    =    trailer;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
648	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  1,  length  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  1,  length  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  1,  length  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
649	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  start]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '['    ||    trailer!=    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
650	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  length  -  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  +  length  -  1;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  +  length  -  1;	  trailer    =    buffer[end    -    1]    +    length    +    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
651	[BUG]  [BUGGY]  trailer  =  buffer[length  -  1]  +  length;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[length  -  1]  +  length;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[length  -  1]  +  length;	  trailer    =    buffer[length    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
652	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.getByte();  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  *  trailer.getByte();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  *  trailer.getByte();	  trailer    =    buffer[end    -    1]    *    start;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
653	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  FALLBACK_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  FALLBACK_ENCODING;	  Trailer    <    N,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
654	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  start]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
655	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  BYTE_MASK;	  Trailer    <    N,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
656	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  trailer;	  Trailer    <    N,    V>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
657	[BUG]  [BUGGY]  Trailer  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer[end  -  1]  :  trailer;	  Trailer    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
658	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  null?  this.trailer[end  -  1]  :  trailer);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  trailer  =(trailer  ==  null?  this.trailer[end  -  1]  :  trailer);  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  trailer  =(trailer  ==  null?  this.trailer[end  -  1]  :  trailer);	  Trailer    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
659	[BUG]  [BUGGY]  Trailer  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer[end  -  1]  :  trailer;	  Trailer    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
660	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  trailer[end  -  2];  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  trailer[end  -  2];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  trailer[end  -  2];	  Trailer    <    T>    trailer    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	24	None	replace
661	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end  -  2];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end  -  2];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  buffer[end  -  2];	  trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
662	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
663	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
664	[BUG]  [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
665	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
666	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	while(start  <  length  &&(trailer  ==  0  ||  trailer  ==''))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
667	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[end  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[end  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[end  -  start]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    ==    'n')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
668	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[end  -  1,  length  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[end  -  1,  length  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(trailer  ==  ''  ||  trailer  ==  'n')?  buffer[end  -  1,  length  -  1]  :  null;	  Trailer    <    K,    V>    trailer    =(trailer    ==''    ||    trailer    ==    'n')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
669	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  /  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  /  BYTE_MASK;	  trailer    =    buffer[end    -    1]    /    start;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
670	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  /  HACK_BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  /  HACK_BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  /  HACK_BYTE_MASK;	  trailer    =    buffer[end    -    1]    /    start;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
671	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  /  block;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  1]  /  block;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  1]  /  block;	  trailer    =    buffer[end    -    1]    /    start;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
672	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1]  -  start;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1]  -  start;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =  buffer[end  -  1]  -  start;	  trailer    =    buffer[end    -    1]    -    start;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
673	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  -  end;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  -  end;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  -  end;	  trailer    =    buffer[end    -    1]    -    start;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
674	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  1,  end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  1,  end  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[start  -  1,  end  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '['    ||    trailer    ==    ']')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
675	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  +  buffer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  trailer[end  -  1]  +  buffer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  trailer[end  -  1]  +  buffer;	  trailer    =    buffer[end    -    1]    +    trailer;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
676	[BUG]  [BUGGY]  allowNonLocalSideEffects(length)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  allowNonLocalSideEffects(length)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	allowNonLocalSideEffects(length)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
677	[BUG]  [BUGGY]  allowNonLocalSideEffects(length,  trailer))  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  allowNonLocalSideEffects(length,  trailer))  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	allowNonLocalSideEffects(length,  trailer))  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
678	[BUG]  [BUGGY]  allowNonLocalSideEffects(length)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  allowNonLocalSideEffects(length)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	allowNonLocalSideEffects(length)  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ".);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
679	[BUG]  [BUGGY]  allowNonLocalSideEffects(length,  trailer))  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  allowNonLocalSideEffects(length,  trailer))  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	allowNonLocalSideEffects(length,  trailer))  {  for(int  i  =  start;  i  <  end;  i++)  {  throw  new  IllegalArgumentException( " ".);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
680	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    K,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
681	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(this.trailer[end  -  1]  =='')?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(this.trailer[end  -  1]  =='')?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(this.trailer[end  -  1]  =='')?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    K,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
682	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  K,  V>  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  K,  V>  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    K,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
683	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  start]  :  null;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  start]  :  null;	  Trailer    <    T>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
684	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  BYTE_MASK;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  BYTE_MASK;	  Trailer    <    T>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
685	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  trailer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  trailer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '')?  trailer[start  -  1]  :  null;	  Trailer    <    T>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
686	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  NON_GLOBAL;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  NON_GLOBAL;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  T>  trailer  =(trailer  ==  '')?  buffer[end  -  1]  :  NON_GLOBAL;	  Trailer    <    T>    trailer    =(trailer    =='')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
687	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  length.toByteArray();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  trailer  =  buffer[end  -  start]  +  length.toByteArray();  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	trailer  =  buffer[end  -  start]  +  length.toByteArray();	  trailer    =    buffer[end    -    start]    +    length;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
688	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  FALLBACK_ENCODING;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  FALLBACK_ENCODING;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
689	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  trailer[start  -  1]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
690	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  start]  :  null;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  start]  :  null;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  start]  :  null;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
691	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(trailer  ==  '[')?  buffer[end  -  1]  :  trailer;	  Trailer    <    N,    V>    trailer    =(trailer    ==    '[')?    buffer[end    -    1]    :    null;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
692	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]!=  null)?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    N,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
693	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  ==  null)?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    N,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
694	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  =='')?  this.trailer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  =='')?  this.trailer[end  -  1]  :  trailer;  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =(this.trailer[end  -  1]  =='')?  this.trailer[end  -  1]  :  trailer;	  Trailer    <    N,    V>    trailer    =    this.trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
695	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end  -  start  +  1];  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;      [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end  -  start  +  1];  [BUGGY]      }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	131	131	1	replace	Trailer  <  N,  V>  trailer  =  buffer[end  -  start  +  1];	  trailer    =    buffer[end    -    start    +    1];    	non-compiled	[CE]  <identifier>  expected	77	None	replace
