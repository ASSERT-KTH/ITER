projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("\0","{NUL}");//ReplaceNULstoallowstringtobeprintedfinalStrings="Invalidbyte"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{0}");//ReplaceNULstoallowstringtobeprintedfinalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{0}");//replaceNULstoallowstringtobeprintedfinalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","{0}");//ReplaceNULstoallowstringtobeprintedfinalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",newString(currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+"'len="+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("u00","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[0]","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0,","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings='0'+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{'"+currentByte+"'len="+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","<'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.toString();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=(byte[])current.clone();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.toCharArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.trim();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings=string.toString();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.substring(0,current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=string.toByteArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+"','"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","<'"+currentByte+"','"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[0]","{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+"','0'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0'",newString(currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",newString(current));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",newString(currentByte+1));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","newString(currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings='0'+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("u000","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-00","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00:00","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",currentByte+"'len="+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("n","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{1}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-0",newString(currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalintlen=string.length();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytelen=string.length();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytecurrentByte=string.toByteArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("Infinity","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("000","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("000","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=string.toByte();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'",currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","<'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","{'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",newString(currentByte),current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+"'len='"+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{0}",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[0]","<'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[0],","{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[0]","<'"+currentByte+"'>");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'length='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings='"+currentByte+"atoffset"+(current-offset+1)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",current+"'len="+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0',current+"'len="+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{'"+currentByte+"','0'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","<'"+currentByte+"','0'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+",'0'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<length;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249for(inti=start;i<currentByte;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249for(inti=start;i<length;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<end;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<size;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<offset;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<length;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,current);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<end;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<offset;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<size;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytecurrentByte=string.substring(0,current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.substring(0,current+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.substring(0,current+1,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.substring(0,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.substring(0,current+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings=string.substring(0,current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249chars=string.toCharArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.getBytes();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.toString()+"n";
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==current){for(inti=start;i<currentByte;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249for(inti=start;i<currentByte;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<length;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==current){for(inti=start;i<length;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<end;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-0",newString(current));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-0",newString(current,currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-0",newString(currentByte,current));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-0",newString(currentByte),current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-0",newString(currentByte+1));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("[","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("<","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("[null]","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("[0]","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-00","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-00","{");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-00","{1}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-00","{NUL}",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("000","{");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0000","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("000","{1}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("n","{'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","<'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","{'"+currentByte+"'in'"+string+"'length='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll(".000","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0,","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[0]","{1}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[0]","{0}",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0,1,","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0,","{1}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0,","<0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0,0,"{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0000","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00","{0}",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",newString(currentByte),length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","newString(currentByte),current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",newString(currentByte),buffer);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0',newString(currentByte),current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("n","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","<0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("n","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("<n","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[null]","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("<","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[NUL]","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("n","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("<n","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","<'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll(".000","{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytes='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","{'"+currentByte+"','"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",newString(current+1));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0',newString(currentByte+1));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","newString(currentByte+1));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=(byte[])string.clone();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249byte[]currentByte=(byte[])current.clone();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=(byte[])current.cloneTree();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=(byte[])this.current.clone();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249staticfinalbyte[]currentByte=(byte[])current.clone();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("<","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("000","{0}",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("000","0");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytes='0'+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string==null?null:string.toCharArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings=string.toCharArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.toCharArray()+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(string==null){for(inti=start;i<currentByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(string!=null){for(inti=start;i<currentByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(string==null){for(inti=start;i<length;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(string!=null){for(inti=start;i<length;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(string==null){for(inti=start;i<end;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(string==null){for(inti=start;i<size;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(string!=null){for(inti=start;i<end;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","newString(current));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","newString(currentByte,current));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalintlen=string.length()+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalintlen=string.length()-1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalintlen=current.length();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalintlen=string.length()*2;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalintlen=string.length()-current;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[","{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("<","{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("['"+currentByte+"']");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("['"+currentByte+"']","{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytecurrentByte=string.length();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytecurrentByte=current.toByteArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytecurrentByte=string.toByteArray()+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytecurrentByte=string.toByteArray(current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalintcurrentByte=string.toByteArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytecurrentByte=string.toByteArray()+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","<'"+currentByte+"','"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","<'"+currentByte+"','"+string+"'length='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","<'"+currentByte+"','"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","<'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("n","{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("[0]","{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","{");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","{1}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00","{");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00","{1}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{0}",currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","{0}",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0,","{0}",currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=string.toByteArray(current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=string!=null?null:string.toByteArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=string==null?null:string.toByteArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=string.toByteArray()+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=string.toByteArray(current,current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=string.toCharArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249bytes='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("n","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("<"+currentByte+">in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("Infinity","{");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("Infinity","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0'",newString(currentByte+1));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0'",newString(current));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0'",newString(currentByte),current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0'",newString(currentByte,length));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[","{'"+currentByte+"'len="+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("n","{'"+currentByte+"'len="+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",newString(current,currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","<'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","<'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","<'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytelen=string.length()+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytelen=current.length();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytelen=string.length()*2;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytelen=string.length()-1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytelen=string.length()+2;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","<'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","<'"+currentByte+"'in'"+string+"'length='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.trim().toLowerCase();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings=string.trim();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.trim()+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249chars=string.trim();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00:00","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00:00","{1}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00:00,","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=string.toByte();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<length;++i){buffer[i]=string.toByte();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytecurrentByte=string.toByte();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<end;++i){buffer[i]=string.toByte();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<size;++i){buffer[i]=string.toByte();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<offset;++i){buffer[i]=string.toByte();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<size();++i){buffer[i]=string.toByte();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",current+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",current+"'",currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",current+"'",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'",current+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0',current+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("%00","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{1}",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{1}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{'"+currentByte+"'len='"+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","<'"+currentByte+"'len='"+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'"+current+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'",current+"'",currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'",current+"'");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'",current+"'",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<length;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=string.replace('n',current);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<length;++i){buffer[i]=string.replace('n',current);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<end;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<end;++i){buffer[i]=string.replace('n',current);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==null){for(inti=start;i<offset;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings=string.toLowerCase();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings=string.getBytes();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings=string.toString()+"n";
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytecurrentByte=string.charAt(current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytecurrentByte=string.getByteArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytelen=string.length()+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","<'"+currentByte+"'in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","{'"+currentByte+"','"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","{'"+currentByte+",'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-0","{1}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("<n","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("000","{"}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","newString(currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("%s","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249chars='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings='"+currentByte+"atoffset"+(current-offset+1)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings='"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'","'{'"+currentByte+"','0'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",currentByte+"','0'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00:00",current,"{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalintlen=string.length()/BYTE_MASK;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalintlen=string.length()+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'"+currentByte+"'",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'","'");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'",current+"'",currentByte}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'"+currentByte+"'");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=(byte[])currentByte.clone();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=(byte[])current.toArray(newbyte[currentByte.size()]);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=(byte[])current.getValue();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=(byte[])current.toArray(newbyte[currentByte.length()]);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=(byte[])current.toArray(newbyte[currentByte.length]);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",currentByte+"'len='"+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-00","{10}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==current){for(inti=start;i<currentByte;++i){buffer[i]=string.toByte();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==current){for(inti=start;i<end;++i){buffer[i]=string.toByte();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current==current){for(inti=start;i<length;++i){buffer[i]=string.toByte();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.toCharArray(current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{'"+currentByte+"'in'"+string+"'length="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[0]",current+"{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("<","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("n","<'"+currentByte+"','"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("000","<0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("}","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<end;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<length;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=string.replace('n',current);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.getByte();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.toString()+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",currentByte+"',");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",current+"'");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",currentByte+"'");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",current+"',");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings=string.getByte();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings=string.substring(current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=string.getByteArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("Infinity","{NUL}",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("<","{'"+currentByte+"'len="+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.substring(0,current).trim();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.substring(0,length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.substring(0,currentByTE_MASK);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<length;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<end;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<offset;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=offset;i<currentByte;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-000","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current<length){if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<length;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current<length){if(current==null){for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,current);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<end;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytes='0'+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'","{'"+currentByte+"','"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<length;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<end;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<length;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte==null){for(inti=start;i<length;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<end;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte==null){for(inti=start;i<end;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<offset;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0,1,"{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0',currentByte+"'len="+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",currentByte+"'len="+currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0',currentByte+"'len="+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0'",newString(currentByte)+1);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0',",newString(currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-0,",newString(currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","['"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll(".s.IFJDCS".charAt(currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("--","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0'",newString(currentByte,current));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("'0'",newString(currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0',newString(currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<startByte;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<lastByte;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<offset;++i){buffer[i]=string.replace('n',currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'","'"+currentByte+"'");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'","'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","{0}",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("u00","{'"+currentByte+"','0'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.substring(current,currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalintlen=string.length()*currentByte;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings=string.toString()+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings=string.toString()+"in'"+current;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalStrings=string.toString()+1;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("Infinity","{'");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("in","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=string.toByte();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<end;++i){buffer[i]=string.toByte();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<length;++i){buffer[i]=string.toByte();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[0]",current,"{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("000","[NUL]");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0000","{");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("000","NUL");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("000","");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[0]",currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0",currentByte+"'len="+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<actualByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<size;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<this.currentByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<lastByte;++i){buffer[i]=newbyte[currentByte+1];}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".s.IFJDCS".charAt(0));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","{'"+currentByte+"'len='"+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-00","{NUL,current}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("000","-0");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","0");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("000","00");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("[","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("['"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[","{'"+currentByte+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.toString()+"atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.toString()+"in'"+current;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.toString()+"atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("in","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("[","{'"+currentByte+"'in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytelen=string.length()*currentByte;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbytelen=currentByte.length();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249Strings=string.toLowerCase();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(",","{0}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("u00","newString(currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0'","newString(currentByte));
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("0","{'"+currentByte+"','"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=buffer.toByteArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249finalbyte[]currentByte=str.toByteArray();
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("u000","NUL");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","<NUL>");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","[NUL]");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<actualByte;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<size;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<offset;++i){buffer[i]=String.valueOf(currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("u00","u00"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current<length){if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(current<length){if(currentByte==null){for(inti=start;i<currentByte;++i){buffer[i]=string.substring(0,currentByte);}}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<currentByte;++i){buffer[i]=String.substring(0,currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<actualByte;++i){buffer[i]=string.substring(0,currentByte);}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("'0',current+"'");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("-0",current+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","-0");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll(".000","[0]");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("0","{NUL}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte==null){for(inti=start;i<length;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte==null){for(inti=start;i<end;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249if(currentByte!=null){for(inti=start;i<actualByte;++i){buffer[i]=string.toByteArray();}
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("-","{'"+currentByte+"'}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[0]","{0}",currentByte);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("%20","{0}",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string.replaceAll("[","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("['"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len="+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("[","{'"+currentByte+"'atoffset"+(current-offset)+"in'"+string+"'len='"+length;
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("in","{'"+currentByte+"'len="+length);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00:00","{current}");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00:00",current);
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00:00","{");
projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java249string=string.replaceAll("00","0");
