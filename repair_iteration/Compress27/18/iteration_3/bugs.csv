bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  end  =  trailer.length()  -  start  +  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length()  -  start  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  -  start  +  1;	  end    =    trailer.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2	[BUG]  [BUGGY]  end  =  trailer.length()  /  start;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length()  /  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  /  start;	  end    =    trailer.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
3	[BUG]  [BUGGY]  end  =  trailer.length()  +  start;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length()  +  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  +  start;	  end    =    trailer.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
4	[BUG]  [BUGGY]  end  =  trailer.length()  *  start;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length()  *  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  *  start;	  end    =    trailer.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
5	[BUG]  [BUGGY]  End  =  trailer.length();  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  trailer.length();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  trailer.length();	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
6	[BUG]  [BUGGY]  end  =  TrailerUtils.length();  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerUtils.length();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerUtils.length();	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
7	[BUG]  [BUGGY]  end  -=  trailer.length();  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length();	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
8	[BUG]  [BUGGY]  end  =  TrailerUtils.length  -  2;  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerUtils.length  -  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerUtils.length  -  2;	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
9	[BUG]  [BUGGY]  start  =  trailer.length();  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  trailer.length();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  trailer.length();	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
10	[BUG]  [BUGGY]  end  -=  trailerLength  +  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerLength  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerLength  +  1;	  end    -=    trailerLength;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
11	[BUG]  [BUGGY]  end  -=  trailerLength  -  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerLength  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerLength  -  1;	  end    -=    trailerLength;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
12	[BUG]  [BUGGY]  end  -=  trailerLength  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerLength  *  BYTE_MASK;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerLength  *  BYTE_MASK;	  end    -=    trailerLength;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
13	[BUG]  [BUGGY]  end  -=  trailerLength  +  2;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerLength  +  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerLength  +  2;	  end    -=    trailerLength;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
14	[BUG]  [BUGGY]  start  =  trailer.length;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  trailer.length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  trailer.length;	  start    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
15	[BUG]  [BUGGY]  start  =  trailer.length  /  2;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  trailer.length  /  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  trailer.length  /  2;	  start    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
16	[BUG]  [BUGGY]  start  =  trailer.length  -  4;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  trailer.length  -  4;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  trailer.length  -  4;	  start    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
17	[BUG]  [BUGGY]  start  =  trailer.length  -  3;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  trailer.length  -  3;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  trailer.length  -  3;	  start    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
18	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
19	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().interrupt();	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
20	[BUG]  [BUGGY]  Thread.currentThread().getContextClass().getName())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().getContextClass().getName())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().getContextClass().getName())  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
21	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().setContextClassLoader(getClass().getClassLoader());	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
22	[BUG]  [BUGGY]  allowNull(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNull(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNull(trailer)  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
23	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportAndClearBuffer(trailer);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reportAndClearBuffer(trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().getContextClassLoader().reportAndClearBuffer(trailer);	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
24	[BUG]  [BUGGY]  Thread.currentThread().getContextClass().getName())  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().getContextClass().getName())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().getContextClass().getName())  {  throw  new  IllegalArgumentException( " ");	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
25	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8  ||  trailer  ==  DEFAULT_ENCODING;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerEncoding.UTF8  ||  trailer  ==  DEFAULT_ENCODING;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.UTF8  ||  trailer  ==  DEFAULT_ENCODING;	  end    =    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
26	[BUG]  [BUGGY]  End  =  TrailerEncoding.UTF8;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  TrailerEncoding.UTF8;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  TrailerEncoding.UTF8;	  end    =    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
27	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8  -  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerEncoding.UTF8  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.UTF8  -  1;	  end    =    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
28	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8  +  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerEncoding.UTF8  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.UTF8  +  1;	  end    =    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
29	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8  ||  trailer  =='';  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerEncoding.UTF8  ||  trailer  =='';  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.UTF8  ||  trailer  =='';	  end    =    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
30	[BUG]  [BUGGY]  End  =  trailer.length  -  2;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  trailer.length  -  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  trailer.length  -  2;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  End  =  trailer.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  trailer.length  -  1  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  trailer.length  -  1  +  1;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
32	[BUG]  [BUGGY]  End  =  trailer.length  /  1;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  trailer.length  /  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  trailer.length  /  1;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
33	[BUG]  [BUGGY]  End  =  trailer.length  -  3;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  trailer.length  -  3;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  trailer.length  -  3;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  End  =  trailer.length;  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  trailer.length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  trailer.length;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
35	[BUG]  [BUGGY]  End  =  trailer.length  -  4;  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  trailer.length  -  4;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  trailer.length  -  4;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
36	[BUG]  [BUGGY]  allowNonLocalSide(trailer))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNonLocalSide(trailer))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNonLocalSide(trailer))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
37	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNonLocalFunction(length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNonLocalFunction(length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
38	[BUG]  [BUGGY]  allowNull(trailer))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNull(trailer))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNull(trailer))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
39	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportError( "Failed  to  parse  trailer: "  +  trailer);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reportError( "Failed  to  parse  trailer: "  +  trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().getContextClassLoader().reportError( "Failed  to  parse  trailer: "  +  trailer);	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
40	[BUG]  [BUGGY]  end  =  trailer.length  /  1  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  /  1  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  1  +  1;	  end    =    trailer.length    -    1    +    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
41	[BUG]  [BUGGY]  end  =  trailer.length  *  2  +  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  *  2  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  *  2  +  1;	  end    =    trailer.length    -    1    +    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
42	[BUG]  [BUGGY]  end  =  trailer.length  *  1  +  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  *  1  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  *  1  +  1;	  end    =    trailer.length    -    1    +    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
43	[BUG]  [BUGGY]  end  -=  trailerSize  +  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerSize  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerSize  +  1;	  end    -=    trailerSize;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
44	[BUG]  [BUGGY]  end  -=  trailerSize  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerSize  *  BYTE_MASK;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerSize  *  BYTE_MASK;	  end    -=    trailerSize;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
45	[BUG]  [BUGGY]  end  -=  trailerSize  -  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerSize  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerSize  -  1;	  end    -=    trailerSize;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
46	[BUG]  [BUGGY]  end  -=  trailerSize  +  2;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerSize  +  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerSize  +  2;	  end    -=    trailerSize;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
47	[BUG]  [BUGGY]  end  -=  trailer.length  *  4;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  *  4;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  *  4;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
48	[BUG]  [BUGGY]  end  -=  trailer.length  *  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  *  BYTE_MASK  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  *  BYTE_MASK  +  1;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
49	[BUG]  [BUGGY]  end  -=  trailer.length  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  /  BYTE_MASK;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  /  BYTE_MASK;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
50	[BUG]  [BUGGY]  end  -=  trailer.length  *  3;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  *  3;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  *  3;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
51	[BUG]  [BUGGY]  end  -=  trailer.length  *  5;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  *  5;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  *  5;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
52	[BUG]  [BUGGY]  end  =  trailer.length  /  4;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  /  4;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  4;	  end    =    trailer.length    /    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
53	[BUG]  [BUGGY]  end  =  trailer.length  *  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  *  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  *  1;	  end    =    trailer.length    /    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
54	[BUG]  [BUGGY]  end  =  trailer.length  /  3;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  /  3;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  3;	  end    =    trailer.length    /    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
55	[BUG]  [BUGGY]  End  =  trailer.length  /  2;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  trailer.length  /  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  trailer.length  /  2;	  end    =    trailer.length    /    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
56	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
57	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ".);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
58	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( ". ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
59	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
60	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( ", ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( ", ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
61	[BUG]  [BUGGY]  end  =  trailer  -  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer  -  1;	  end    =    length    -    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  end  =  buffer.length  -  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  buffer.length  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  buffer.length  -  1;	  end    =    length    -    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
63	[BUG]  [BUGGY]  end  =  length  -  1  +  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  length  -  1  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  length  -  1  +  1;	  end    =    length    -    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
64	[BUG]  [BUGGY]  end  =  length  -  2;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  length  -  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  length  -  2;	  end    =    length    -    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
65	[BUG]  [BUGGY]  end  =  2;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  2;	  end    =    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  start,  length);  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  start,  length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  trailer,  start,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(trailer,  offset,  buffer,  start,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
69	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
70	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
71	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
72	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  start,  buffer,  offset,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
73	[BUG]  [BUGGY]  end  -=  trailer  +  1;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer  +  1;	  end    -=    length    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
74	[BUG]  [BUGGY]  end  -=  length  +  2;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  length  +  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  length  +  2;	  end    -=    length    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
75	[BUG]  [BUGGY]  end  -=  buffer.length  +  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  buffer.length  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  buffer.length  +  1;	  end    -=    length    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
76	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8(trailer);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerEncoding.UTF8(trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.UTF8(trailer);	  end    =    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
77	[BUG]  [BUGGY]  End  =  TrailerEncoding.UTF8);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  TrailerEncoding.UTF8);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  TrailerEncoding.UTF8);	  end    =    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
78	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8  +  trailer.length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerEncoding.UTF8  +  trailer.length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.UTF8  +  trailer.length;	  end    =    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
79	[BUG]  [BUGGY]  end  -=  trailer.length  /  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  /  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  /  1;	  end    -=    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
80	[BUG]  [BUGGY]  end  -=  trailer.length  *  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  *  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  *  1;	  end    -=    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
81	[BUG]  [BUGGY]  end  -=  trailer.length  +  3;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  +  3;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  +  3;	  end    -=    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
82	[BUG]  [BUGGY]  start  =  trailer.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  trailer.length  -  1  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  trailer.length  -  1  +  1;	  start    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
83	[BUG]  [BUGGY]  start  =  buffer.length  -  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  buffer.length  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  buffer.length  -  1;	  start    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
84	[BUG]  [BUGGY]  start  =  trailer.length  /  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  trailer.length  /  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  trailer.length  /  1;	  start    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
85	[BUG]  [BUGGY]  start  =  trailer.length  -  1L;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  trailer.length  -  1L;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  trailer.length  -  1L;	  start    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
86	[BUG]  [BUGGY]  End  -=  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  trailer.length  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  trailer.length  -  1;	  End    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
87	[BUG]  [BUGGY]  End  -=  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  trailer.length  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  trailer.length  +  1;	  End    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
88	[BUG]  [BUGGY]  End  -=  trailer.length  -  2;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  trailer.length  -  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  trailer.length  -  2;	  End    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
89	[BUG]  [BUGGY]  End  -=  trailer.length  *  2;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  trailer.length  *  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  trailer.length  *  2;	  End    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
90	[BUG]  [BUGGY]  End  -=  trailer.length  +  2;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  trailer.length  +  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  trailer.length  +  2;	  End    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
91	[BUG]  [BUGGY]  end  -=  trailerLimit;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerLimit;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerLimit;	  end    -=    loader;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
92	[BUG]  [BUGGY]  End  -=  trailer;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  trailer;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  trailer;	  end    -=    loader;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
93	[BUG]  [BUGGY]  allowNull(trailer);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNull(trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNull(trailer);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
94	[BUG]  [BUGGY]  allowNonLocalFunction(trailer);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNonLocalFunction(trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNonLocalFunction(trailer);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
95	[BUG]  [BUGGY]  allowMissing(trailer);  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowMissing(trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowMissing(trailer);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
96	[BUG]  [BUGGY]  allowMissingClass(trailer))  {  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowMissingClass(trailer))  {  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowMissingClass(trailer))  {	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
97	[BUG]  [BUGGY]  allowUnsupportedOperation();  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowUnsupportedOperation();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowUnsupportedOperation();	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
98	[BUG]  [BUGGY]  allowMissingClass(trailer);  [CE]  <identifier>  expected  [FE]                                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowMissingClass(trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowMissingClass(trailer);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
99	[BUG]  [BUGGY]  end  =  container.length();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  container.length();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  container.length();	  end    =    trailer.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
100	[BUG]  [BUGGY]  end  =  buffer.length();  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  buffer.length();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  buffer.length();	  end    =    trailer.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
101	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
102	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
103	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
104	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  Trailer  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  Trailer  trailer  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  Trailer  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
105	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  Trailer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  Trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  Trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
106	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  container[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
107	[BUG]  [BUGGY]  bucket  ==  null  ||  start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  bucket  ==  null  ||  start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	bucket  ==  null  ||  start  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
108	[BUG]  [BUGGY]  bucket!=  null  ||  start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  bucket!=  null  ||  start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	bucket!=  null  ||  start  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
109	[BUG]  [BUGGY]  bucket  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  bucket  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	bucket  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
110	[BUG]  [BUGGY]  Thread.currentThread().setCurrentLocation(trailer);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().setCurrentLocation(trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().setCurrentLocation(trailer);	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
111	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(trailer,  offset,  length));  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(trailer,  offset,  length));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().setContext(new  ZipEncoding(trailer,  offset,  length));	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
112	[BUG]  [BUGGY]  end  -=  5;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  5;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  5;	  end    -=    4;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
113	[BUG]  [BUGGY]  end  =  trailer.length  /  1L;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  /  1L;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  1L;	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
114	[BUG]  [BUGGY]  end  =  trailer.length  -  1];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  -  1];  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  1];	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
115	[BUG]  [BUGGY]  end  =  trailer.length  -  128;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  -  128;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  128;	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
117	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  start,  trailer,  0,  length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  start,  trailer,  0,  length);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
118	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  0,  trailer,  0,  length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  0,  trailer,  0,  length);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
119	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(trailer,  offset,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(trailer,  offset,  trailer,  0,  length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(trailer,  offset,  trailer,  0,  length);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
120	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
121	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
122	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
123	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  Trailer  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  Trailer  trailer  =  buffer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  Trailer  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
124	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i].length;  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i].length;  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i].length;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
125	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
126	[BUG]  [BUGGY]  ||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  'n'  &&  trailer[i]!=  buffer[i]))  {  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  'n'  &&  trailer[i]!=  buffer[i]))  {  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  'n'  &&  trailer[i]!=  buffer[i]))  {	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
127	[BUG]  [BUGGY]  ||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  '-'  &&  trailer[i]!=  '+'))  {  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  '-'  &&  trailer[i]!=  '+'))  {  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  '-'  &&  trailer[i]!=  '+'))  {	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
128	[BUG]  [BUGGY]  ||(trailer  ==  '['  &&  trailer.charAt(start  -  1)!=  ']'))  {  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  '['  &&  trailer.charAt(start  -  1)!=  ']'))  {  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  '['  &&  trailer.charAt(start  -  1)!=  ']'))  {	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
129	[BUG]  [BUGGY]  ||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  'n'  &&  trailer[i]!=  end))  {  [CE]  <identifier>  expected  [FE]                                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  'n'  &&  trailer[i]!=  end))  {  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  'n'  &&  trailer[i]!=  end))  {	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
130	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
131	[BUG]  [BUGGY]  end  =  trailer.length()  *  2  +  1;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length()  *  2  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  *  2  +  1;	  end    =    trailer.length()    *    2;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
132	[BUG]  [BUGGY]  end  -=  buffer.length;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  buffer.length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  buffer.length;	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
133	[BUG]  [BUGGY]  End  end  =  trailer.length;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  end  =  trailer.length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  end  =  trailer.length;	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
134	[BUG]  [BUGGY]  end  =  buffer.length  -  2;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  buffer.length  -  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  buffer.length  -  2;	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
135	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
136	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
137	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
138	[BUG]  [BUGGY]  ||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  ']'  &&  trailer[i]!=  null))  {  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  ']'  &&  trailer[i]!=  null))  {  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  ']'  &&  trailer[i]!=  null))  {	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
139	[BUG]  [BUGGY]  ||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  '-'  &&  trailer[i]!=  end))  {  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  '-'  &&  trailer[i]!=  end))  {  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer  ==  '-'  &&  trailer[i]!=  end))  {	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
140	[BUG]  [BUGGY]  ||(trailer  ==  '['  &&  trailer!=  ']'))  {  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  '['  &&  trailer!=  ']'))  {  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  '['  &&  trailer!=  ']'))  {	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
141	[BUG]  [BUGGY]  ||(trailer  ==  '['  &&  trailer!=  ']'));  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  '['  &&  trailer!=  ']'));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  '['  &&  trailer!=  ']'));	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
142	[BUG]  [BUGGY]  ||(trailer  ==  'n'  &&  trailer!=  'r'))  {  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  'n'  &&  trailer!=  'r'))  {  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  'n'  &&  trailer!=  'r'))  {	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
143	[BUG]  [BUGGY]  ||(trailer  ==  '['  &&  trailer!=  'n'));  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  '['  &&  trailer!=  'n'));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  '['  &&  trailer!=  'n'));	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
144	[BUG]  [BUGGY]  ||(trailer  ==  '-'  &&  trailer!=  '+'));  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  '-'  &&  trailer!=  '+'));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  '-'  &&  trailer!=  '+'));	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
145	[BUG]  [BUGGY]  ||(trailer  ==  'n'  &&  trailer!=  'r'));  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  'n'  &&  trailer!=  'r'));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  'n'  &&  trailer!=  'r'));	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
146	[BUG]  [BUGGY]  end  -=  3  +  1;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  3  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  3  +  1;	  end    -=    2    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
147	[BUG]  [BUGGY]  end  -=  4  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  4  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  4  +  1;	  end    -=    2    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
148	[BUG]  [BUGGY]  End  -=  2;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  2;	  end    -=    2    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
149	[BUG]  [BUGGY]  end  -=  trailerOffset;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerOffset;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerOffset;	  end    -=    loaderOffset;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
150	[BUG]  [BUGGY]  end  -=  loaderOffset  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  loaderOffset  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  loaderOffset  +  1;	  end    -=    loaderOffset;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
151	[BUG]  [BUGGY]  end  -=  loaderOffset  +  2;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  loaderOffset  +  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  loaderOffset  +  2;	  end    -=    loaderOffset;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
152	[BUG]  [BUGGY]  end  =  trailer.length  -  1  +  length;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  -  1  +  length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  1  +  length;	  end    =    trailer.length    -    1    +    start;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
153	[BUG]  [BUGGY]  end  =  trailer.length  -  1  +  offset;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  -  1  +  offset;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  1  +  offset;	  end    =    trailer.length    -    1    +    start;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
154	[BUG]  [BUGGY]  end  =  trailer.length  -  1  +  start  +  length;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  -  1  +  start  +  length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  1  +  start  +  length;	  end    =    trailer.length    -    1    +    start;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
155	[BUG]  [BUGGY]  end  =  trailer.length  /  1  +  start;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  /  1  +  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  1  +  start;	  end    =    trailer.length    -    1    +    start;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
156	[BUG]  [BUGGY]  end  =  trailer.length  -  start  +  length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  -  start  +  length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  start  +  length;	  end    =    trailer.length    -    1    +    start;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
157	[BUG]  [BUGGY]  end  =  trailer.length  -  1  +  width;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  -  1  +  width;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  1  +  width;	  end    =    trailer.length    -    1    +    start;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
158	[BUG]  [BUGGY]  end  =  trailer.length  -  start  +  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  -  start  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  start  +  1;	  end    =    trailer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
159	[BUG]  [BUGGY]  end  =  trailer.length  -  offset;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  -  offset;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  offset;	  end    =    trailer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
160	[BUG]  [BUGGY]  end  =  trailer.length  /  start;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  /  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  start;	  end    =    trailer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
161	[BUG]  [BUGGY]  end  =  trailer.length  -  length;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  -  length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  length;	  end    =    trailer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
162	[BUG]  [BUGGY]  end  =  trailer.length  -  10;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  -  10;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  10;	  end    =    trailer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
163	[BUG]  [BUGGY]  end  -=  TrailerEncoding.US_ASCII;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.US_ASCII;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.US_ASCII;	  end    -=    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
164	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8  +  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.UTF8  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8  +  1;	  end    -=    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
165	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  ==  null;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  ==  null;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8  ||  trailer  ==  null;	  end    -=    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
166	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  ==  'n';  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  ==  'n';  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8  ||  trailer  ==  'n';	  end    -=    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
167	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer!=  null;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer!=  null;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8  ||  trailer!=  null;	  end    -=    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
168	[BUG]  [BUGGY]  end  =  trailer.length  +  2;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  +  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  +  2;	  end    =    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
169	[BUG]  [BUGGY]  allowNull(trailer))  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNull(trailer))  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNull(trailer))  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
170	[BUG]  [BUGGY]  allowNull(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNull(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNull(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
171	[BUG]  [BUGGY]  allowNestedChar('  ')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNestedChar('  ')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNestedChar('  ')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
172	[BUG]  [BUGGY]  allowNestedChar('  ')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNestedChar('  ')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNestedChar('  ')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
173	[BUG]  [BUGGY]  allowNull(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNull(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNull(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
174	[BUG]  [BUGGY]  allowNull(trailer))  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNull(trailer))  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNull(trailer))  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
175	[BUG]  [BUGGY]  end  =(start  <  0)?  0  :  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(start  <  0)?  0  :  trailer;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(start  <  0)?  0  :  trailer;	  end    =(start    <    0)?    0    :    start;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
176	[BUG]  [BUGGY]  end  =(trailer  <  0)?  0  :  start;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  <  0)?  0  :  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  <  0)?  0  :  start;	  end    =(start    <    0)?    0    :    start;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
177	[BUG]  [BUGGY]  end  =(end  <  0)?  0  :  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(end  <  0)?  0  :  trailer;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(end  <  0)?  0  :  trailer;	  end    =(start    <    0)?    0    :    start;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
178	[BUG]  [BUGGY]  end  =(start  <  0)?  0  :  trailer.length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(start  <  0)?  0  :  trailer.length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(start  <  0)?  0  :  trailer.length;	  end    =(start    <    0)?    0    :    start;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
179	[BUG]  [BUGGY]  end  =(start  <  0)?  1  :  start;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(start  <  0)?  1  :  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(start  <  0)?  1  :  start;	  end    =(start    <    0)?    0    :    start;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
180	[BUG]  [BUGGY]  end  =(end  <  0)?  0  :  trailer.length;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(end  <  0)?  0  :  trailer.length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(end  <  0)?  0  :  trailer.length;	  end    =(start    <    0)?    0    :    start;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
181	[BUG]  [BUGGY]  end  =(length  <  0)?  0  :  trailer;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(length  <  0)?  0  :  trailer;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(length  <  0)?  0  :  trailer;	  end    =(start    <    0)?    0    :    start;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
182	[BUG]  [BUGGY]  end  =  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  buffer[end  -  1];  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  buffer[end  -  1];	  end    =    trailer;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
183	[BUG]  [BUGGY]  end  =  buffer[start  -  1];  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  buffer[start  -  1];  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  buffer[start  -  1];	  end    =    trailer;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
184	[BUG]  [BUGGY]  end  =  length;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  length;	  end    =    trailer;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
185	[BUG]  [BUGGY]  end  -=  loader.length;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  loader.length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  loader.length;	  end    -=    trailer;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
186	[BUG]  [BUGGY]  end  =  trailer.length  /  2  +  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  /  2  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  2  +  1;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
187	[BUG]  [BUGGY]  end  =  trailer.length  /  2L;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  /  2L;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  2L;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
188	[BUG]  [BUGGY]  end  =  trailer.length  /  2  *  2;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  /  2  *  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  2  *  2;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
189	[BUG]  [BUGGY]  end  =  trailer.length()  /  2  +  1;  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length()  /  2  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  /  2  +  1;	  end    =    trailer.length()    /    2;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
190	[BUG]  [BUGGY]  end  -=  6;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  6;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  6;	  end    -=    8;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
191	[BUG]  [BUGGY]  end  -=  trailerByte.length  -  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerByte.length  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerByte.length  -  1;	  end    -=    trailerByte.length;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
192	[BUG]  [BUGGY]  end  -=  trailerByte.length  +  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerByte.length  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerByte.length  +  1;	  end    -=    trailerByte.length;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
193	[BUG]  [BUGGY]  end  -=  trailerByte.length  -  2;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerByte.length  -  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerByte.length  -  2;	  end    -=    trailerByte.length;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
194	[BUG]  [BUGGY]  end  -=  trailerByte.length  *  2;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerByte.length  *  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerByte.length  *  2;	  end    -=    trailerByte.length;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
195	[BUG]  [BUGGY]  end  -=  trailerByte.length  +  2;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerByte.length  +  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerByte.length  +  2;	  end    -=    trailerByte.length;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
196	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  '-')?  -1  :  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  '-')?  -1  :  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  ==  '-')?  -1  :  1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
197	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  '-')?  1  :  0;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  '-')?  1  :  0;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  ==  '-')?  1  :  0;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
198	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  '-')?  -1  :  0;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  '-')?  -1  :  0;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  ==  '-')?  -1  :  0;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
199	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  ':')?  -1  :  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  ':')?  -1  :  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  ==  ':')?  -1  :  1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
200	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  'n')?  -1  :  1;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  'n')?  -1  :  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  ==  'n')?  -1  :  1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
201	[BUG]  [BUGGY]  end  =  Trailer.length();  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  Trailer.length();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  Trailer.length();	  end    =    trailer.length()    +    2;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
202	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
203	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
204	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
205	[BUG]  [BUGGY]  ||(trailer  ==''  &&  trailer.length  >  0)||(trailer!=  end  &&  trailer[i]!=  '-'))  {  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==''  &&  trailer.length  >  0)||(trailer!=  end  &&  trailer[i]!=  '-'))  {  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==''  &&  trailer.length  >  0)||(trailer!=  end  &&  trailer[i]!=  '-'))  {	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
206	[BUG]  [BUGGY]  ||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer!=  end  &&  trailer[i]!=  '-'))  {  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer!=  end  &&  trailer[i]!=  '-'))  {  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  '['  &&  trailer.length  >  0)||(trailer!=  end  &&  trailer[i]!=  '-'))  {	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
207	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  ==  ZipEncoding.DEFAULT_ENCODING)  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  ==  ZipEncoding.DEFAULT_ENCODING)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8  ||  trailer  ==  ZipEncoding.DEFAULT_ENCODING)  {  throw  new  IllegalArgumentException( " ");	  end    -=    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
208	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  ==  ZipEncoding.DEFAULT_ENCODING;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  ==  ZipEncoding.DEFAULT_ENCODING;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8  ||  trailer  ==  ZipEncoding.DEFAULT_ENCODING;	  end    -=    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
209	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");	  end    -=    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
210	[BUG]  [BUGGY]  end  -=  trailer.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  -  1  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  -  1  +  1;	  end    -=    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
211	[BUG]  [BUGGY]  end  -=  trailer.length  -  3;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  -  3;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  -  3;	  end    -=    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
212	[BUG]  [BUGGY]  end  -=  trailer.length  /  2;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  /  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  /  2;	  end    -=    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
213	[BUG]  [BUGGY]  allowNull(trailer))  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNull(trailer))  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNull(trailer))  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
214	[BUG]  [BUGGY]  allowNestedChar(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNestedChar(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNestedChar(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
215	[BUG]  [BUGGY]  allowNull(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNull(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNull(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
216	[BUG]  [BUGGY]  allowNegated(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNegated(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNegated(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
217	[BUG]  [BUGGY]  allowNestedChar(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,''));  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNestedChar(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,''));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNestedChar(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,''));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
218	[BUG]  [BUGGY]  allowNestedChar(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNestedChar(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNestedChar(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
219	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  '-')?  0  :  0;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  '-')?  0  :  0;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  ==  '-')?  0  :  0;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
220	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  '-')?  0L  :  0;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  '-')?  0L  :  0;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  ==  '-')?  0L  :  0;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
221	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  =='')?  0L  :  0;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  =='')?  0L  :  0;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  =='')?  0L  :  0;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
222	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  'n')?  0  :  0;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  'n')?  0  :  0;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  ==  'n')?  0  :  0;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
223	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  =='')?  0  :  0;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  =='')?  0  :  0;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  =='')?  0  :  0;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
224	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  'n')?  0L  :  0;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  'n')?  0L  :  0;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  ==  'n')?  0L  :  0;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
225	[BUG]  [BUGGY]  ||(trailer  ==  0  &&  trailer!=  '.'))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  0  &&  trailer!=  '.'))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  0  &&  trailer!=  '.'))  {  throw  new  IllegalArgumentException( " ");	  ||(trailer    ==    0    &&    trailer!=''))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
226	[BUG]  [BUGGY]  ||(trailer  ==  0  &&  trailer!=  '/'))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  0  &&  trailer!=  '/'))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  0  &&  trailer!=  '/'))  {  throw  new  IllegalArgumentException( " ");	  ||(trailer    ==    0    &&    trailer!=''))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
227	[BUG]  [BUGGY]  ||(trailer  ==  0  &&  trailer!=  'n'))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  0  &&  trailer!=  'n'))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  0  &&  trailer!=  'n'))  {  throw  new  IllegalArgumentException( " ");	  ||(trailer    ==    0    &&    trailer!=''))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
228	[BUG]  [BUGGY]  ||(trailer  ==  0  &&  trailer!=  '-'))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  0  &&  trailer!=  '-'))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  0  &&  trailer!=  '-'))  {  throw  new  IllegalArgumentException( " ");	  ||(trailer    ==    0    &&    trailer!=''))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
229	[BUG]  [BUGGY]  ||(trailer  ==  0  &&  trailer!=  '$'))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  0  &&  trailer!=  '$'))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  0  &&  trailer!=  '$'))  {  throw  new  IllegalArgumentException( " ");	  ||(trailer    ==    0    &&    trailer!=''))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
230	[BUG]  [BUGGY]  ||(trailer  ==  0  &&  trailer!=  '_'))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  0  &&  trailer!=  '_'))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  0  &&  trailer!=  '_'))  {  throw  new  IllegalArgumentException( " ");	  ||(trailer    ==    0    &&    trailer!=''))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
231	[BUG]  [BUGGY]  end  -=  trailerByte  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerByte  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerByte  +  1;	  end    -=    trailerByte;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
232	[BUG]  [BUGGY]  end  -=  trailerByte  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerByte  *  BYTE_MASK;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerByte  *  BYTE_MASK;	  end    -=    trailerByte;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
233	[BUG]  [BUGGY]  end  -=  trailerByte  +  2;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerByte  +  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerByte  +  2;	  end    -=    trailerByte;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
234	[BUG]  [BUGGY]  end  -=  trailerByte  +  length;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerByte  +  length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerByte  +  length;	  end    -=    trailerByte;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
235	[BUG]  [BUGGY]  End  -=  trailerByte  +  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  trailerByte  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  trailerByte  +  1;	  end    -=    trailerByte;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
236	[BUG]  [BUGGY]  allowNumberOctal(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNumberOctal(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNumberOctal(trailer)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
237	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  trailer));  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  trailer));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  trailer));	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
238	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length));  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length));	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
239	[BUG]  [BUGGY]  end  -=  trailer.length  *  2  +  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  *  2  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  *  2  +  1;	  end    -=    trailer.length    *    2;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
240	[BUG]  [BUGGY]  end  -=  trailer.length  *  2  +  length;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  *  2  +  length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  *  2  +  length;	  end    -=    trailer.length    *    2;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
241	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
242	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  start,  end);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  start,  end);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  trailer,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
243	[BUG]  [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  end);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(trailer,  offset,  buffer,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
244	[BUG]  [BUGGY]  System.arraycopy(trailer,  0,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(trailer,  0,  buffer,  start,  end);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(trailer,  0,  buffer,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
245	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  start);  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  start);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  start);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
246	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  end);  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  end);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  start,  buffer,  offset,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
247	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
248	[BUG]  [BUGGY]  end  -=  length  -  2;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  length  -  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  length  -  2;	  end    -=    length    -    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
249	[BUG]  [BUGGY]  end  -=  buffer.length  -  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  buffer.length  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  buffer.length  -  1;	  end    -=    length    -    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
250	[BUG]  [BUGGY]  end  -=  length  -  1  +  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  length  -  1  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  length  -  1  +  1;	  end    -=    length    -    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
251	[BUG]  [BUGGY]  end  -=  start  -  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  start  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  start  -  1;	  end    -=    length    -    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
252	[BUG]  [BUGGY]  End  -=  trailer  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  trailer  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  trailer  +  1;	  end    -=    start    +    1;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
253	[BUG]  [BUGGY]  end  -=  start  +  2;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  start  +  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  start  +  2;	  end    -=    start    +    1;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
254	[BUG]  [BUGGY]  end  -=  loader  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  loader  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  loader  +  1;	  end    -=    start    +    1;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
255	[BUG]  [BUGGY]  end  -=  start  +  3;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  start  +  3;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  start  +  3;	  end    -=    start    +    1;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
256	[BUG]  [BUGGY]  Thread.currentThread().getContextClass().getSimpleName())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().getContextClass().getSimpleName())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().getContextClass().getSimpleName())  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
257	[BUG]  [BUGGY]  Thread.currentThread().getContextClass().getName()).throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().getContextClass().getName()).throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().getContextClass().getName()).throw  new  IllegalArgumentException( " ");	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
258	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length));  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length));	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
259	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length  -  start));  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length  -  start));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length  -  start));	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
260	[BUG]  [BUGGY]  end  =  trailer.length  /  2  +  start;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  /  2  +  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  2  +  start;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
261	[BUG]  [BUGGY]  end  =  trailer.length  /  2  +  length;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  /  2  +  length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  2  +  length;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
262	[BUG]  [BUGGY]  cast(buffer,  offset,  length,  trailer,'');  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  cast(buffer,  offset,  length,  trailer,'');  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	cast(buffer,  offset,  length,  trailer,'');	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
263	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')?  -1  :  0;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')?  -1  :  0;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')?  -1  :  0;	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
264	[BUG]  [BUGGY]  cast(buffer,  offset,  length,  start,'');  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  cast(buffer,  offset,  length,  start,'');  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	cast(buffer,  offset,  length,  start,'');	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
265	[BUG]  [BUGGY]  Thread.currentThread().setCurrentLocation(start);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().setCurrentLocation(start);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().setCurrentLocation(start);	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
266	[BUG]  [BUGGY]  cast(buffer,  offset,  length,  buffer,'');  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  cast(buffer,  offset,  length,  buffer,'');  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	cast(buffer,  offset,  length,  buffer,'');	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
267	[BUG]  [BUGGY]  end  =  trailer.trailer.length();  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.trailer.length();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.trailer.length();	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
268	[BUG]  [BUGGY]  end  -=  loader  -  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  loader  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  loader  -  1;	  end    -=    length    -    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
269	[BUG]  [BUGGY]  cast(new  ZipEncoding(buffer,  offset,  length,  buffer,''));  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  cast(new  ZipEncoding(buffer,  offset,  length,  buffer,''));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	cast(new  ZipEncoding(buffer,  offset,  length,  buffer,''));	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
270	[BUG]  [BUGGY]  cast(new  ZipEncoding(buffer,  offset,  length,  trailer,''));  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  cast(new  ZipEncoding(buffer,  offset,  length,  trailer,''));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	cast(new  ZipEncoding(buffer,  offset,  length,  trailer,''));	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
271	[BUG]  [BUGGY]  End  -=  start;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  start;	  End    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
272	[BUG]  [BUGGY]  End  -=  start.length;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  start.length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  start.length;	  End    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
273	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8_ARRAY;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.UTF8_ARRAY;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8_ARRAY;	  end    -=    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
274	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8  +  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.UTF8  +  trailer;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8  +  trailer;	  end    -=    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
275	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  start  >  trailer.length;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  start  >  trailer.length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8  ||  start  >  trailer.length;	  end    -=    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
276	[BUG]  [BUGGY]  start  =  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  trailer.length  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  trailer.length  +  1;	  end    =    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
277	[BUG]  [BUGGY]  cast(buffer,  offset,  length,  trailer,''));  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  cast(buffer,  offset,  length,  trailer,''));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	cast(buffer,  offset,  length,  trailer,''));	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
278	[BUG]  [BUGGY]  cast(buffer,  offset,  length,  buffer,  0,  0);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  cast(buffer,  offset,  length,  buffer,  0,  0);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	cast(buffer,  offset,  length,  buffer,  0,  0);	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
279	[BUG]  [BUGGY]  cast(buffer,  offset,  length,  buffer,  0,'');  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  cast(buffer,  offset,  length,  buffer,  0,'');  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	cast(buffer,  offset,  length,  buffer,  0,'');	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
280	[BUG]  [BUGGY]  end  =  start  -  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  start  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  start  -  1;	  end    =    length    -    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
281	[BUG]  [BUGGY]  end  =  loader  -  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  loader  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  loader  -  1;	  end    =    length    -    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
282	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  length);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
283	[BUG]  [BUGGY]  Iterator  <  Object>  end  =  exceptionMessage(buffer,  offset,  length,  start,  trailer);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Iterator  <  Object>  end  =  exceptionMessage(buffer,  offset,  length,  start,  trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Iterator  <  Object>  end  =  exceptionMessage(buffer,  offset,  length,  start,  trailer);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
284	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  1);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  1);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length  -  1);	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
285	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8  ||  start  >  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerEncoding.UTF8  ||  start  >  trailer.length  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.UTF8  ||  start  >  trailer.length  -  1;	  end    =    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
286	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8  +  trailer;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerEncoding.UTF8  +  trailer;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.UTF8  +  trailer;	  end    =    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
287	[BUG]  [BUGGY]  safeThan  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
288	[BUG]  [BUGGY]  safeThan  <  =  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
289	[BUG]  [BUGGY]  safeThan  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ".);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
290	[BUG]  [BUGGY]  safeThan  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( ". ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
291	[BUG]  [BUGGY]  end  =(start  <  0)?  0  :  start  +  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(start  <  0)?  0  :  start  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(start  <  0)?  0  :  start  +  1;	  end    =(start    <    0)?    0    :    start;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
292	[BUG]  [BUGGY]  end  =(end  <  0)?  0  :  start;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(end  <  0)?  0  :  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(end  <  0)?  0  :  start;	  end    =(start    <    0)?    0    :    start;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
293	[BUG]  [BUGGY]  end  -=  trailer.length  -  4;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  -  4;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  -  4;	  end    -=    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
294	[BUG]  [BUGGY]  start  =  trailer.length  -  2  +  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  trailer.length  -  2  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  trailer.length  -  2  +  1;	  start    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
295	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8_ARRAY;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerEncoding.UTF8_ARRAY;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.UTF8_ARRAY;	  end    =    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
296	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8  -  start;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerEncoding.UTF8  -  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.UTF8  -  start;	  end    =    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
297	[BUG]  [BUGGY]  start  =  TrailerEncoding.UTF8;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  TrailerEncoding.UTF8;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  TrailerEncoding.UTF8;	  end    =    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
298	[BUG]  [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNonEmpty(start)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
299	[BUG]  [BUGGY]  allowMissing(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowMissing(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowMissing(trailer)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
300	[BUG]  [BUGGY]  allowNonEmpty(length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNonEmpty(length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNonEmpty(length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
301	[BUG]  [BUGGY]  allowNonLocalFunction(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNonLocalFunction(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNonLocalFunction(trailer)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
302	[BUG]  [BUGGY]  allowMissing(length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowMissing(length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowMissing(length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
303	[BUG]  [BUGGY]  end  =  trailer.length  -  1  +  start  +  2;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  -  1  +  start  +  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  1  +  start  +  2;	  end    =    trailer.length    -    1    +    start;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
304	[BUG]  [BUGGY]  end  =  this.trailer.length();  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  this.trailer.length();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  this.trailer.length();	  end    =    trailer.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
305	[BUG]  [BUGGY]  end  -=  trailer.length  *  2  +  4;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  *  2  +  4;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  *  2  +  4;	  end    -=    trailer.length    *    2;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
306	[BUG]  [BUGGY]  end  -=  2)  {  }  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  2)  {  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  2)  {  }	  end    -=    2    +    1;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
307	[BUG]  [BUGGY]  end  -  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -  1;	  end    =    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
308	[BUG]  [BUGGY]  End  =  0;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  0;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  0;	  end    =    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
309	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  'n')?  1  :  -1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  'n')?  1  :  -1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  ==  'n')?  1  :  -1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
310	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  '-')?  -1  :  -1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  '-')?  -1  :  -1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  ==  '-')?  -1  :  -1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
311	[BUG]  [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  'n')?  -1  :  -1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  ==''  ||  trailer  ==  'n')?  -1  :  -1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  ==''  ||  trailer  ==  'n')?  -1  :  -1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
312	[BUG]  [BUGGY]  start  =  this.trailer.length  -  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  this.trailer.length  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  this.trailer.length  -  1;	  start    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
313	[BUG]  [BUGGY]  start  =  length  -  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  length  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  length  -  1;	  start    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
314	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0))  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0))  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0))  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
315	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0  ||  end  >  buffer.length))  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0  ||  end  >  buffer.length))  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0  ||  end  >  buffer.length))  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
316	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0  ||  end  >  buffer.length()))  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0  ||  end  >  buffer.length()))  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0  ||  end  >  buffer.length()))  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
317	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0))  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0))  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0))  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
318	[BUG]  [BUGGY]  start  -=  trailer.length  +  2;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  -=  trailer.length  +  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  -=  trailer.length  +  2;	  end    -=    trailer.length    +    2;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
319	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  buffer,  start,  end));  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  buffer,  start,  end));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  buffer,  start,  end));	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
320	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  buffer,  end));  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  buffer,  end));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  buffer,  end));	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
321	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  buffer,  0));  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  buffer,  0));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	Thread.currentThread().setContext(new  ZipEncoding(buffer,  offset,  length,  buffer,  0));	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
322	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
323	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
324	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
325	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  container[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
326	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  Trailer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  Trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  Trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
327	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  null;  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  null;  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  null;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
328	[BUG]  [BUGGY]  End  =  trailer.length  -  1  +  start;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  trailer.length  -  1  +  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  trailer.length  -  1  +  start;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
329	[BUG]  [BUGGY]  End  =  trailer.length  -  1L;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  trailer.length  -  1L;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  trailer.length  -  1L;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
330	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
331	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
332	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
333	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
334	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  null;  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  null;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
335	[BUG]  [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  newByte[end  -  1];  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  newByte[end  -  1];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	safeThan  <  =  (trailer  =='')&&(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  newByte[end  -  1];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
336	[BUG]  [BUGGY]  end  =  buffer.length  -  start;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  buffer.length  -  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  buffer.length  -  start;	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
337	[BUG]  [BUGGY]  end  =  buffer.length  +  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  buffer.length  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  buffer.length  +  1;	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
338	[BUG]  [BUGGY]  allowNegatives(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNegatives(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNegatives(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
339	[BUG]  [BUGGY]  allowNegate(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNegate(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNegate(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
340	[BUG]  [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
341	[BUG]  [BUGGY]  allowNegatives(false)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNegatives(false)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNegatives(false)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
342	[BUG]  [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,''));  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,''));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,''));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
343	[BUG]  [BUGGY]  end  -=  length  /  1;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  length  /  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  length  /  1;	  end    -=    length    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
344	[BUG]  [BUGGY]  end  -=  load  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  load  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  load  +  1;	  end    -=    length    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
345	[BUG]  [BUGGY]  end  =  trailer.length  *  2  -  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  *  2  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  *  2  -  1;	  end    =    trailer.length    *    2;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
346	[BUG]  [BUGGY]  end  =  trailer.length  *  2  +  start;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  *  2  +  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  *  2  +  start;	  end    =    trailer.length    *    2;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
347	[BUG]  [BUGGY]  end  =  trailer.length  *  2  +  length;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  *  2  +  length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  *  2  +  length;	  end    =    trailer.length    *    2;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
348	[BUG]  [BUGGY]  end  =  start  -  trailer.length;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  start  -  trailer.length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  start  -  trailer.length;	  end    =    trailer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
349	[BUG]  [BUGGY]  allowNegate(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNegate(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNegate(trailer)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
350	[BUG]  [BUGGY]  allowNonLocalFast(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNonLocalFast(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNonLocalFast(start)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
351	[BUG]  [BUGGY]  allowNegate(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNegate(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNegate(start)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
352	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  1);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  1);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
353	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  start);  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  start);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end  -  start);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
354	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  +  1);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  +  1);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end  +  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
355	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  end);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  0,  buffer,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
356	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  start,  end);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  start,  buffer,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
357	[BUG]  [BUGGY]  end  -=  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  FALLBACK_ENCODING;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  FALLBACK_ENCODING;	  end    -=    trailer;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
358	[BUG]  [BUGGY]  end  =  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  BYTE_MASK;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  BYTE_MASK;	  end    =    trailer;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
359	[BUG]  [BUGGY]  end  =  getOffset();  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  getOffset();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  getOffset();	  end    =    trailer;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
360	[BUG]  [BUGGY]  end  =  start;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  start;	  end    =    trailer;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
361	[BUG]  [BUGGY]  end  =  0L  |  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  0L  |  BYTE_MASK;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  0L  |  BYTE_MASK;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
362	[BUG]  [BUGGY]  end  -=  0L;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  0L;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  0L;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
363	[BUG]  [BUGGY]  end  =  0L  +  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  0L  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  0L  +  1;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
364	[BUG]  [BUGGY]  end  =  0L  *  trailer.length;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  0L  *  trailer.length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  0L  *  trailer.length;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
365	[BUG]  [BUGGY]  end  -=  trailer.length);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length);	  end    -=    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
366	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  start  >  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  start  >  trailer.length  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8  ||  start  >  trailer.length  -  1;	  end    -=    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
367	[BUG]  [BUGGY]  end  =  trailer.length()  /  2L;  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length()  /  2L;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  /  2L;	  end    =    trailer.length()    /    2;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
368	[BUG]  [BUGGY]  ||(trailer  ==  0  &&  trailer!=  'e'))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  0  &&  trailer!=  'e'))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  0  &&  trailer!=  'e'))  {  throw  new  IllegalArgumentException( " ");	  ||(trailer    ==    0    &&    trailer!=''))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
369	[BUG]  [BUGGY]  ||(trailer  ==  0  &&  trailer  ==  '.'))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  0  &&  trailer  ==  '.'))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  0  &&  trailer  ==  '.'))  {  throw  new  IllegalArgumentException( " ");	  ||(trailer    ==    0    &&    trailer!=''))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
370	[BUG]  [BUGGY]  end  =  trailer.length  -  1L  +  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  -  1L  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  1L  +  1;	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
371	[BUG]  [BUGGY]  allowNegatives(false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNegatives(false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNegatives(false)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
372	[BUG]  [BUGGY]  allowNegatives(true)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNegatives(true)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNegatives(true)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
373	[BUG]  [BUGGY]  allowNegatives(length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNegatives(length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNegatives(length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
374	[BUG]  [BUGGY]  allowNull(reportUnsupportedOctalException.class))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNull(reportUnsupportedOctalException.class))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNull(reportUnsupportedOctalException.class))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
375	[BUG]  [BUGGY]  allowNegatives(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNegatives(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNegatives(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
376	[BUG]  [BUGGY]  allowNegate(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNegate(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNegate(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
377	[BUG]  [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
378	[BUG]  [BUGGY]  allowNegatives(false)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNegatives(false)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNegatives(false)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
379	[BUG]  [BUGGY]  allowNegatives(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length  -  1));  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowNegatives(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length  -  1));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowNegatives(trailer)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length  -  1));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
380	[BUG]  [BUGGY]  end  -=  trailer.length  *  8;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  *  8;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  *  8;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
381	[BUG]  [BUGGY]  end  -=  trailer.length  *  6;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length  *  6;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  *  6;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
382	[BUG]  [BUGGY]  end  -=  trailerLength  -  2;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerLength  -  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerLength  -  2;	  end    -=    trailerLength;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
383	[BUG]  [BUGGY]  end  -=  7;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  7;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  7;	  end    -=    8;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
384	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
385	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
386	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
387	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
388	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
389	[BUG]  [BUGGY]  start  =  TrailerEncoding.UTF8);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  =  TrailerEncoding.UTF8);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  TrailerEncoding.UTF8);	  end    =    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
390	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8  ||  trailer  =='');  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerEncoding.UTF8  ||  trailer  =='');  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.UTF8  ||  trailer  =='');	  end    =    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
391	[BUG]  [BUGGY]  end  =(trailer  <  0)?  0  :  trailer;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(trailer  <  0)?  0  :  trailer;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(trailer  <  0)?  0  :  trailer;	  end    =(start    <    0)?    0    :    start;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
392	[BUG]  [BUGGY]  start  -=  end  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  -=  end  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  -=  end  +  1;	  end    -=    start    +    1;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
393	[BUG]  [BUGGY]  End  -=  TrailerEncoding.UTF8);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  TrailerEncoding.UTF8);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  TrailerEncoding.UTF8);	  end    -=    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
394	[BUG]  [BUGGY]  start  -=  TrailerEncoding.UTF8);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  -=  TrailerEncoding.UTF8);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  -=  TrailerEncoding.UTF8);	  end    -=    TrailerEncoding.UTF8);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
395	[BUG]  [BUGGY]  [Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
396	[BUG]  [BUGGY]  [Delete]  else  if(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
397	[BUG]  [BUGGY]  [Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
398	[BUG]  [BUGGY]  >=  [Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >=  [Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>=  [Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
399	[BUG]  [BUGGY]  [Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  start  +  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  start  +  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  start  +  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
400	[BUG]  [BUGGY]  >=  [Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  start  +  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >=  [Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  start  +  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>=  [Delete]  else  if(length  >  0)  {  for(int  i  =  start;  i  <  start  +  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
401	[BUG]  [BUGGY]  end  =  trailer.length()  -  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length()  -  BYTE_MASK;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  -  BYTE_MASK;	  end    =    trailer.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
402	[BUG]  [BUGGY]  end  =  trailer.length()  -  length;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length()  -  length;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  -  length;	  end    =    trailer.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
403	[BUG]  [BUGGY]  allowSideEffects(length)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowSideEffects(length)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowSideEffects(length)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
404	[BUG]  [BUGGY]  allowSideEffects(trailer)  {  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowSideEffects(trailer)  {  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowSideEffects(trailer)  {  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
405	[BUG]  [BUGGY]  allowSideEffects(length)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowSideEffects(length)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowSideEffects(length)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
406	[BUG]  [BUGGY]  allowSideEffects(trailer)  {  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowSideEffects(trailer)  {  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowSideEffects(trailer)  {  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
407	[BUG]  [BUGGY]  allowSideEffects(trailer,  0,  length)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  allowSideEffects(trailer,  0,  length)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	allowSideEffects(trailer,  0,  length)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
408	[BUG]  [BUGGY]  end  =  TrailerUtils.length  -  1;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerUtils.length  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerUtils.length  -  1;	  end    =    trailer.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
409	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
410	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
411	[BUG]  [BUGGY]  ||(end  >  0  &&  trailer.length  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(end  >  0  &&  trailer.length  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(end  >  0  &&  trailer.length  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
412	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  buffer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
413	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
414	[BUG]  [BUGGY]  ||(end  >  0  &&  trailer.length  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }  [CE]  <identifier>  expected  [FE]                                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(end  >  0  &&  trailer.length  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(end  >  0  &&  trailer.length  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    buffer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
415	[BUG]  [BUGGY]  end  -=  trailerByte.length  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerByte.length  *  BYTE_MASK;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerByte.length  *  BYTE_MASK;	  end    -=    trailerByte.length;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
416	[BUG]  [BUGGY]  end  =  trailer.length  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  trailer.length  /  BYTE_MASK;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  BYTE_MASK;	  end    =    trailer.length    /    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
417	[BUG]  [BUGGY]  aughtableTrace(runtimeException(buffer,  offset,  length,  start,  trailer));  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  aughtableTrace(runtimeException(buffer,  offset,  length,  start,  trailer));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	aughtableTrace(runtimeException(buffer,  offset,  length,  start,  trailer));	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
418	[BUG]  [BUGGY]  aughtableTrace(runtimeException(buffer,  offset,  length,  trailer,''));  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  aughtableTrace(runtimeException(buffer,  offset,  length,  trailer,''));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	aughtableTrace(runtimeException(buffer,  offset,  length,  trailer,''));	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
419	[BUG]  [BUGGY]  aughtableDescriptor( "JSC_TOO_BACK_ENCODING ",  trailer,  length));  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  aughtableDescriptor( "JSC_TOO_BACK_ENCODING ",  trailer,  length));  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	aughtableDescriptor( "JSC_TOO_BACK_ENCODING ",  trailer,  length));	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
420	[BUG]  [BUGGY]  aughtableDescriptor( "JSC_TOO_BACK_ENCODING ",  trailer,  length);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  aughtableDescriptor( "JSC_TOO_BACK_ENCODING ",  trailer,  length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	aughtableDescriptor( "JSC_TOO_BACK_ENCODING ",  trailer,  length);	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
421	[BUG]  [BUGGY]  aughtableDescriptor( "JSC_TOO_BACK_ENCODING ");  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  aughtableDescriptor( "JSC_TOO_BACK_ENCODING ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	aughtableDescriptor( "JSC_TOO_BACK_ENCODING ");	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
422	[BUG]  [BUGGY]  aughtableDescriptor( "JSC_TOO_BACK_ENCODING ",  trailer);  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  aughtableDescriptor( "JSC_TOO_BACK_ENCODING ",  trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	aughtableDescriptor( "JSC_TOO_BACK_ENCODING ",  trailer);	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
423	[BUG]  [BUGGY]  start  -=  length  -  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  -=  length  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  -=  length  -  1;	  end    -=    length    -    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
424	[BUG]  [BUGGY]  >>  [Delete]  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >>  [Delete]  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>>  [Delete]  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
425	[BUG]  [BUGGY]  >>  [Delete]  else  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >>  [Delete]  else  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>>  [Delete]  else  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
426	[BUG]  [BUGGY]  >>  [Delete]  else  if(trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >>  [Delete]  else  if(trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>>  [Delete]  else  if(trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
427	[BUG]  [BUGGY]  >>  [Delete]  else  if(trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >>  [Delete]  else  if(trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>>  [Delete]  else  if(trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
428	[BUG]  [BUGGY]  >>  [Delete]  else  if(trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >>  [Delete]  else  if(trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>>  [Delete]  else  if(trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
429	[BUG]  [BUGGY]  ||(trailer  ==  0  &&  trailer  ==  ''))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  0  &&  trailer  ==  ''))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  0  &&  trailer  ==  ''))  {  throw  new  IllegalArgumentException( " ");	  ||(trailer    ==    0    &&    trailer!=''))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
430	[BUG]  [BUGGY]  ||(trailer  ==  0  &&  trailer!=  '.'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer  ==  0  &&  trailer!=  '.'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  0  &&  trailer!=  '.'))  {  throw  new  IllegalArgumentException( " ");  }	  ||(trailer    ==    0    &&    trailer!=''))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
431	[BUG]  [BUGGY]  ||(start  ==  0  &&  trailer!=  ''))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(start  ==  0  &&  trailer!=  ''))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(start  ==  0  &&  trailer!=  ''))  {  throw  new  IllegalArgumentException( " ");	  ||(trailer    ==    0    &&    trailer!=''))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
432	[BUG]  [BUGGY]  ||(trailer!=  0  &&  trailer  ==  ''))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(trailer!=  0  &&  trailer  ==  ''))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer!=  0  &&  trailer  ==  ''))  {  throw  new  IllegalArgumentException( " ");	  ||(trailer    ==    0    &&    trailer!=''))    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
433	[BUG]  [BUGGY]  end  -=  TrailerEncoder.getInstance().quoteAsString(trailer);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoder.getInstance().quoteAsString(trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoder.getInstance().quoteAsString(trailer);	  end    -=    loader;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
434	[BUG]  [BUGGY]  end  -=  TrailerEncoder.getInstance().encodeAsString(trailer);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoder.getInstance().encodeAsString(trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoder.getInstance().encodeAsString(trailer);	  end    -=    loader;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
435	[BUG]  [BUGGY]  end  -=  TrailerEncoder.getInstance().quoteAsCharacter(trailer);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoder.getInstance().quoteAsCharacter(trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoder.getInstance().quoteAsCharacter(trailer);	  end    -=    loader;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
436	[BUG]  [BUGGY]  >>  [Delete]  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >>  [Delete]  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>>  [Delete]	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
437	[BUG]  [BUGGY]  ==  [Delete]  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ==  [Delete]  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	==  [Delete]	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
438	[BUG]  [BUGGY]  >=  [Delete]  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >=  [Delete]  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>=  [Delete]	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
439	[BUG]  [BUGGY]  {  [Delete]  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  {  [Delete]  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	{  [Delete]	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
440	[BUG]  [BUGGY]  >>  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >>  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>>	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
441	[BUG]  [BUGGY]  !=  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  !=  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	!=	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
442	[BUG]  [BUGGY]  end  =  TrailerEncoding.US_ASCII;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerEncoding.US_ASCII;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.US_ASCII;	  end    =    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
443	[BUG]  [BUGGY]  ends  =  trailer.length();  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ends  =  trailer.length();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	ends  =  trailer.length();	  end    =    trailer.length()    +    2;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
444	[BUG]  [BUGGY]  start  -=  loaderOffset;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  start  -=  loaderOffset;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  -=  loaderOffset;	  end    -=    loaderOffset;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
445	[BUG]  [BUGGY]  End  -=  trailer.length  /  2;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  trailer.length  /  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  trailer.length  /  2;	  End    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
446	[BUG]  [BUGGY]  if(start  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  if(start  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(start  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
447	[BUG]  [BUGGY]  if(trailer  =='')  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  if(trailer  =='')  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(trailer  =='')  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
448	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
449	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length  -  1);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length  -  1);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length  -  1);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
450	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  trailer.length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  trailer.length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  trailer.length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }	  if(length    >    0)    {    System.arraycopy(buffer,    start,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    trailer,    0,    length);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
451	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
452	[BUG]  [BUGGY]  [Delete]  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
453	[BUG]  [BUGGY]  [Delete]  else  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
454	[BUG]  [BUGGY]  [Delete]  else  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
455	[BUG]  [BUGGY]  [Delete]  else  if(trailer  ==  'n')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(trailer  ==  'n')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(trailer  ==  'n')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
456	[BUG]  [BUGGY]  >>  [Delete]  else  if(trailer  ==  'n')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >>  [Delete]  else  if(trailer  ==  'n')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>>  [Delete]  else  if(trailer  ==  'n')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
457	[BUG]  [BUGGY]  end  =  TrailerEncoding.getInstance();  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerEncoding.getInstance();  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.getInstance();	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
458	[BUG]  [BUGGY]  [Delete]  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
459	[BUG]  [BUGGY]  [Delete]  else  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
460	[BUG]  [BUGGY]  [Delete]  else  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
461	[BUG]  [BUGGY]  >>  [Delete]  else  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >>  [Delete]  else  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>>  [Delete]  else  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
462	[BUG]  [BUGGY]  [Delete]  else  if(trailer  ==  'n')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(trailer  ==  'n')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(trailer  ==  'n')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	  if(trailer    =='')    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    length));    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
463	[BUG]  [BUGGY]  end  =(start  <  0)?  -1  :  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(start  <  0)?  -1  :  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(start  <  0)?  -1  :  1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
464	[BUG]  [BUGGY]  end  =(start  +  1)*  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(start  +  1)*  BYTE_MASK;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(start  +  1)*  BYTE_MASK;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
465	[BUG]  [BUGGY]  end  =(start  <  0)?  -1  :  start;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =(start  <  0)?  -1  :  start;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(start  <  0)?  -1  :  start;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
466	[BUG]  [BUGGY]  end  =  TrailerUtils.length  &&  trailer.charAt(end  -  1)  =='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerUtils.length  &&  trailer.charAt(end  -  1)  =='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerUtils.length  &&  trailer.charAt(end  -  1)  =='')  {  throw  new  IllegalArgumentException( " ");  }	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
467	[BUG]  [BUGGY]  end  =  TrailerUtils.length  &&  trailer.charAt(end  -  1)!='')  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerUtils.length  &&  trailer.charAt(end  -  1)!='')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerUtils.length  &&  trailer.charAt(end  -  1)!='')  {  throw  new  IllegalArgumentException( " ");	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
468	[BUG]  [BUGGY]  end  =  TrailerUtils.length  &&  trailer.charAt(end  -  1)  =='')  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerUtils.length  &&  trailer.charAt(end  -  1)  =='')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerUtils.length  &&  trailer.charAt(end  -  1)  =='')  {  throw  new  IllegalArgumentException( " ");	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
469	[BUG]  [BUGGY]  end  =  TrailerUtils.length  &&  trailer.charAt(end  -  1)!='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerUtils.length  &&  trailer.charAt(end  -  1)!='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerUtils.length  &&  trailer.charAt(end  -  1)!='')  {  throw  new  IllegalArgumentException( " ");  }	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
470	[BUG]  [BUGGY]  end  =  TrailerUtils.length  &&  trailer.charAt(start  +  1)  =='')  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerUtils.length  &&  trailer.charAt(start  +  1)  =='')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerUtils.length  &&  trailer.charAt(start  +  1)  =='')  {  throw  new  IllegalArgumentException( " ");	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
471	[BUG]  [BUGGY]  end  =  TrailerUtils.length  &&  trailer.charAt(start  +  1)  =='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  =  TrailerUtils.length  &&  trailer.charAt(start  +  1)  =='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerUtils.length  &&  trailer.charAt(start  +  1)  =='')  {  throw  new  IllegalArgumentException( " ");  }	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
472	[BUG]  [BUGGY]  end  -=  trailer.length()  *  2;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailer.length()  *  2;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length()  *  2;	  end    =    trailer.length()    *    2;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
473	[BUG]  [BUGGY]  aught(Throwables.wrap(trailer,  start,  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  aught(Throwables.wrap(trailer,  start,  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	aught(Throwables.wrap(trailer,  start,  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
474	[BUG]  [BUGGY]  aught(Throwable.class,  trailer,  0,  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  aught(Throwable.class,  trailer,  0,  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	aught(Throwable.class,  trailer,  0,  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
475	[BUG]  [BUGGY]  aught(rawer,  0,  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  aught(rawer,  0,  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	aught(rawer,  0,  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
476	[BUG]  [BUGGY]  aught(Throwables.wrap(trailer,  start,  length))  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  aught(Throwables.wrap(trailer,  start,  length))  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	aught(Throwables.wrap(trailer,  start,  length))  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
477	[BUG]  [BUGGY]  aught(Throwable.class,  trailer,  0,  length))  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  aught(Throwable.class,  trailer,  0,  length))  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	aught(Throwable.class,  trailer,  0,  length))  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
478	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ")).initCause(trailer);  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  aught(new  IllegalArgumentException( " ")).initCause(trailer);  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	aught(new  IllegalArgumentException( " ")).initCause(trailer);	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
479	[BUG]  [BUGGY]  End  =  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  =  trailer.length  +  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  trailer.length  +  1;	  end    =    trailer.length    -    2    +    1;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
480	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
481	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
482	[BUG]  [BUGGY]  ||(end  >  0  &&  trailer.length  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  ||(end  >  0  &&  trailer.length  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(end  >  0  &&  trailer.length  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
483	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
484	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer[i]  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
485	[BUG]  [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  new  Byte(trailer.charAt(i));  }  [CE]  <identifier>  expected  [FE]                                        IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  new  Byte(trailer.charAt(i));  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  new  Byte(trailer.charAt(i));  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer[i]    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
486	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
487	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
488	[BUG]  [BUGGY]  end  -=  trailerByte  -  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  trailerByte  -  1;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerByte  -  1;	  end    -=    trailerByte;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
489	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  >  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  >  BYTE_MASK;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8  ||  trailer  >  BYTE_MASK;	  end    -=    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
490	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  <  =  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  end  -=  TrailerEncoding.UTF8  ||  trailer  <  =  BYTE_MASK;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8  ||  trailer  <  =  BYTE_MASK;	  end    -=    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
491	[BUG]  [BUGGY]  End  -=  TrailerEncoding.UTF8;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  End  -=  TrailerEncoding.UTF8;  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  TrailerEncoding.UTF8;	  end    -=    TrailerEncoding.UTF8;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
492	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
493	[BUG]  [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	while(start  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  trailer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    trailer[i];    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
494	[BUG]  [BUGGY]  [Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
495	[BUG]  [BUGGY]  }  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  }  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	}  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
496	[BUG]  [BUGGY]  >=  [Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >=  [Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>=  [Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
497	[BUG]  [BUGGY]  [Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
498	[BUG]  [BUGGY]  [Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  length;  start++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  [Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  length;  start++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	[Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  length;  start++)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
499	[BUG]  [BUGGY]  >=  [Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                                      IllegalArgumentException      [CONTEXT]      break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {      [BUGGY]  >=  [Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	>=  [Delete]  else  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(length    >    0)    {    for(int    start    =    start;    start    <    end;    start++)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
