bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  end  -=  3;  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  3;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  3;	  end    -=    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
2	[BUG]  [BUGGY]  end  -=  4;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  4;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  4;	  end    -=    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
3	[BUG]  [BUGGY]  end  -=  8;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  8;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  8;	  end    -=    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
4	[BUG]  [BUGGY]  end  -=  10;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  10;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  10;	  end    -=    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
5	[BUG]  [BUGGY]  end  =  1;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  1;	  end    =    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
6	[BUG]  [BUGGY]  end  =  -1;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  -1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  -1;	  end    =    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
7	[BUG]  [BUGGY]  end  =  length  -  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  length  -  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  length  -  1;	  end    =    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
8	[BUG]  [BUGGY]  end  =  trailer.length  /  2;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length  /  2;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  2;	  end    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  End  =  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  End  =  trailer.length  -  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  =  trailer.length  -  1;	  end    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  end  =  trailer.length  -  3;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length  -  3;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  3;	  end    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  end  =  trailer.length  -  4;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length  -  4;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  4;	  end    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  end  =  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length  +  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  +  1;	  end    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  end  =  trailer.length  *  2;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length  *  2;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  *  2;	  end    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
14	[BUG]  [BUGGY]  end  -=  trailer;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  trailer;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer;	  end    -=    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
15	[BUG]  [BUGGY]  end  -=  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  trailer.length  -  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  -  1;	  end    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
16	[BUG]  [BUGGY]  end  -=  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  trailer.length  +  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  +  1;	  end    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
17	[BUG]  [BUGGY]  end  -=  trailer.length  -  2;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  trailer.length  -  2;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  -  2;	  end    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
18	[BUG]  [BUGGY]  end  -=  trailer.length  *  2;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  trailer.length  *  2;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  *  2;	  end    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
19	[BUG]  [BUGGY]  end  -=  trailer.length  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  trailer.length  *  BYTE_MASK;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  *  BYTE_MASK;	  end    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
20	[BUG]  [BUGGY]  end  -=  trailer.length  +  2;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  trailer.length  +  2;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailer.length  +  2;	  end    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
21	[BUG]  [BUGGY]  end  -=  trailerByte;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  trailerByte;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerByte;	  end    -=    start;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
22	[BUG]  [BUGGY]  end  -=  trailerLength;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  trailerLength;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerLength;	  end    -=    start;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
23	[BUG]  [BUGGY]  end  -=  trailerSize;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  trailerSize;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerSize;	  end    -=    start;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
24	[BUG]  [BUGGY]  end  -=  trailerByte.length;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  trailerByte.length;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  trailerByte.length;	  end    -=    start;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
25	[BUG]  [BUGGY]  end  =  trailer.length()  -  1;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length()  -  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  -  1;	  end    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  end  =  trailer.length()  +  1;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length()  +  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  +  1;	  end    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
27	[BUG]  [BUGGY]  end  =  trailer.length()  -  2;  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length()  -  2;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  -  2;	  end    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
28	[BUG]  [BUGGY]  end  =  trailer.length()  *  2;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length()  *  2;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  *  2;	  end    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  end  =  trailer.length()  +  2;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length()  +  2;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  +  2;	  end    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
30	[BUG]  [BUGGY]  end  =  trailer.length()  /  2;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length()  /  2;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  /  2;	  end    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
31	[BUG]  [BUGGY]  end  =  trailer.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length  -  1  +  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  1  +  1;	  end    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
32	[BUG]  [BUGGY]  end  =  trailer.length  /  1;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length  /  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  /  1;	  end    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
33	[BUG]  [BUGGY]  end  =  trailer.length  -  1L;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length  -  1L;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  1L;	  end    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
34	[BUG]  [BUGGY]  end  -=  length  +  1;  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  length  +  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  length  +  1;	  end    -=    length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
35	[BUG]  [BUGGY]  end  -=  length  -  1;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  length  -  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  length  -  1;	  end    -=    length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
36	[BUG]  [BUGGY]  End  -=  trailer.length;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  End  -=  trailer.length;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	End  -=  trailer.length;	  end    -=    length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
37	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
39	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  trailer[i];  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
40	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  trailer[i];  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
41	[BUG]  [BUGGY]  ||(trailer  ==  0  &&  trailer!=''))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  ||(trailer  ==  0  &&  trailer!=''))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	||(trailer  ==  0  &&  trailer!=''))  {  throw  new  IllegalArgumentException( " ");	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  buffer[i]  =  trailer[i];  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer[i]  =  buffer[i];  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
44	[BUG]  [BUGGY]  end  -=  start  +  1;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  start  +  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  start  +  1;	  end    -=    start;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
45	[BUG]  [BUGGY]  end  -=  loader;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  loader;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  loader;	  end    -=    start;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
46	[BUG]  [BUGGY]  end  =  trailer.length()  -  start;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length()  -  start;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length()  -  start;	  end    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
47	[BUG]  [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
49	[BUG]  [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  length));  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(trailer  =='')  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  end  =  trailer.length  -  1  +  start;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length  -  1  +  start;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  1  +  start;	  end    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
53	[BUG]  [BUGGY]  start  =  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  start  =  trailer.length  -  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  trailer.length  -  1;	  end    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
54	[BUG]  [BUGGY]  end  -=  2  +  1;  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  2  +  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  2  +  1;	  end    -=    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
55	[BUG]  [BUGGY]  end  =  trailer.length  -  2  +  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length  -  2  +  1;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  2  +  1;	  end    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
56	[BUG]  [BUGGY]  end  =  buffer.length;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  buffer.length;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  buffer.length;	  end    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
57	[BUG]  [BUGGY]  end  =  trailer.length  -  start;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer.length  -  start;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer.length  -  start;	  end    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
58	[BUG]  [BUGGY]  end  =  0L;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  0L;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  0L;	  end    =    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  end  =(start  <  0)?  0  :  start;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =(start  <  0)?  0  :  start;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =(start  <  0)?  0  :  start;	  end    =    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
60	[BUG]  [BUGGY]  start  =  trailer.length  -  2;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  start  =  trailer.length  -  2;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	start  =  trailer.length  -  2;	  end    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  TrailerEncoding.UTF8;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8;	  end    -=    start;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
62	[BUG]  [BUGGY]  end  -=  TrailerEncoding.UTF8);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  TrailerEncoding.UTF8);  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  TrailerEncoding.UTF8);	  end    -=    start;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
63	[BUG]  [BUGGY]  if(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
64	[BUG]  [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
65	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  >  0)  {  for(int  start  =  start;  start  <  end;  start++)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  if(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
67	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  trailer,  0,  length);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
68	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  start,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
69	[BUG]  [BUGGY]  end  -=  loaderOffset;  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  loaderOffset;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  loaderOffset;	  end    -=    length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
70	[BUG]  [BUGGY]  end  =  trailer;  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  trailer;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  trailer;	  end    =    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
71	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8;  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  TrailerEncoding.UTF8;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.UTF8;	  end    =    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
72	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  =  TrailerEncoding.UTF8);  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  =  TrailerEncoding.UTF8);	  end    =    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
73	[BUG]  [BUGGY]  end  -=  0;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    break;  }  }      byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {    [BUGGY]  end  -=  0;  [BUGGY]    trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	130	130	1	replace	end  -=  0;	  end    =    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
