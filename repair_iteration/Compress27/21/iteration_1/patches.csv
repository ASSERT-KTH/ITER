bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  start  <  =  end;  start++)  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  start  <  =  end;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	start  <  =  end;  start++)  {	  for(;start    <    =    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  for(;start  <  =  start;  start++)  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(;start  <  =  start;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(;start  <  =  start;  start++)  {	  for(;start    <    =    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  for(;start  <  =  0;  start++)  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(;start  <  =  0;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(;start  <  =  0;  start++)  {	  for(;start    <    =    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  for(;start  <  =  length;  start++)  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(;start  <  =  length;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(;start  <  =  length;  start++)  {	  for(;start    <    =    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  for(;start  <  =  1;  start++)  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(;start  <  =  1;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(;start  <  =  1;  start++)  {	  for(;start    <    =    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  start  <  end;  start++)  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  start  <  end;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	start  <  end;  start++)  {	  for(int    start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  start  <  =(end  <  0)?  0  :  end;  start++)  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  start  <  =(end  <  0)?  0  :  end;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	start  <  =(end  <  0)?  0  :  end;  start++)  {	  for(int    start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  for(int  start  =  0;start  <  length;  start++)  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(int  start  =  0;start  <  length;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(int  start  =  0;start  <  length;  start++)  {	  for(int    start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  start  <  =(end  <  0)?  0x7F  :  end;  start++)  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  start  <  =(end  <  0)?  0x7F  :  end;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	start  <  =(end  <  0)?  0x7F  :  end;  start++)  {	  for(int    start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
10	[BUG]  [BUGGY]  start  <  =  0;  start++)  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  start  <  =  0;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	start  <  =  0;  start++)  {	  for(int    start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
11	[BUG]  [BUGGY]  start  <  length;  start++)  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  start  <  length;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	start  <  length;  start++)  {	  for(;start    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
12	[BUG]  [BUGGY]  for(;start  <  start  +  length;  start++)  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(;start  <  start  +  length;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(;start  <  start  +  length;  start++)  {	  for(;start    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
13	[BUG]  [BUGGY]  for(int  start  =  0;start  <  start;  start++)  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(int  start  =  0;start  <  start;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(int  start  =  0;start  <  start;  start++)  {	  for(;start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
14	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start];  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  byte  currentByte  =  buffer[start];  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	byte  currentByte  =  buffer[start];	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
15	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start];  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  final  byte  currentByte  =  buffer[start];  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	final  byte  currentByte  =  buffer[start];	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
16	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  result  =(result  <  <  3)+(length  -  '0');  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	result  =(result  <  <  3)+(length  -  '0');	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end);  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end);  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  end);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  for(;start  >=  0;  start++)  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(;start  >=  0;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(;start  >=  0;  start++)  {	  for(;start    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  for(int  start  =  0;  start  <  0;  start++)  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(int  start  =  0;  start  <  0;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(int  start  =  0;  start  <  0;  start++)  {	  for(;start    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  for(;start  ==  0;  start++)  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(;start  ==  0;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(;start  ==  0;  start++)  {	  for(;start    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
24	[BUG]  [BUGGY]  for(;start!=  0;  start++)  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(;start!=  0;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(;start!=  0;  start++)  {	  for(;start    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  start  <  0;  start++)  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  start  <  0;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	start  <  0;  start++)  {	  for(;start    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  for(start  <  =  end;  start++)  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(start  <  =  end;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(start  <  =  end;  start++)  {	  for(start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
27	[BUG]  [BUGGY]  for(start  <  0;  start++)  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(start  <  0;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(start  <  0;  start++)  {	  for(start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
28	[BUG]  [BUGGY]  for(start  <  length;  start++)  {  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(start  <  length;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(start  <  length;  start++)  {	  for(start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
29	[BUG]  [BUGGY]  for(start  <  start;  start++)  {  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(start  <  start;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(start  <  start;  start++)  {	  for(start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
30	[BUG]  [BUGGY]  for(start  <  1;  start++)  {  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(start  <  1;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(start  <  1;  start++)  {	  for(start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
31	[BUG]  [BUGGY]  for(start  <  2;  start++)  {  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(start  <  2;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(start  <  2;  start++)  {	  for(start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  if(length  >  0)  {  final  byte  currentByte  =  buffer[start];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  if(length  >  0)  {  final  byte  currentByte  =  buffer[start];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	if(length  >  0)  {  final  byte  currentByte  =  buffer[start];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
33	[BUG]  [BUGGY]  if(length  >  0)  {  final  byte  currentByte  =  buffer[start];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  if(length  >  0)  {  final  byte  currentByte  =  buffer[start];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	if(length  >  0)  {  final  byte  currentByte  =  buffer[start];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
34	[BUG]  [BUGGY]  if(length  >  0)  {  final  byte  currentByte  =  buffer[start];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  if(length  >  0)  {  final  byte  currentByte  =  buffer[start];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	if(length  >  0)  {  final  byte  currentByte  =  buffer[start];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
35	[BUG]  [BUGGY]  if(length  >  0)  {  final  byte  currentByte  =  buffer[start  -  1];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  if(length  >  0)  {  final  byte  currentByte  =  buffer[start  -  1];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	if(length  >  0)  {  final  byte  currentByte  =  buffer[start  -  1];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
36	[BUG]  [BUGGY]  if(length  >  0)  {  final  byte  currentByte  =  buffer[start];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  if(length  >  0)  {  final  byte  currentByte  =  buffer[start];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	if(length  >  0)  {  final  byte  currentByte  =  buffer[start];  if(currentByte  <  '0'  ||  currentByte  >  '7')  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
37	[BUG]  [BUGGY]  start  <  start;  start++)  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  start  <  start;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	start  <  start;  start++)  {	  for(;start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  for(;start  >=  start;  start++)  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(;start  >=  start;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(;start  >=  start;  start++)  {	  for(;start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
39	[BUG]  [BUGGY]  for(start  <  end  &&  end  <  =  0;  start++)  {  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(start  <  end  &&  end  <  =  0;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(start  <  end  &&  end  <  =  0;  start++)  {	  for(start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  for(start  <  end  &&  end  <  =  0);  start++)  {  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(start  <  end  &&  end  <  =  0);  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(start  <  end  &&  end  <  =  0);  start++)  {	  for(start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  for(;start  >>  0;  start++)  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(;start  >>  0;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(;start  >>  0;  start++)  {	  for(;start    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
42	[BUG]  [BUGGY]  for(;start  >=  length;  start++)  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(;start  >=  length;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(;start  >=  length;  start++)  {	  for(;start    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
43	[BUG]  [BUGGY]  end  <  0;  start++)  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  end  <  0;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	end  <  0;  start++)  {	  for(int    start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  begin  <  end;  start++)  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  begin  <  end;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	begin  <  end;  start++)  {	  for(int    start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
45	[BUG]  [BUGGY]  Start  <  end;  start++)  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  Start  <  end;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	Start  <  end;  start++)  {	  for(int    start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
46	[BUG]  [BUGGY]  starter  <  end;  start++)  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  starter  <  end;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	starter  <  end;  start++)  {	  for(int    start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
47	[BUG]  [BUGGY]  for(;start  <  length  -  1;  start++)  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(;start  <  length  -  1;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(;start  <  length  -  1;  start++)  {	  for(;start    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
48	[BUG]  [BUGGY]  if(trailer  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  if(trailer  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	if(trailer  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
49	[BUG]  [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
50	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  start);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
51	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.getByte();  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  final  byte  currentByte  =  trailer.getByte();  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	final  byte  currentByte  =  trailer.getByte();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
52	[BUG]  [BUGGY]  for(;start  >  0;  start++)  {  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(;start  >  0;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(;start  >  0;  start++)  {	  for(;start    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  for(start  =  0;start  <  end;  start++)  {  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(start  =  0;start  <  end;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(start  =  0;start  <  end;  start++)  {	  for(int    start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
54	[BUG]  [BUGGY]  for(int  start  =  0;start  <  2;  start++)  {  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(int  start  =  0;start  <  2;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(int  start  =  0;start  <  2;  start++)  {	  for(int    start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
55	[BUG]  [BUGGY]  for(int  start  =  0;start  <  len;  start++)  {  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    byte  trailer  =  buffer[end  -  1];  while  (start  <  end  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  }  if  (start  ==  end)  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  trailer));  }    [BUGGY]  for(int  start  =  0;start  <  len;  start++)  {  [BUGGY]    final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress27/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	138	138	1	replace	for(int  start  =  0;start  <  len;  start++)  {	  for(int    start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
