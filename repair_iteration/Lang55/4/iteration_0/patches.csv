bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_STOPPED)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  IllegalStateException  	7	2	replace
2	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  [FE]  IllegalStateException  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_STOPPED)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  IllegalStateException  	7	2	replace
3	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  IllegalStateException  	7	2	replace
4	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [FE]  IllegalStateException  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  IllegalStateException  	7	2	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState  ==  STATE_STOPPED)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState  ==  STATE_STOPPED)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  AssertionFailedError  	7	2	replace
6	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_STOPPED)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState  ==  STATE_STOPPED)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState  ==  STATE_STOPPED)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  AssertionFailedError  	7	2	replace
7	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_SUSPENDED)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  IllegalStateException  	7	2	replace
8	[BUG]  [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  [FE]  IllegalStateException  [FE]          AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_SUSPENDED)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  IllegalStateException  	7	2	replace
9	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	  	if(this.runningState  !=  STATE_RUNNING)  {  	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }		compilable	  [FE]  AssertionFailedError  	8	1	add
11	[BUG]  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }		compilable	  [FE]  AssertionFailedError  	8	1	add
12	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    this.runningState  =  STATE_STOPPED;  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	    this.runningState  =  STATE_STOPPED;		compilable	  [FE]  IllegalStateException  	8	3	add
13	[BUG]  [BUGGY]    this.runningState  =  STATE_STOPPED;  [FE]  IllegalStateException  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    this.runningState  =  STATE_STOPPED;  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	    this.runningState  =  STATE_STOPPED;		compilable	  [FE]  IllegalStateException  	8	3	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    stopTime  =  System.currentTimeMillis();  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	    stopTime  =  System.currentTimeMillis();		compilable	  [FE]  AssertionFailedError  	8	1	add
15	[BUG]  [BUGGY]    stopTime  =  System.currentTimeMillis();  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    stopTime  =  System.currentTimeMillis();  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	    stopTime  =  System.currentTimeMillis();		compilable	  [FE]  AssertionFailedError  	8	1	add
16	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    this.runningState  =  STATE_UNSTARTED;  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	    this.runningState  =  STATE_UNSTARTED;		compilable	  [FE]  IllegalStateException  	8	2	add
17	[BUG]  [BUGGY]    this.runningState  =  STATE_UNSTARTED;  [FE]  IllegalStateException  [FE]          AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    this.runningState  =  STATE_UNSTARTED;  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	    this.runningState  =  STATE_UNSTARTED;		compilable	  [FE]  IllegalStateException  	8	2	add
18	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	    if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }		compilable	  [FE]  IllegalStateException  	8	2	add
19	[BUG]  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [FE]  IllegalStateException  [FE]            AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	    if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }		compilable	  [FE]  IllegalStateException  	8	2	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState  ==  STATE_RUNNING)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState  ==  STATE_RUNNING)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  AssertionFailedError  	7	3	replace
21	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_RUNNING)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState  ==  STATE_RUNNING)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState  ==  STATE_RUNNING)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  AssertionFailedError  	7	3	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState  ==  STATE_SUSPENDED)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState  ==  STATE_SUSPENDED)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  AssertionFailedError  	7	2	replace
23	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_SUSPENDED)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState  ==  STATE_SUSPENDED)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState  ==  STATE_SUSPENDED)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  AssertionFailedError  	7	2	replace
24	[BUG]  [BUGGY]    int  this.runningState  =  System.currentTimeMillis();  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    int  this.runningState  =  System.currentTimeMillis();  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	    int  this.runningState  =  System.currentTimeMillis();		non-compiled	[CE]  not  a  statement	8	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	    System.err.println( "Stopwatch  must  be  running  to  suspend.   ");		compilable	  [FE]  AssertionFailedError  	8	1	add
26	[BUG]  [BUGGY]    System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	    System.err.println( "Stopwatch  must  be  running  to  suspend.   ");		compilable	  [FE]  AssertionFailedError  	8	1	add
27	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  IllegalStateException  	7	2	replace
28	[BUG]  [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  [FE]  IllegalStateException  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {	if(this.runningState  !=  STATE_RUNNING)  {  	compilable	  [FE]  IllegalStateException  	7	2	replace
29	[BUG]  [BUGGY]    this.runningState  =  System.currentTimeMillis();  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  [BUGGY]    this.runningState  =  System.currentTimeMillis();  [BUGGY]  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	    this.runningState  =  System.currentTimeMillis();		non-compiled	[CE]  possible  loss  of  precision	8	None	add
