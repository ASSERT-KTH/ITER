bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.runningState  =  STATE_SUSPENDED;  [CE]  <identifier>  expected  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  this.runningState  =  STATE_SUSPENDED;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	this.runningState  =  STATE_SUSPENDED;	      this.runningState    =    STATE_UNSTARTED;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
2	[BUG]  [BUGGY]  this.runningState  =  STATE_RUNNING;  [CE]  <identifier>  expected  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  this.runningState  =  STATE_RUNNING;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	this.runningState  =  STATE_RUNNING;	      this.runningState    =    STATE_UNSTARTED;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      System.err.println(   "Stopwatch  must  be  running  to  suspend.     ");  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        System.err.println(   "Stopwatch    must    be    running    to    suspend.       ");    System.err.println( "Stopwatch  must  be  running  to  suspend.   ");	  	compilable	  [FE]  AssertionFailedError  	25	1	add
4	[BUG]  [BUGGY]      System.err.println(   "Stopwatch  must  be  running  to  suspend.     ");  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      System.err.println(   "Stopwatch  must  be  running  to  suspend.     ");  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        System.err.println(   "Stopwatch    must    be    running    to    suspend.       ");    System.err.println( "Stopwatch  must  be  running  to  suspend.   ");	  	compilable	  [FE]  AssertionFailedError  	25	1	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      System.err.println(   "Stopwatch  must  be  running  to  suspend.     ");  System.err.println( "Stopwatch  must  be  running  to  suspension.   ");  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        System.err.println(   "Stopwatch    must    be    running    to    suspend.       ");    System.err.println( "Stopwatch  must  be  running  to  suspension.   ");	  	compilable	  [FE]  AssertionFailedError  	25	1	add
6	[BUG]  [BUGGY]      System.err.println(   "Stopwatch  must  be  running  to  suspend.     ");  System.err.println( "Stopwatch  must  be  running  to  suspension.   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      System.err.println(   "Stopwatch  must  be  running  to  suspend.     ");  System.err.println( "Stopwatch  must  be  running  to  suspension.   ");  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        System.err.println(   "Stopwatch    must    be    running    to    suspend.       ");    System.err.println( "Stopwatch  must  be  running  to  suspension.   ");	  	compilable	  [FE]  AssertionFailedError  	25	1	add
7	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_RUNNING)  {  if(this.runningState  ==  STATE_RUNNING)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_RUNNING)  {  if(this.runningState  ==  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState    ==    STATE_RUNNING)    {    if(this.runningState  ==  STATE_RUNNING)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
8	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_RUNNING)  {  if(this.runningState!=  STATE_RUNNING)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_RUNNING)  {  if(this.runningState!=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState    ==    STATE_RUNNING)    {    if(this.runningState!=  STATE_RUNNING)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
9	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_RUNNING)  {  If(this.runningState  ==  STATE_RUNNING)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_RUNNING)  {  If(this.runningState  ==  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState    ==    STATE_RUNNING)    {    If(this.runningState  ==  STATE_RUNNING)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
10	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_RUNNING)  {  if(this.runningState  >=  STATE_RUNNING)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_RUNNING)  {  if(this.runningState  >=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState    ==    STATE_RUNNING)    {    if(this.runningState  >=  STATE_RUNNING)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState  ==  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {	  if(this.runningState    ==    STATE_SUSPENDED)    {    	compilable	  [FE]  AssertionFailedError  	23	3	replace
12	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState  ==  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {	  if(this.runningState    ==    STATE_SUSPENDED)    {    	compilable	  [FE]  AssertionFailedError  	23	3	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {	  if(this.runningState    ==    STATE_SUSPENDED)    {    	compilable	  [FE]  AssertionFailedError  	23	1	replace
14	[BUG]  [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {	  if(this.runningState    ==    STATE_SUSPENDED)    {    	compilable	  [FE]  AssertionFailedError  	23	1	replace
15	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_STOPPED)  {  if(this.runningState  ==  STATE_STOPPED)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_STOPPED)  {  if(this.runningState  ==  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState    ==    STATE_STOPPED)    {    if(this.runningState  ==  STATE_STOPPED)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
16	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_STOPPED)  {  if(this.runningState!=  STATE_STOPPED)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_STOPPED)  {  if(this.runningState!=  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState    ==    STATE_STOPPED)    {    if(this.runningState!=  STATE_STOPPED)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
17	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_STOPPED)  {  If(this.runningState  ==  STATE_STOPPED)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_STOPPED)  {  If(this.runningState  ==  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState    ==    STATE_STOPPED)    {    If(this.runningState  ==  STATE_STOPPED)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
18	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_STOPPED)  {  if(this.runningState  >=  STATE_STOPPED)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_STOPPED)  {  if(this.runningState  >=  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState    ==    STATE_STOPPED)    {    if(this.runningState  >=  STATE_STOPPED)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
19	[BUG]  [BUGGY]  int  this.runningState  =  STATE_RUNNING;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  int  this.runningState  =  STATE_RUNNING;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	int  this.runningState  =  STATE_RUNNING;	      if(this.runningState!=    STATE_RUNNING)    {    throw    new    IllegalStateException(   "Stopwatch    must    be    running    to    suspend.       ");    }    	non-compiled	[CE]  not  a  statement	11	None	replace
20	[BUG]  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_RUNNING;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_RUNNING;  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_RUNNING;	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
21	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  if(this.runningState!=  STATE_STOPPED)  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  if(this.runningState!=  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_STOPPED)    {    if(this.runningState!=  STATE_STOPPED)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
22	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  if(this.runningState  ==  STATE_STOPPED)  {  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  if(this.runningState  ==  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_STOPPED)    {    if(this.runningState  ==  STATE_STOPPED)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
23	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  if(this.runningState  >=  STATE_STOPPED)  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  if(this.runningState  >=  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_STOPPED)    {    if(this.runningState  >=  STATE_STOPPED)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
24	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  if(this.runningState  >>  STATE_STOPPED)  {  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  if(this.runningState  >>  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_STOPPED)    {    if(this.runningState  >>  STATE_STOPPED)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
25	[BUG]  [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_RUNNING    ||    this.runningState!=    STATE_STOPPED)    {    if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
26	[BUG]  [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_RUNNING    ||    this.runningState!=    STATE_STOPPED)    {    if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
27	[BUG]  [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_STOPPED)  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_RUNNING    ||    this.runningState!=    STATE_STOPPED)    {    if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_STOPPED)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
28	[BUG]  [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  if(this.runningState  >=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  if(this.runningState  >=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_RUNNING    ||    this.runningState!=    STATE_STOPPED)    {    if(this.runningState  >=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_STOPPED)  {	  if(this.runningState!=    STATE_RUNNING    ||    this.runningState!=    STATE_STOPPED)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
30	[BUG]  [BUGGY]  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_STOPPED)  {  [FE]  AssertionFailedError  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_STOPPED)  {	  if(this.runningState!=    STATE_RUNNING    ||    this.runningState!=    STATE_STOPPED)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
31	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_STOPPED)  {	  if(this.runningState!=    STATE_RUNNING    ||    this.runningState!=    STATE_STOPPED)    {    	compilable	  [FE]  IllegalStateException  	28	2	replace
32	[BUG]  [BUGGY]  if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_STOPPED)  {  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_STOPPED)  {	  if(this.runningState!=    STATE_RUNNING    ||    this.runningState!=    STATE_STOPPED)    {    	compilable	  [FE]  IllegalStateException  	28	2	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_STOPPED)  {	  if(this.runningState!=    STATE_RUNNING    ||    this.runningState!=    STATE_STOPPED)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
34	[BUG]  [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_STOPPED)  {  [FE]  AssertionFailedError  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_STOPPED)  {	  if(this.runningState!=    STATE_RUNNING    ||    this.runningState!=    STATE_STOPPED)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        if(this.runningState!=    STATE_RUNNING)    {    throw    new    IllegalStateException(   "Stopwatch    must    be    running    to    suspend.       ");    }    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
36	[BUG]  [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        if(this.runningState!=    STATE_RUNNING)    {    throw    new    IllegalStateException(   "Stopwatch    must    be    running    to    suspend.       ");    }    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
37	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  if(this.runningState  ==  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        if(this.runningState!=    STATE_RUNNING)    {    throw    new    IllegalStateException(   "Stopwatch    must    be    running    to    suspend.       ");    }    if(this.runningState  ==  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	10	2	add
38	[BUG]  [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  if(this.runningState  ==  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  IllegalStateException  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  if(this.runningState  ==  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        if(this.runningState!=    STATE_RUNNING)    {    throw    new    IllegalStateException(   "Stopwatch    must    be    running    to    suspend.       ");    }    if(this.runningState  ==  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	10	2	add
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspension.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        if(this.runningState!=    STATE_RUNNING)    {    throw    new    IllegalStateException(   "Stopwatch    must    be    running    to    suspend.       ");    }    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspension.   ");  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
40	[BUG]  [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspension.   ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspension.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        if(this.runningState!=    STATE_RUNNING)    {    throw    new    IllegalStateException(   "Stopwatch    must    be    running    to    suspend.       ");    }    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspension.   ");  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
41	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
42	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  if(this.runningState  ==  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  if(this.runningState  ==  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    if(this.runningState  ==  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
43	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_RUNNING)  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_RUNNING)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
44	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  if(this.runningState  >=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  if(this.runningState  >=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    if(this.runningState  >=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
45	[BUG]  [BUGGY]  System.err.println( "Stopwatch  must  be  running  to  suspend.n ");  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  System.err.println( "Stopwatch  must  be  running  to  suspend.n ");  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	System.err.println( "Stopwatch  must  be  running  to  suspend.n ");	      System.err.println(   "Stopwatch    must    be    running    to    suspend.       ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
46	[BUG]  [BUGGY]  stopTime  =  System.currentTimeMillis()  -  1;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  stopTime  =  System.currentTimeMillis()  -  1;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	stopTime  =  System.currentTimeMillis()  -  1;	      stopTime    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
47	[BUG]  [BUGGY]  stopTime  =  System.currentTimeMillis()  +  1;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  stopTime  =  System.currentTimeMillis()  +  1;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	stopTime  =  System.currentTimeMillis()  +  1;	      stopTime    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
48	[BUG]  [BUGGY]  this.stopTime  =  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  this.stopTime  =  System.currentTimeMillis();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	this.stopTime  =  System.currentTimeMillis();	      stopTime    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
49	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_SUSPENDED)  {  if(this.runningState  ==  STATE_SUSPENDED)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_SUSPENDED)  {  if(this.runningState  ==  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState    ==    STATE_SUSPENDED)    {    if(this.runningState  ==  STATE_SUSPENDED)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
50	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_SUSPENDED)  {  if(this.runningState!=  STATE_SUSPENDED)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_SUSPENDED)  {  if(this.runningState!=  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState    ==    STATE_SUSPENDED)    {    if(this.runningState!=  STATE_SUSPENDED)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
51	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_SUSPENDED)  {  If(this.runningState  ==  STATE_SUSPENDED)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_SUSPENDED)  {  If(this.runningState  ==  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState    ==    STATE_SUSPENDED)    {    If(this.runningState  ==  STATE_SUSPENDED)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
52	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_SUSPENDED)  {  if(this.runningState  >=  STATE_SUSPENDED)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_SUSPENDED)  {  if(this.runningState  >=  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState    ==    STATE_SUSPENDED)    {    if(this.runningState  >=  STATE_SUSPENDED)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
53	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {	  if(this.runningState!=    STATE_SUSPENDED)    {    	compilable	  [FE]  IllegalStateException  	8	2	replace
54	[BUG]  [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {	  if(this.runningState!=    STATE_SUSPENDED)    {    	compilable	  [FE]  IllegalStateException  	8	2	replace
55	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {	  if(this.runningState!=    STATE_SUSPENDED)    {    	compilable	  [FE]  IllegalStateException  	8	2	replace
56	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {	  if(this.runningState!=    STATE_SUSPENDED)    {    	compilable	  [FE]  IllegalStateException  	8	2	replace
57	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        if(this.runningState!=    STATE_RUNNING)    {    this.runningState    =    STATE_STOPPED;    }    if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }	  	compilable	  [FE]  IllegalStateException  	18	2	add
58	[BUG]  [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        if(this.runningState!=    STATE_RUNNING)    {    this.runningState    =    STATE_STOPPED;    }    if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }	  	compilable	  [FE]  IllegalStateException  	18	2	add
59	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState  ==  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        if(this.runningState!=    STATE_RUNNING)    {    this.runningState    =    STATE_STOPPED;    }    if(this.runningState  ==  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }	  	compilable	  [FE]  IllegalStateException  	18	3	add
60	[BUG]  [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState  ==  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState  ==  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        if(this.runningState!=    STATE_RUNNING)    {    this.runningState    =    STATE_STOPPED;    }    if(this.runningState  ==  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }	  	compilable	  [FE]  IllegalStateException  	18	3	add
61	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState  >=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        if(this.runningState!=    STATE_RUNNING)    {    this.runningState    =    STATE_STOPPED;    }    if(this.runningState  >=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }	  	compilable	  [FE]  IllegalStateException  	18	3	add
62	[BUG]  [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState  >=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState  >=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        if(this.runningState!=    STATE_RUNNING)    {    this.runningState    =    STATE_STOPPED;    }    if(this.runningState  >=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }	  	compilable	  [FE]  IllegalStateException  	18	3	add
63	[BUG]  [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState  >>  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [CE]  incompatible  types  [FE]          IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState  >>  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        if(this.runningState!=    STATE_RUNNING)    {    this.runningState    =    STATE_STOPPED;    }    if(this.runningState  >>  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }	  	non-compiled	[CE]  incompatible  types	18	None	add
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState  ==  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState  ==  STATE_RUNNING  ||  this.runningState  ==  STATE_STOPPED)  {	  if(this.runningState    ==    STATE_STOPPED)    {    	compilable	  [FE]  AssertionFailedError  	6	3	replace
65	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState  ==  STATE_STOPPED)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState  ==  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState  ==  STATE_RUNNING  ||  this.runningState  ==  STATE_STOPPED)  {	  if(this.runningState    ==    STATE_STOPPED)    {    	compilable	  [FE]  AssertionFailedError  	6	3	replace
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_STOPPED  ||  this.runningState  ==  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState  ==  STATE_STOPPED  ||  this.runningState  ==  STATE_RUNNING)  {	  if(this.runningState    ==    STATE_RUNNING)    {    	compilable	  [FE]  AssertionFailedError  	21	3	replace
67	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_STOPPED  ||  this.runningState  ==  STATE_RUNNING)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_STOPPED  ||  this.runningState  ==  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState  ==  STATE_STOPPED  ||  this.runningState  ==  STATE_RUNNING)  {	  if(this.runningState    ==    STATE_RUNNING)    {    	compilable	  [FE]  AssertionFailedError  	21	3	replace
68	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_RUNNING)  {	  if(this.runningState    ==    STATE_RUNNING)    {    	compilable	  [FE]  IllegalStateException  	21	2	replace
69	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_RUNNING)  {  [FE]  IllegalStateException  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_RUNNING)  {	  if(this.runningState    ==    STATE_RUNNING)    {    	compilable	  [FE]  IllegalStateException  	21	2	replace
70	[BUG]  [BUGGY]  this.runningState  =  System.currentTimeMillis()  -  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  this.runningState  =  System.currentTimeMillis()  -  1;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	this.runningState  =  System.currentTimeMillis()  -  1;	      this.runningState    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
71	[BUG]  [BUGGY]  this.runningState  =  System.currentTimeMillis()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  this.runningState  =  System.currentTimeMillis()  +  1;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	this.runningState  =  System.currentTimeMillis()  +  1;	      this.runningState    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
72	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_UNSTARTED;  this.runningState  =  STATE_UNSTARTED;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        this.runningState    =    STATE_UNSTARTED;    this.runningState  =  STATE_UNSTARTED;	  	compilable	  [FE]  IllegalStateException  	16	2	add
73	[BUG]  [BUGGY]      this.runningState  =  STATE_UNSTARTED;  this.runningState  =  STATE_UNSTARTED;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_UNSTARTED;  this.runningState  =  STATE_UNSTARTED;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_UNSTARTED;    this.runningState  =  STATE_UNSTARTED;	  	compilable	  [FE]  IllegalStateException  	16	2	add
74	[BUG]  [BUGGY]      this.runningState  =  STATE_UNSTARTED;  int  this.runningState  =  STATE_UNSTARTED;  [CE]  not  a  statement  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_UNSTARTED;  int  this.runningState  =  STATE_UNSTARTED;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_UNSTARTED;    int  this.runningState  =  STATE_UNSTARTED;	  	non-compiled	[CE]  not  a  statement	16	None	add
75	[BUG]  [BUGGY]      this.runningState  =  STATE_UNSTARTED;  This.runningState  =  STATE_UNSTARTED;  [CE]  cannot  find  symbol  This  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_UNSTARTED;  This.runningState  =  STATE_UNSTARTED;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_UNSTARTED;    This.runningState  =  STATE_UNSTARTED;	  	non-compiled	[CE]  cannot  find  symbol  This	16	None	add
76	[BUG]  [BUGGY]      this.runningState  =  STATE_UNSTARTED;  it.runningState  =  STATE_UNSTARTED;  [CE]  cannot  find  symbol  it  [FE]          IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_UNSTARTED;  it.runningState  =  STATE_UNSTARTED;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_UNSTARTED;    it.runningState  =  STATE_UNSTARTED;	  	non-compiled	[CE]  cannot  find  symbol  it	16	None	add
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      stopTime  =  System.currentTimeMillis();  stopTime  =  System.currentTimeMillis();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        stopTime    =    System.currentTimeMillis();    stopTime  =  System.currentTimeMillis();	  	compilable	  [FE]  AssertionFailedError  	14	1	add
78	[BUG]  [BUGGY]      stopTime  =  System.currentTimeMillis();  stopTime  =  System.currentTimeMillis();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      stopTime  =  System.currentTimeMillis();  stopTime  =  System.currentTimeMillis();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        stopTime    =    System.currentTimeMillis();    stopTime  =  System.currentTimeMillis();	  	compilable	  [FE]  AssertionFailedError  	14	1	add
79	[BUG]  [BUGGY]      stopTime  =  System.currentTimeMillis();  Stopwatch.this.runningState  =  System.currentTimeMillis();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      stopTime  =  System.currentTimeMillis();  Stopwatch.this.runningState  =  System.currentTimeMillis();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        stopTime    =    System.currentTimeMillis();    Stopwatch.this.runningState  =  System.currentTimeMillis();	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
80	[BUG]  [BUGGY]      stopTime  =  System.currentTimeMillis();  Stopwatch  =  System.currentTimeMillis();  [CE]  cannot  find  symbol  Stopwatch  [FE]        AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      stopTime  =  System.currentTimeMillis();  Stopwatch  =  System.currentTimeMillis();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        stopTime    =    System.currentTimeMillis();    Stopwatch  =  System.currentTimeMillis();	  	non-compiled	[CE]  cannot  find  symbol  Stopwatch	14	None	add
81	[BUG]  [BUGGY]      stopTime  =  System.currentTimeMillis();  StopTime  =  System.currentTimeMillis();  [CE]  cannot  find  symbol  StopTime  [FE]          AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      stopTime  =  System.currentTimeMillis();  StopTime  =  System.currentTimeMillis();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        stopTime    =    System.currentTimeMillis();    StopTime  =  System.currentTimeMillis();	  	non-compiled	[CE]  cannot  find  symbol  StopTime	14	None	add
82	[BUG]  [BUGGY]  long  this.runningState  =  System.currentTimeMillis();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  long  this.runningState  =  System.currentTimeMillis();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	long  this.runningState  =  System.currentTimeMillis();	      int    this.runningState    =    System.currentTimeMillis();    	non-compiled	[CE]  not  a  statement	24	None	replace
83	[BUG]  [BUGGY]  int  this.runningState  =  System.currentTimeMillis()  -  1;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  int  this.runningState  =  System.currentTimeMillis()  -  1;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	int  this.runningState  =  System.currentTimeMillis()  -  1;	      int    this.runningState    =    System.currentTimeMillis();    	non-compiled	[CE]  not  a  statement	24	None	replace
84	[BUG]  [BUGGY]  int  this.runningState  =  System.currentTimeMillis()  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  int  this.runningState  =  System.currentTimeMillis()  +  1;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	int  this.runningState  =  System.currentTimeMillis()  +  1;	      int    this.runningState    =    System.currentTimeMillis();    	non-compiled	[CE]  not  a  statement	24	None	replace
85	[BUG]  [BUGGY]  This.runningState  =  STATE_STOPPED;  [CE]  <identifier>  expected  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  This.runningState  =  STATE_STOPPED;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	This.runningState  =  STATE_STOPPED;	      if(this.runningState!=    STATE_RUNNING)    {    this.runningState    =    STATE_STOPPED;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
86	[BUG]  [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  if(this.runningState!=  STATE_SUSPENDED)  {  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  if(this.runningState!=  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_SUSPENDED)    {    if(this.runningState!=  STATE_SUSPENDED)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
87	[BUG]  [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  if(this.runningState  ==  STATE_SUSPENDED)  {  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  if(this.runningState  ==  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_SUSPENDED)    {    if(this.runningState  ==  STATE_SUSPENDED)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
88	[BUG]  [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  if(this.runningState  >=  STATE_SUSPENDED)  {  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  if(this.runningState  >=  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_SUSPENDED)    {    if(this.runningState  >=  STATE_SUSPENDED)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
89	[BUG]  [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  if(this.runningState  >>  STATE_SUSPENDED)  {  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  if(this.runningState  >>  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_SUSPENDED)    {    if(this.runningState  >>  STATE_SUSPENDED)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
90	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_SUSPENDED  ||  this.runningState!=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_SUSPENDED  ||  this.runningState!=  STATE_RUNNING)  {	  if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
91	[BUG]  [BUGGY]  if(this.runningState!=  STATE_SUSPENDED  ||  this.runningState!=  STATE_RUNNING)  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_SUSPENDED  ||  this.runningState!=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_SUSPENDED  ||  this.runningState!=  STATE_RUNNING)  {	  if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED  &&  this.runningState!=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_STOPPED  &&  this.runningState!=  STATE_RUNNING)  {	  if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
93	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED  &&  this.runningState!=  STATE_RUNNING)  {  [FE]  AssertionFailedError  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED  &&  this.runningState!=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_STOPPED  &&  this.runningState!=  STATE_RUNNING)  {	  if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
94	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_SUSPENDED)  {	  if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
95	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_SUSPENDED)  {  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_SUSPENDED)  {	  if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
96	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_STOPPED;  this.runningState  =  STATE_STOPPED;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        this.runningState    =    STATE_STOPPED;    this.runningState  =  STATE_STOPPED;	  	compilable	  [FE]  IllegalStateException  	12	3	add
97	[BUG]  [BUGGY]      this.runningState  =  STATE_STOPPED;  this.runningState  =  STATE_STOPPED;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_STOPPED;  this.runningState  =  STATE_STOPPED;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_STOPPED;    this.runningState  =  STATE_STOPPED;	  	compilable	  [FE]  IllegalStateException  	12	3	add
98	[BUG]  [BUGGY]      this.runningState  =  STATE_STOPPED;  int  this.runningState  =  STATE_STOPPED;  [CE]  not  a  statement  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_STOPPED;  int  this.runningState  =  STATE_STOPPED;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_STOPPED;    int  this.runningState  =  STATE_STOPPED;	  	non-compiled	[CE]  not  a  statement	12	None	add
99	[BUG]  [BUGGY]      this.runningState  =  STATE_STOPPED;  This.runningState  =  STATE_STOPPED;  [CE]  cannot  find  symbol  This  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_STOPPED;  This.runningState  =  STATE_STOPPED;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_STOPPED;    This.runningState  =  STATE_STOPPED;	  	non-compiled	[CE]  cannot  find  symbol  This	12	None	add
100	[BUG]  [BUGGY]      this.runningState  =  STATE_STOPPED;  it.runningState  =  STATE_STOPPED;  [CE]  cannot  find  symbol  it  [FE]          IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_STOPPED;  it.runningState  =  STATE_STOPPED;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_STOPPED;    it.runningState  =  STATE_STOPPED;	  	non-compiled	[CE]  cannot  find  symbol  it	12	None	add
101	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_SUSPENDED)  {	  if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
102	[BUG]  [BUGGY]  if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_SUSPENDED)  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_SUSPENDED)  {	  if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState  ==  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {	  if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
104	[BUG]  [BUGGY]  if(this.runningState  ==  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [FE]  AssertionFailedError  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState  ==  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState  ==  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {	  if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
105	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_STOPPED;  }  [CE]  <identifier>  expected  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_STOPPED;  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_STOPPED;  }	      if(this.runningState!=    STATE_RUNNING)    {    this.runningState    =    STATE_STOPPED;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
106	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_SUSPENDED;  }  [CE]  <identifier>  expected  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_SUSPENDED;  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_SUSPENDED;  }	      if(this.runningState!=    STATE_RUNNING)    {    this.runningState    =    STATE_STOPPED;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
107	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_STOPPED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	      if(this.runningState!=    STATE_RUNNING)    {    throw    new    IllegalStateException(   "Stopwatch    must    be    running    to    suspend.       ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
108	[BUG]  [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_SUSPENDED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	      if(this.runningState!=    STATE_RUNNING)    {    throw    new    IllegalStateException(   "Stopwatch    must    be    running    to    suspend.       ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
109	[BUG]  [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  If(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  If(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_RUNNING    ||    this.runningState!=    STATE_STOPPED)    {    If(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_STOPPED)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
110	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_SUSPENDED)  {	  if(this.runningState    ==    STATE_RUNNING)    {    	compilable	  [FE]  IllegalStateException  	21	2	replace
111	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_SUSPENDED)  {  [FE]  IllegalStateException  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_SUSPENDED)  {	  if(this.runningState    ==    STATE_RUNNING)    {    	compilable	  [FE]  IllegalStateException  	21	2	replace
112	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  If(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  If(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    If(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
113	[BUG]  [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  If(this.runningState!=  STATE_STOPPED)  {  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_STOPPED)  {  If(this.runningState!=  STATE_STOPPED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_STOPPED)    {    If(this.runningState!=  STATE_STOPPED)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
114	[BUG]  [BUGGY]  this.runningState  =  System.currentTimeMillis()  -  startTime;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  this.runningState  =  System.currentTimeMillis()  -  startTime;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	this.runningState  =  System.currentTimeMillis()  -  startTime;	      this.runningState    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
115	[BUG]  [BUGGY]  this.runningState  =  STATE_STATE_STOPPED;  [CE]  <identifier>  expected  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  this.runningState  =  STATE_STATE_STOPPED;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	this.runningState  =  STATE_STATE_STOPPED;	      this.runningState    =    STATE_UNSTARTED;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
116	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_UNSTARTED;  this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_STOPPED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        this.runningState    =    STATE_UNSTARTED;    this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_STOPPED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	16	2	add
117	[BUG]  [BUGGY]      this.runningState  =  STATE_UNSTARTED;  this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_STOPPED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_UNSTARTED;  this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_STOPPED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_UNSTARTED;    this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_STOPPED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	16	2	add
118	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        this.runningState    =    STATE_UNSTARTED;    if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	16	2	add
119	[BUG]  [BUGGY]      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_UNSTARTED;    if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	16	2	add
120	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        this.runningState    =    STATE_UNSTARTED;    if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	16	2	add
121	[BUG]  [BUGGY]      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_UNSTARTED;    if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	16	2	add
122	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        this.runningState    =    STATE_UNSTARTED;    if(this.runningState!=  STATE_UNSTARTED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	16	2	add
123	[BUG]  [BUGGY]      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_UNSTARTED;    if(this.runningState!=  STATE_UNSTARTED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	16	2	add
124	[BUG]  [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  If(this.runningState!=  STATE_SUSPENDED)  {  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_SUSPENDED)  {  If(this.runningState!=  STATE_SUSPENDED)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=    STATE_SUSPENDED)    {    If(this.runningState!=  STATE_SUSPENDED)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
125	[BUG]  [BUGGY]      stopTime  =  System.currentTimeMillis();  Stopwatch.this.stopTime  =  System.currentTimeMillis();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      stopTime  =  System.currentTimeMillis();  Stopwatch.this.stopTime  =  System.currentTimeMillis();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        stopTime    =    System.currentTimeMillis();    Stopwatch.this.stopTime  =  System.currentTimeMillis();	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      stopTime  =  System.currentTimeMillis();  startTime  =  System.currentTimeMillis();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        stopTime    =    System.currentTimeMillis();    startTime  =  System.currentTimeMillis();	  	compilable	  [FE]  AssertionFailedError  	14	2	add
127	[BUG]  [BUGGY]      stopTime  =  System.currentTimeMillis();  startTime  =  System.currentTimeMillis();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      stopTime  =  System.currentTimeMillis();  startTime  =  System.currentTimeMillis();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        stopTime    =    System.currentTimeMillis();    startTime  =  System.currentTimeMillis();	  	compilable	  [FE]  AssertionFailedError  	14	2	add
128	[BUG]  [BUGGY]  int  this.runningState  =  System.currentTimeMillis()  -  startTime;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  int  this.runningState  =  System.currentTimeMillis()  -  startTime;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	int  this.runningState  =  System.currentTimeMillis()  -  startTime;	      int    this.runningState    =    System.currentTimeMillis();    	non-compiled	[CE]  not  a  statement	24	None	replace
129	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState!=  STATE_SUSPENDED)  {  this.runningState  =  STATE_STOPPED;  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        if(this.runningState!=    STATE_RUNNING)    {    this.runningState    =    STATE_STOPPED;    }    if(this.runningState!=  STATE_SUSPENDED)  {  this.runningState  =  STATE_STOPPED;  }	  	compilable	  [FE]  IllegalStateException  	18	3	add
130	[BUG]  [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState!=  STATE_SUSPENDED)  {  this.runningState  =  STATE_STOPPED;  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState!=  STATE_SUSPENDED)  {  this.runningState  =  STATE_STOPPED;  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        if(this.runningState!=    STATE_RUNNING)    {    this.runningState    =    STATE_STOPPED;    }    if(this.runningState!=  STATE_SUSPENDED)  {  this.runningState  =  STATE_STOPPED;  }	  	compilable	  [FE]  IllegalStateException  	18	3	add
131	[BUG]  [BUGGY]  int  this.runningState  =  System.currentTimeMillis()  -  stopTime;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  int  this.runningState  =  System.currentTimeMillis()  -  stopTime;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	int  this.runningState  =  System.currentTimeMillis()  -  stopTime;	      int    this.runningState    =    System.currentTimeMillis();    	non-compiled	[CE]  not  a  statement	24	None	replace
132	[BUG]  [BUGGY]  this.runningState  =  System.currentTimeMillis()  -  stopTime;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  this.runningState  =  System.currentTimeMillis()  -  stopTime;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	this.runningState  =  System.currentTimeMillis()  -  stopTime;	      this.runningState    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      System.err.println(   "Stopwatch  must  be  running  to  suspend.     ");  System.err.println();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        System.err.println(   "Stopwatch    must    be    running    to    suspend.       ");    System.err.println();	  	compilable	  [FE]  AssertionFailedError  	25	1	add
134	[BUG]  [BUGGY]      System.err.println(   "Stopwatch  must  be  running  to  suspend.     ");  System.err.println();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      System.err.println(   "Stopwatch  must  be  running  to  suspend.     ");  System.err.println();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        System.err.println(   "Stopwatch    must    be    running    to    suspend.       ");    System.err.println();	  	compilable	  [FE]  AssertionFailedError  	25	1	add
135	[BUG]  [BUGGY]  stopTime  =  System.currentTimeMillis()  -  startTime;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  stopTime  =  System.currentTimeMillis()  -  startTime;  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	stopTime  =  System.currentTimeMillis()  -  startTime;	      stopTime    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
136	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_STOPPED;  this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        this.runningState    =    STATE_STOPPED;    this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	12	3	add
137	[BUG]  [BUGGY]      this.runningState  =  STATE_STOPPED;  this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_STOPPED;  this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_STOPPED;    this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	12	3	add
138	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_STOPPED;  this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_UNSTARTED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        this.runningState    =    STATE_STOPPED;    this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_UNSTARTED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	12	3	add
139	[BUG]  [BUGGY]      this.runningState  =  STATE_STOPPED;  this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_UNSTARTED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_STOPPED;  this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_UNSTARTED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_STOPPED;    this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_UNSTARTED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	12	3	add
140	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_STOPPED;  }  else  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        this.runningState    =    STATE_STOPPED;    if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_STOPPED;  }  else  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	12	3	add
141	[BUG]  [BUGGY]      this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_STOPPED;  }  else  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_STOPPED;  }  else  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_STOPPED;    if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_STOPPED;  }  else  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	12	3	add
142	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_STOPPED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	        this.runningState    =    STATE_STOPPED;    if(this.runningState!=  STATE_STOPPED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	12	3	add
143	[BUG]  [BUGGY]      this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_STOPPED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]      this.runningState  =  STATE_STOPPED;  if(this.runningState!=  STATE_STOPPED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        this.runningState    =    STATE_STOPPED;    if(this.runningState!=  STATE_STOPPED)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }	  	compilable	  [FE]  IllegalStateException  	12	3	add
144	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_RUNNING)  {	  if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
145	[BUG]  [BUGGY]  if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_RUNNING)  {  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  suspend()  {    [BUGGY]  if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_RUNNING)  {  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState!=  STATE_RUNNING)  {	  if(this.runningState!=    STATE_STOPPED    ||    this.runningState!=    STATE_RUNNING)    {    	compilable	  [FE]  IllegalStateException  	4	2	replace
146	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");	      if(this.runningState!=    STATE_RUNNING)    {    throw    new    IllegalStateException(   "Stopwatch    must    be    running    to    suspend.       ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
147	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	Thread.currentThread().interrupt();	      if(this.runningState!=    STATE_RUNNING)    {    throw    new    IllegalStateException(   "Stopwatch    must    be    running    to    suspend.       ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
148	[BUG]  [BUGGY]      stopTime  =  System.currentTimeMillis();  this.runningState  =  System.currentTimeMillis();  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]      stopTime  =  System.currentTimeMillis();  this.runningState  =  System.currentTimeMillis();  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	        stopTime    =    System.currentTimeMillis();    this.runningState  =  System.currentTimeMillis();	  	non-compiled	[CE]  possible  loss  of  precision	14	None	add
149	[BUG]  [BUGGY]  System.err.println( "Stopwatch  must  be  running  to  suspension. ");  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  System.err.println( "Stopwatch  must  be  running  to  suspension. ");  [BUGGY]    if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	System.err.println( "Stopwatch  must  be  running  to  suspension. ");	      System.err.println(   "Stopwatch    must    be    running    to    suspend.       ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
150	[BUG]  [BUGGY]  int  runningState  =  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  suspend()  {    [BUGGY]  int  runningState  =  System.currentTimeMillis();  [BUGGY]    throw  new  IllegalStateException(   "Stopwatch  must  be  running  to  suspend.     ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	int  runningState  =  System.currentTimeMillis();	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
