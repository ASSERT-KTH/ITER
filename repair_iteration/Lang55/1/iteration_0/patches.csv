bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis()  -  1;  [BUGGY]  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	add	stopTime  =  System.currentTimeMillis()  -  1;	stopTime  =  System.currentTimeMillis();  	compilable	  [FE]  AssertionFailedError  	1	1	replace
2	[BUG]  [BUGGY]  stopTime  =  System.currentTimeMillis()  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis()  -  1;  [BUGGY]  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	stopTime  =  System.currentTimeMillis()  -  1;	stopTime  =  System.currentTimeMillis();  	compilable	  [FE]  AssertionFailedError  	1	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis()  +  1;  [BUGGY]  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	add	stopTime  =  System.currentTimeMillis()  +  1;	stopTime  =  System.currentTimeMillis();  	compilable	  [FE]  AssertionFailedError  	1	1	replace
4	[BUG]  [BUGGY]  stopTime  =  System.currentTimeMillis()  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis()  +  1;  [BUGGY]  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	stopTime  =  System.currentTimeMillis()  +  1;	stopTime  =  System.currentTimeMillis();  	compilable	  [FE]  AssertionFailedError  	1	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis()  /  1000;  [BUGGY]  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	add	stopTime  =  System.currentTimeMillis()  /  1000;	stopTime  =  System.currentTimeMillis();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
6	[BUG]  [BUGGY]  stopTime  =  System.currentTimeMillis()  /  1000;  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis()  /  1000;  [BUGGY]  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	stopTime  =  System.currentTimeMillis()  /  1000;	stopTime  =  System.currentTimeMillis();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    [BUGGY]  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	add	  	stopTime  =  System.currentTimeMillis();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
8	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    [BUGGY]  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	  	stopTime  =  System.currentTimeMillis();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	add	    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }		compilable	  [FE]  AssertionFailedError  	2	1	add
10	[BUG]  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }		compilable	  [FE]  AssertionFailedError  	2	1	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	add	    stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;		compilable	  [FE]  AssertionFailedError  	2	1	add
12	[BUG]  [BUGGY]    stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	    stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;		compilable	  [FE]  AssertionFailedError  	2	1	add
13	[BUG]  [BUGGY]    int  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    int  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	    int  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;		non-compiled	[CE]  possible  loss  of  precision	2	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	add	    if(this.runningState!=  STATE_RUNNING)  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }		compilable	  [FE]  AssertionFailedError  	2	1	add
15	[BUG]  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	    if(this.runningState!=  STATE_RUNNING)  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }		compilable	  [FE]  AssertionFailedError  	2	1	add
16	[BUG]  [BUGGY]    this.splitState  =  System.currentTimeMillis();  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    this.splitState  =  System.currentTimeMillis();  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	    this.splitState  =  System.currentTimeMillis();		non-compiled	[CE]  possible  loss  of  precision	2	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState!=  STATE_UNSTARTED)  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	add	    if(this.runningState!=  STATE_UNSTARTED)  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }		compilable	  [FE]  AssertionFailedError  	2	1	add
18	[BUG]  [BUGGY]    if(this.runningState!=  STATE_UNSTARTED)  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    if(this.runningState!=  STATE_UNSTARTED)  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	    if(this.runningState!=  STATE_UNSTARTED)  {  System.err.println( "Stopwatch  must  be  running  to  suspend.   ");  }		compilable	  [FE]  AssertionFailedError  	2	1	add
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis()  -  startTime;  [BUGGY]  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	add	stopTime  =  System.currentTimeMillis()  -  startTime;	stopTime  =  System.currentTimeMillis();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
20	[BUG]  [BUGGY]  stopTime  =  System.currentTimeMillis()  -  startTime;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  stopTime  =  System.currentTimeMillis()  -  startTime;  [BUGGY]  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	stopTime  =  System.currentTimeMillis()  -  startTime;	stopTime  =  System.currentTimeMillis();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    long  splitState  =  System.currentTimeMillis();  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	add	    long  splitState  =  System.currentTimeMillis();		compilable	  [FE]  AssertionFailedError  	2	1	add
22	[BUG]  [BUGGY]    long  splitState  =  System.currentTimeMillis();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    long  splitState  =  System.currentTimeMillis();  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	    long  splitState  =  System.currentTimeMillis();		compilable	  [FE]  AssertionFailedError  	2	1	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    long  splitState  =  System.currentTimeMillis();  this.splitState  =  STATE_STOPPED;  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	add	    long  splitState  =  System.currentTimeMillis();  this.splitState  =  STATE_STOPPED;		compilable	  [FE]  AssertionFailedError  	2	1	add
24	[BUG]  [BUGGY]    long  splitState  =  System.currentTimeMillis();  this.splitState  =  STATE_STOPPED;  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    long  splitState  =  System.currentTimeMillis();  this.splitState  =  STATE_STOPPED;  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	    long  splitState  =  System.currentTimeMillis();  this.splitState  =  STATE_STOPPED;		compilable	  [FE]  AssertionFailedError  	2	1	add
25	[BUG]  [BUGGY]    int  startTime  =  System.currentTimeMillis();  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    int  startTime  =  System.currentTimeMillis();  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	    int  startTime  =  System.currentTimeMillis();		non-compiled	[CE]  possible  loss  of  precision	2	None	add
26	[BUG]  [BUGGY]    int  startTime  =  System.currentTimeMillis();  this.splitState  =  STATE_STOPPED;  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]    int  startTime  =  System.currentTimeMillis();  this.splitState  =  STATE_STOPPED;  [BUGGY]  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	    int  startTime  =  System.currentTimeMillis();  this.splitState  =  STATE_STOPPED;		non-compiled	[CE]  possible  loss  of  precision	2	None	add
