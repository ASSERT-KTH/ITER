bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null,  this);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null,  this);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null,  this);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	68	None	replace
2	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	68	None	replace
3	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.commentChar);  [CE]  cannot  find  symbol  commentChar  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.commentChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.commentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this);    	non-compiled	[CE]  cannot  find  symbol  commentChar	68	None	replace
4	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format,  null,  this);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format,  null,  this);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format,  null,  this);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	68	None	replace
5	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	51	None	replace
6	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	51	None	replace
7	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  delimiter,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  delimiter,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  delimiter,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	51	None	replace
8	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  DISABLED);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	51	None	replace
9	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	51	None	replace
10	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  escapeChar);  [CE]  cannot  find  symbol  escapeChar  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  escapeChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  escapeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	51	None	replace
11	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  cannot  find  symbol  quoteStart  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteStart  =  mapNullToDisabled(format.getCommentStart());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  quoteStart	74	None	replace
12	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getQuoteEnd());  [CE]  cannot  find  symbol  quoteStart  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getQuoteEnd());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteStart  =  mapNullToDisabled(format.getQuoteEnd());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  quoteStart	74	None	replace
13	[BUG]  [BUGGY]  this.quoteEnd  =  mapNullToDisabled(format.getQuoteChar());  [CE]  cannot  find  symbol  quoteEnd  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteEnd  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteEnd  =  mapNullToDisabled(format.getQuoteChar());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  quoteEnd	74	None	replace
14	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getEscapeChar());  [CE]  cannot  find  symbol  quoteStart  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getEscapeChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteStart  =  mapNullToDisabled(format.getEscapeChar());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  quoteStart	74	None	replace
15	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getQuoteChar(),  in);  [CE]  cannot  find  symbol  quoteStart  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getQuoteChar(),  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteStart  =  mapNullToDisabled(format.getQuoteChar(),  in);	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  quoteStart	74	None	replace
16	[BUG]  [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  in);  [CE]  cannot  find  symbol  displayChar  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  in);	  this.displayChar    =    mapNullToDisabled(format.getDisplayChar());    	non-compiled	[CE]  cannot  find  symbol  displayChar	24	None	replace
17	[BUG]  [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  DISABLED);  [CE]  cannot  find  symbol  displayChar  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  DISABLED);	  this.displayChar    =    mapNullToDisabled(format.getDisplayChar());    	non-compiled	[CE]  cannot  find  symbol  displayChar	24	None	replace
18	[BUG]  [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  format.getEscapeChar());  [CE]  cannot  find  symbol  displayChar  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  format.getEscapeChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  format.getEscapeChar());	  this.displayChar    =    mapNullToDisabled(format.getDisplayChar());    	non-compiled	[CE]  cannot  find  symbol  displayChar	24	None	replace
19	[BUG]  [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar()  +  1);  [CE]  cannot  find  symbol  displayChar  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar()  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.displayChar  =  mapNullToDisabled(format.getDisplayChar()  +  1);	  this.displayChar    =    mapNullToDisabled(format.getDisplayChar());    	non-compiled	[CE]  cannot  find  symbol  displayChar	24	None	replace
20	[BUG]  [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar2());  [CE]  cannot  find  symbol  displayChar  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar2());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.displayChar  =  mapNullToDisabled(format.getDisplayChar2());	  this.displayChar    =    mapNullToDisabled(format.getDisplayChar());    	non-compiled	[CE]  cannot  find  symbol  displayChar	24	None	replace
21	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  escape);  [CE]  cannot  find  symbol  commentStart  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  commentStart	31	None	replace
22	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  escape);  [CE]  cannot  find  symbol  commentChar  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  commentChar	31	None	replace
23	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  delimiter);  [CE]  cannot  find  symbol  commentStart  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  commentStart	31	None	replace
24	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEscape,  delimiter);  [CE]  cannot  find  symbol  commentStart  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEscape,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEscape,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  commentStart	31	None	replace
25	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLine,  delimiter);  [CE]  cannot  find  symbol  commentStart  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLine,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLine,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  commentStart	31	None	replace
26	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  escapeEmptyLines);  [CE]  cannot  find  symbol  commentStart  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  escapeEmptyLines);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  escapeEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  commentStart	31	None	replace
27	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  escapeSurroundingSpaces);  [CE]  cannot  find  symbol  commentStart  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  escapeSurroundingSpaces);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  escapeSurroundingSpaces);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  commentStart	31	None	replace
28	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	72	None	replace
29	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  this.quoteChar);  [CE]  cannot  find  symbol  escapeChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.quoteChar);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	72	None	replace
30	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	72	None	replace
31	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	72	None	replace
32	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  out);  [CE]  cannot  find  symbol  out  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  out);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.quoteChar);    	non-compiled	[CE]  cannot  find  symbol  out	72	None	replace
33	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  in,  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  in,  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  in,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	72	None	replace
34	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.delimiter,  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.delimiter,  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.delimiter,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	72	None	replace
35	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  format.getCommentStart(),  format.getCommentEnd()  -  1);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  format.getCommentStart(),  format.getCommentEnd()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format,  format.getCommentStart(),  format.getCommentEnd()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
36	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd())-  1;  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd())-  1;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd())-  1;	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
37	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd();  [CE]  ')'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd();  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd();	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd()    -    1);    	non-compiled	[CE]  ')'  expected	17	None	replace
38	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar);  [CE]  cannot  find  symbol  commentStart  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar);    	non-compiled	[CE]  cannot  find  symbol  commentStart	10	None	replace
39	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLine);  [CE]  cannot  find  symbol  commentLine  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLine);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLine);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar);    	non-compiled	[CE]  cannot  find  symbol  commentLine	10	None	replace
40	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLine);  [CE]  cannot  find  symbol  commentStart  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLine);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLine);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar);    	non-compiled	[CE]  cannot  find  symbol  commentStart	10	None	replace
41	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEscape);  [CE]  cannot  find  symbol  commentEscape  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEscape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEscape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar);    	non-compiled	[CE]  cannot  find  symbol  commentEscape	10	None	replace
42	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEscape);  [CE]  cannot  find  symbol  commentStart  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEscape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEscape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar);    	non-compiled	[CE]  cannot  find  symbol  commentStart	10	None	replace
43	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar);  [CE]  cannot  find  symbol  commentStart  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar);    	non-compiled	[CE]  cannot  find  symbol  commentStart	10	None	replace
44	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterEnd());  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterEnd());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getCharacterEnd());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
45	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getCharacterEnd(),  in);  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getCharacterEnd(),  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getCharacterEnd(),  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getCharacterEnd());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
46	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getCharacterEnd());  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getCharacterEnd());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getCharacterEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getCharacterEnd());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
47	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getCharacterEnd()  +  1);  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getCharacterEnd()  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getCharacterEnd()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getCharacterEnd());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
48	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  in.getCommentEnd(),  format.getCharacterEnd());  [CE]  cannot  find  symbol  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  in.getCommentEnd(),  format.getCharacterEnd());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format,  in.getCommentEnd(),  format.getCharacterEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getCharacterEnd());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
49	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  +  1);  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
50	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  format.getCommentEnd()  -  1);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  format.getCommentEnd()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format,  format.getCommentEnd()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
51	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  -  2);  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  -  2);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  -  2);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
52	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    quotedChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	6	None	replace
53	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  quotedChar);  [CE]  cannot  find  symbol  quotedChar  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  quotedChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  quotedChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    quotedChar);    	non-compiled	[CE]  cannot  find  symbol  quotedChar	6	None	replace
54	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  quoteChar);  [CE]  cannot  find  symbol  out  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    quotedChar);    	non-compiled	[CE]  cannot  find  symbol  out	6	None	replace
55	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    quotedChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	6	None	replace
56	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED,    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	47	None	replace
57	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED,    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	47	None	replace
58	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  DISABLED);  [CE]  cannot  find  symbol  escapeChar  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	47	None	replace
59	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  delimiter);  [CE]  cannot  find  symbol  escapeChar  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	47	None	replace
60	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  DISABLED,  delimiter);  [CE]  cannot  find  symbol  escapeChar  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  DISABLED,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  DISABLED,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	47	None	replace
61	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  DISABLED,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  DISABLED,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  DISABLED,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED,    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	47	None	replace
62	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.DISABLED);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	39	None	replace
63	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.DISABLED);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	39	None	replace
64	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.DISABLED);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	39	None	replace
65	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.DISABLED);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	39	None	replace
66	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  out);  [CE]  cannot  find  symbol  out  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  out);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.DISABLED);    	non-compiled	[CE]  cannot  find  symbol  out	39	None	replace
67	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.DISABLED);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	39	None	replace
68	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  +  1,  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  +  1,  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  +  1,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	64	None	replace
69	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	64	None	replace
70	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	64	None	replace
71	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	64	None	replace
72	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart()  -  1,  this.quoteChar);  [CE]  cannot  find  symbol  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart()  -  1,  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart()  -  1,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1,    this.quoteChar);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
73	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  out);  [CE]  cannot  find  symbol  out  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  out);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1,    this.quoteChar);    	non-compiled	[CE]  cannot  find  symbol  out	64	None	replace
74	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  in);  [CE]  cannot  find  symbol  escapeChar  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    in);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	5	None	replace
75	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quoteChar,  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quoteChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quoteChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	5	None	replace
76	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  quoteChar,  in);  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  quoteChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  quoteChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    in);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
77	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  EQUENCE_CHAR,  in);  [CE]  cannot  find  symbol  EQUENCE_CHAR  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  EQUENCE_CHAR,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  EQUENCE_CHAR,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    in);    	non-compiled	[CE]  cannot  find  symbol  EQUENCE_CHAR	5	None	replace
78	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  errorChar,  in);  [CE]  cannot  find  symbol  errorChar  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  errorChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  errorChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    in);    	non-compiled	[CE]  cannot  find  symbol  errorChar	5	None	replace
79	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comenceChar);  [CE]  cannot  find  symbol  comenceChar  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comenceChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comenceChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  comenceChar	77	None	replace
80	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar,  DISABLED);  [CE]  cannot  find  symbol  categoryChar  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.categoryChar);    	non-compiled	[CE]  cannot  find  symbol  categoryChar	41	None	replace
81	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar,  delimiter);  [CE]  cannot  find  symbol  categoryChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.categoryChar);    	non-compiled	[CE]  cannot  find  symbol  categoryChar	41	None	replace
82	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar,  in);  [CE]  cannot  find  symbol  categoryChar  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.categoryChar);    	non-compiled	[CE]  cannot  find  symbol  categoryChar	41	None	replace
83	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar  +  1);  [CE]  cannot  find  symbol  categoryChar  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.categoryChar);    	non-compiled	[CE]  cannot  find  symbol  categoryChar	41	None	replace
84	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryLine);  [CE]  cannot  find  symbol  categoryLine  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryLine);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryLine);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.categoryChar);    	non-compiled	[CE]  cannot  find  symbol  categoryLine	41	None	replace
85	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    escape);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	80	None	replace
86	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    escape);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	80	None	replace
87	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quoteChar,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quoteChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quoteChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    escape);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	80	None	replace
88	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    escape);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	80	None	replace
89	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  quoteChar,  escape);  [CE]  cannot  find  symbol  out  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  quoteChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  quoteChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    escape);    	non-compiled	[CE]  cannot  find  symbol  out	80	None	replace
90	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  format.getQuoteChar());  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  format.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    escape);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	80	None	replace
91	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar);  [CE]  cannot  find  symbol  commentStart  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.composeChar);    	non-compiled	[CE]  cannot  find  symbol  commentStart	50	None	replace
92	[BUG]  [BUGGY]  this.composeStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar);  [CE]  cannot  find  symbol  composeStart  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.composeStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.composeStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.composeChar);    	non-compiled	[CE]  cannot  find  symbol  composeStart	50	None	replace
93	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar,  delimiter);  [CE]  cannot  find  symbol  composeChar  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.composeChar);    	non-compiled	[CE]  cannot  find  symbol  composeChar	50	None	replace
94	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar,  in);  [CE]  cannot  find  symbol  composeChar  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.composeChar);    	non-compiled	[CE]  cannot  find  symbol  composeChar	50	None	replace
95	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar,  delimiter);  [CE]  cannot  find  symbol  commentStart  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.composeChar);    	non-compiled	[CE]  cannot  find  symbol  commentStart	50	None	replace
96	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  line);  [CE]  cannot  find  symbol  line  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  line);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  line);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    out);    	non-compiled	[CE]  cannot  find  symbol  line	4	None	replace
97	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  column);  [CE]  cannot  find  symbol  column  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  column);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  column);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    out);    	non-compiled	[CE]  cannot  find  symbol  column	4	None	replace
98	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  quoteChar);  [CE]  cannot  find  symbol  escapeChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    quoteChar);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	27	None	replace
99	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  delimiter,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  delimiter,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  delimiter,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	27	None	replace
100	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  delimiter,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  delimiter,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  delimiter,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	27	None	replace
101	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  delimiter,  quoteChar);  [CE]  cannot  find  symbol  out  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  delimiter,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  delimiter,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    quoteChar);    	non-compiled	[CE]  cannot  find  symbol  out	27	None	replace
102	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  escapeChar);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  escapeChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  escapeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
103	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  escape);  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
104	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.commentChar);  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.commentChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.commentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
105	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.quoteChar);  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
106	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart()  /  1);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart()  /  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart()  /  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    /    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	63	None	replace
107	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  /  1);  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  /  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  /  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    /    1);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
108	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar  /  1);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar  /  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar  /  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    /    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	63	None	replace
109	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar  /  1);  [CE]  cannot  find  symbol  escapeChar  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar  /  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar  /  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    /    1);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	63	None	replace
110	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  /  2);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  /  2);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  /  2);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    /    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	63	None	replace
111	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	3	None	replace
112	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	3	None	replace
113	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  out);  [CE]  cannot  find  symbol  out  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  out);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.quoteChar);    	non-compiled	[CE]  cannot  find  symbol  out	3	None	replace
114	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  null);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  null);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  null);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	3	None	replace
115	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	3	None	replace
116	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  escapeEmptyLines);  [CE]  cannot  find  symbol  escapeEmptyLines  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  escapeEmptyLines);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  escapeEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.quoteChar);    	non-compiled	[CE]  cannot  find  symbol  escapeEmptyLines	3	None	replace
117	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.DISABLED);  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    in);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
118	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.escape);  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    in);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
119	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  delimiter,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  delimiter,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  delimiter,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    escape);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	30	None	replace
120	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  this.delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  this.delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  this.delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    escape);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	30	None	replace
121	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  format.getDelimiter());  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  format.getDelimiter());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  format.getDelimiter());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    escape);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	30	None	replace
122	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getIgnoreSurroundingSpaces());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	58	None	replace
123	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getIgnoreSurroundingSpaces());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	58	None	replace
124	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getIgnoreSurroundingSpaces());  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getIgnoreSurroundingSpaces());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getIgnoreSurroundingSpaces());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getIgnoreSurroundingSpaces());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
125	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getIgnoreSurroundingSpaces());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	58	None	replace
126	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  escapeChar);  [CE]  cannot  find  symbol  escapeChar  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  escapeChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  escapeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getIgnoreSurroundingSpaces());    	non-compiled	[CE]  cannot  find  symbol  escapeChar	58	None	replace
127	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  ignoreEmptyLines);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  ignoreEmptyLines);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  ignoreEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getIgnoreSurroundingSpaces());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	58	None	replace
128	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  in);  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  in);	  this.quoteChar    =    mapNullToDisabled(format.getRangeChar());    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
129	[BUG]  [BUGGY]  this.quoteChar  =  DISABLED,  mapNullToDisabled(format.getRangeChar());  [CE]  ';'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  DISABLED,  mapNullToDisabled(format.getRangeChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  DISABLED,  mapNullToDisabled(format.getRangeChar());	  this.quoteChar    =    mapNullToDisabled(format.getRangeChar());    	non-compiled	[CE]  ';'  expected	76	None	replace
130	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  format.getRangeChar());  [CE]  cannot  find  symbol  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  format.getRangeChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  format.getRangeChar());	  this.quoteChar    =    mapNullToDisabled(format.getRangeChar());    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
131	[BUG]  [BUGGY]  this.quoteChar  =  mappingNullToDisabled(format.getRangeChar());  [CE]  cannot  find  symbol  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mappingNullToDisabled(format.getRangeChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mappingNullToDisabled(format.getRangeChar());	  this.quoteChar    =    mapNullToDisabled(format.getRangeChar());    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
132	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  format.getQuoteChar());  [CE]  cannot  find  symbol  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  format.getQuoteChar());	  this.quoteChar    =    mapNullToDisabled(format.getRangeChar());    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
133	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCommentStart());  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCommentStart());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCommentStart());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCommentStart());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	78	None	replace
134	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCommentStart());  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCommentStart());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCommentStart());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCommentStart());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
135	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentEnd());  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentEnd());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCommentStart());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
136	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentChar());  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCommentStart());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
137	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	2	None	replace
138	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart();  this.commmentStart  =  format.getCommentStart();  [CE]  variable  commmentStart  might  already  have  been  assigned  [FE]    NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart();  this.commmentStart  =  format.getCommentStart();  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart    =    format.getCommentStart();    this.commmentStart  =  format.getCommentStart();	  	non-compiled	[CE]  variable  commmentStart  might  already  have  been  assigned	53	None	add
139	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart();  this.commentStart  =  format.getCommentStart();  [CE]  cannot  find  symbol  commentStart  [FE]      NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart();  this.commentStart  =  format.getCommentStart();  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart    =    format.getCommentStart();    this.commentStart  =  format.getCommentStart();	  	non-compiled	[CE]  cannot  find  symbol  commentStart	53	None	add
140	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart();  this.commmentStart  =  format.getCommentEnd();  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart();  this.commmentStart  =  format.getCommentEnd();  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart    =    format.getCommentStart();    this.commmentStart  =  format.getCommentEnd();	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
141	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart();  this.commmentEnd  =  format.getCommentStart();  [CE]  cannot  find  symbol  commmentEnd  [FE]          NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart();  this.commmentEnd  =  format.getCommentStart();  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart    =    format.getCommentStart();    this.commmentEnd  =  format.getCommentStart();	  	non-compiled	[CE]  cannot  find  symbol  commmentEnd	53	None	add
142	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart();  this.commmentEnd  =  format.getCommentEnd();  [CE]  cannot  find  symbol  commmentEnd  [FE]            NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart();  this.commmentEnd  =  format.getCommentEnd();  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart    =    format.getCommentStart();    this.commmentEnd  =  format.getCommentEnd();	  	non-compiled	[CE]  cannot  find  symbol  commmentEnd	53	None	add
143	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart();  this.commmentStart  =  Format.getCommentStart();  [CE]  cannot  find  symbol  Format  [FE]              NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart();  this.commmentStart  =  Format.getCommentStart();  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart    =    format.getCommentStart();    this.commmentStart  =  Format.getCommentStart();	  	non-compiled	[CE]  cannot  find  symbol  Format	53	None	add
144	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart();  commmentStart  =  format.getCommentStart();  [CE]  variable  commmentStart  might  already  have  been  assigned  [FE]                NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart();  commmentStart  =  format.getCommentStart();  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart    =    format.getCommentStart();    commmentStart  =  format.getCommentStart();	  	non-compiled	[CE]  variable  commmentStart  might  already  have  been  assigned	53	None	add
145	[BUG]  [BUGGY]  char  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  char  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	char  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
146	[BUG]  [BUGGY]  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  variable  quoteChar  might  already  have  been  assigned  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  variable  quoteChar  might  already  have  been  assigned	20	None	replace
147	[BUG]  [BUGGY]  if(in!=  null)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(in!=  null)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(in!=  null)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	20	None	replace
148	[BUG]  [BUGGY]  if(in!=  null)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(in!=  null)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(in!=  null)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	20	None	replace
149	[BUG]  [BUGGY]  char  DISABLED  =  mapNullToDisabled(format.getSurroundingChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  cannot  find  symbol  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  char  DISABLED  =  mapNullToDisabled(format.getSurroundingChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	char  DISABLED  =  mapNullToDisabled(format.getSurroundingChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
150	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quotedChar,  escape);  [CE]  cannot  find  symbol  quotedChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quotedChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quotedChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    escape);    	non-compiled	[CE]  cannot  find  symbol  quotedChar	61	None	replace
151	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  null);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  null);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  null);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    null);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	9	None	replace
152	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar,  null);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar,  null);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar,  null);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    null);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	9	None	replace
153	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    null);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	9	None	replace
154	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    null);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	9	None	replace
155	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.categoryChar,  null);  [CE]  cannot  find  symbol  categoryChar  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.categoryChar,  null);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.categoryChar,  null);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    null);    	non-compiled	[CE]  cannot  find  symbol  categoryChar	9	None	replace
156	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commentChar,  null);  [CE]  cannot  find  symbol  commentChar  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commentChar,  null);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commentChar,  null);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    null);    	non-compiled	[CE]  cannot  find  symbol  commentChar	9	None	replace
157	[BUG]  [BUGGY]  if(commmentStart)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  incompatible  types  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(commmentStart)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(commmentStart)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  incompatible  types	22	None	replace
158	[BUG]  [BUGGY]  if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  variable  delimiter  might  already  have  been  assigned  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  variable  delimiter  might  already  have  been  assigned	22	None	replace
159	[BUG]  [BUGGY]  if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  variable  delimiter  might  already  have  been  assigned  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  variable  delimiter  might  already  have  been  assigned	22	None	replace
160	[BUG]  [BUGGY]  if(commmentStart)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(commmentStart)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(commmentStart)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  incompatible  types	22	None	replace
161	[BUG]  [BUGGY]  if(commmentStart)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  [CE]  illegal  start  of  expression  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(commmentStart)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(commmentStart)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
162	[BUG]  [BUGGY]  if(commmentStart)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  in.close();  }  [CE]  incompatible  types  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(commmentStart)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  in.close();  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(commmentStart)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  in.close();  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  incompatible  types	22	None	replace
163	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    out);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	71	None	replace
164	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    out);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	71	None	replace
165	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  null);  [CE]  cannot  find  symbol  escapeChar  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  null);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  null);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    quoteChar);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	8	None	replace
166	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	8	None	replace
167	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  quoteChar,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  quoteChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  quoteChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	8	None	replace
168	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.lineChar);  [CE]  cannot  find  symbol  lineChar  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.lineChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.lineChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.displayChar);    	non-compiled	[CE]  cannot  find  symbol  lineChar	43	None	replace
169	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.line);  [CE]  cannot  find  symbol  line  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.line);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.line);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.displayChar);    	non-compiled	[CE]  cannot  find  symbol  line	43	None	replace
170	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quotedChar,  delimiter);  [CE]  cannot  find  symbol  quotedChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quotedChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quotedChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    escapeChar);    	non-compiled	[CE]  cannot  find  symbol  quotedChar	70	None	replace
171	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quotes,  delimiter);  [CE]  cannot  find  symbol  quotes  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quotes,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quotes,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    escapeChar);    	non-compiled	[CE]  cannot  find  symbol  quotes	70	None	replace
172	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  description,  delimiter);  [CE]  cannot  find  symbol  description  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  description,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  description,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    escapeChar);    	non-compiled	[CE]  cannot  find  symbol  description	70	None	replace
173	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quoted);  [CE]  cannot  find  symbol  quoted  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quoted);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quoted);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    escapeChar);    	non-compiled	[CE]  cannot  find  symbol  quoted	70	None	replace
174	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd(),  in);  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd(),  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd(),  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
175	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd(),  delimiter);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd(),  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd(),  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
176	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart()  -  1;  [CE]  possible  loss  of  precision  [FE]    NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart()  -  1;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  format.getCommentStart()  -  1;	  this.commmentStart    =    format.getCommentStart();    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
177	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart()  +  1;  [CE]  possible  loss  of  precision  [FE]      NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart()  +  1;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  format.getCommentStart()  +  1;	  this.commmentStart    =    format.getCommentStart();    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
178	[BUG]  [BUGGY]  this.commmentStart  =  in.getCommentStart();  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  in.getCommentStart();  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  in.getCommentStart();	  this.commmentStart    =    format.getCommentStart();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
179	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart()  &  DISABLED;  [CE]  possible  loss  of  precision  [FE]          NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart()  &  DISABLED;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  format.getCommentStart()  &  DISABLED;	  this.commmentStart    =    format.getCommentStart();    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
180	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentEnd();  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentEnd();  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  format.getCommentEnd();	  this.commmentStart    =    format.getCommentStart();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
181	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart()  /  2;  [CE]  possible  loss  of  precision  [FE]              NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart()  /  2;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  format.getCommentStart()  /  2;	  this.commmentStart    =    format.getCommentStart();    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
182	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  1);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	56	None	replace
183	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoteChar,  1);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoteChar,  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoteChar,  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	56	None	replace
184	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  1);  [CE]  cannot  find  symbol  commentChar  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    1);    	non-compiled	[CE]  cannot  find  symbol  commentChar	56	None	replace
185	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getSurroundingChar());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getSurroundingChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	DISABLED  =  mapNullToDisabled(format.getSurroundingChar());	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	26	None	replace
186	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDelimiter());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDelimiter());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	DISABLED  =  mapNullToDisabled(format.getDelimiter());	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	26	None	replace
187	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDisplayChar());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDisplayChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	DISABLED  =  mapNullToDisabled(format.getDisplayChar());	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	26	None	replace
188	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getCommentStart());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	DISABLED  =  mapNullToDisabled(format.getCommentStart());	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	26	None	replace
189	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDisplay());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDisplay());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	DISABLED  =  mapNullToDisabled(format.getDisplay());	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	26	None	replace
190	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharIndex());  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharIndex());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharIndex());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
191	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharIndex()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharIndex()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
192	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharIndex());  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharIndex());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharIndex());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
193	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharIndex()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharIndex()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
194	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getCharIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getCharIndex()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getCharIndex()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
195	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCharIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCharIndex()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCharIndex()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
196	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCharIndex()  -  1);  [CE]  cannot  find  symbol  file  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCharIndex()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCharIndex()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol  file	19	None	replace
197	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comments);  [CE]  cannot  find  symbol  commentStart  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comments);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comments);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.comments);    	non-compiled	[CE]  cannot  find  symbol  commentStart	42	None	replace
198	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.comments);  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.comments);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.comments);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.comments);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
199	[BUG]  [BUGGY]  this.comments  =  mapNullToDisabled(format.getCommentStart(),  this.comments);  [CE]  cannot  find  symbol  comments  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.comments  =  mapNullToDisabled(format.getCommentStart(),  this.comments);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.comments  =  mapNullToDisabled(format.getCommentStart(),  this.comments);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.comments);    	non-compiled	[CE]  cannot  find  symbol  comments	42	None	replace
200	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comments);  [CE]  cannot  find  symbol  This  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comments);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comments);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.comments);    	non-compiled	[CE]  cannot  find  symbol  This	42	None	replace
201	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  in);  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  in);	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	23	None	replace
202	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getSurroundingChar());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getSurroundingChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.DISABLED  =  mapNullToDisabled(format.getSurroundingChar());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	23	None	replace
203	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDisplayChar());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDisplayChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDisplayChar());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	23	None	replace
204	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDelimiter());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDelimiter());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDelimiter());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	23	None	replace
205	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDisplayName());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDisplayName());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDisplayName());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	23	None	replace
206	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDisplayDisabled());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDisplayDisabled());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDisplayDisabled());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	23	None	replace
207	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  variable  quoteChar  might  already  have  been  assigned  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  variable  quoteChar  might  already  have  been  assigned	25	None	replace
208	[BUG]  [BUGGY]  This.DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  cannot  find  symbol  This  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  This.DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	This.DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  This	25	None	replace
209	[BUG]  [BUGGY]  this.desc  =  mapNullToDisabled(format.getDesc());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  cannot  find  symbol  desc  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.desc  =  mapNullToDisabled(format.getDesc());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.desc  =  mapNullToDisabled(format.getDesc());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  desc	25	None	replace
210	[BUG]  [BUGGY]  this.desc  =  mapNullToDisabled(format.getDelimiter());  [CE]  cannot  find  symbol  desc  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.desc  =  mapNullToDisabled(format.getDelimiter());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.desc  =  mapNullToDisabled(format.getDelimiter());	  this.desc    =    mapNullToDisabled(format.getDesc());    	non-compiled	[CE]  cannot  find  symbol  desc	75	None	replace
211	[BUG]  [BUGGY]  this.desc  =  mapNullToDisabled(format.getIgnoreDesc());  [CE]  cannot  find  symbol  desc  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.desc  =  mapNullToDisabled(format.getIgnoreDesc());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.desc  =  mapNullToDisabled(format.getIgnoreDesc());	  this.desc    =    mapNullToDisabled(format.getDesc());    	non-compiled	[CE]  cannot  find  symbol  desc	75	None	replace
212	[BUG]  [BUGGY]  this.desc  =  mapNullToDisabled(format.getDesc(),  in);  [CE]  cannot  find  symbol  desc  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.desc  =  mapNullToDisabled(format.getDesc(),  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.desc  =  mapNullToDisabled(format.getDesc(),  in);	  this.desc    =    mapNullToDisabled(format.getDesc());    	non-compiled	[CE]  cannot  find  symbol  desc	75	None	replace
213	[BUG]  [BUGGY]  this.desc  =  mapNullToDisabled(format.getComment());  [CE]  cannot  find  symbol  desc  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.desc  =  mapNullToDisabled(format.getComment());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.desc  =  mapNullToDisabled(format.getComment());	  this.desc    =    mapNullToDisabled(format.getDesc());    	non-compiled	[CE]  cannot  find  symbol  desc	75	None	replace
214	[BUG]  [BUGGY]  this.desc  =  mapNullToDisabled(format.getEscape());  [CE]  cannot  find  symbol  desc  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.desc  =  mapNullToDisabled(format.getEscape());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.desc  =  mapNullToDisabled(format.getEscape());	  this.desc    =    mapNullToDisabled(format.getDesc());    	non-compiled	[CE]  cannot  find  symbol  desc	75	None	replace
215	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	69	None	replace
216	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  quoteChar,  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  quoteChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  quoteChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	69	None	replace
217	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null,  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	69	None	replace
218	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	69	None	replace
219	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.commentChar,  in);  [CE]  cannot  find  symbol  commentChar  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.commentChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.commentChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    in);    	non-compiled	[CE]  cannot  find  symbol  commentChar	69	None	replace
220	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharacterIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharacterIndex()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharacterIndex()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
221	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterIndex());  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterIndex());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterIndex());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
222	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getCharacterIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getCharacterIndex()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getCharacterIndex()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
223	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterIndex()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterIndex()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
224	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCharacterIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCharacterIndex()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCharacterIndex()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
225	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCharacterIndex()  -  1);  [CE]  cannot  find  symbol  file  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCharacterIndex()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCharacterIndex()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol  file	66	None	replace
226	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getChars());  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getChars());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getChars());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getChars()    -    1);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
227	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getChars()  -  1);  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getChars()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getChars()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getChars()    -    1);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
228	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getChars());  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getChars());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getChars());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getChars()    -    1);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
229	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getChars()  -  1);  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getChars()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getChars()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getChars()    -    1);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
230	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getChars()  -  1);  [CE]  cannot  find  symbol  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getChars()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getChars()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getChars()    -    1);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
231	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getChars()  +  1);  [CE]  cannot  find  symbol  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getChars()  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getChars()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getChars()    -    1);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
232	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getChars()  -  1);  [CE]  cannot  find  symbol  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getChars()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getChars()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getChars()    -    1);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
233	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  DISABLED);  [CE]  cannot  find  symbol  out  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    sourceChar,    DISABLED);    	non-compiled	[CE]  cannot  find  symbol  out	40	None	replace
234	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.escape);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	44	None	replace
235	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.escape);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	44	None	replace
236	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.escape);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	44	None	replace
237	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar,  this.escape);  [CE]  cannot  find  symbol  categoryChar  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar,  this.escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar,  this.escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.escape);    	non-compiled	[CE]  cannot  find  symbol  categoryChar	44	None	replace
238	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null,  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null,  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	52	None	replace
239	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	52	None	replace
240	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  null,  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  null,  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape,  null,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	52	None	replace
241	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	52	None	replace
242	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  null);  [CE]  cannot  find  symbol  commentChar  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  null);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  null);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this.quoteChar);    	non-compiled	[CE]  cannot  find  symbol  commentChar	52	None	replace
243	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar,  DISABLED);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    DISABLED);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	60	None	replace
244	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    DISABLED);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	60	None	replace
245	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  sourceChar,  DISABLED);  [CE]  cannot  find  symbol  sourceChar  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  sourceChar,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  sourceChar,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    DISABLED);    	non-compiled	[CE]  cannot  find  symbol  sourceChar	60	None	replace
246	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  quoted);  [CE]  cannot  find  symbol  escapeChar  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  quoted);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar,  quoted);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    quoteChar);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	1	None	replace
247	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  quoteChar,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  quoteChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  quoteChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	36	None	replace
248	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  quoteChar,  delimiter);  [CE]  cannot  find  symbol  out  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  quoteChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  quoteChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  out	36	None	replace
249	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd())+  1;  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd())+  1;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd())+  1;	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd()    +    1);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
250	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  +  2);  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  +  2);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  +  2);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd()    +    1);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
251	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentEnd()  +  1);  [CE]  cannot  find  symbol  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentEnd()  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentEnd()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd()    +    1);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
252	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	7	None	replace
253	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	7	None	replace
254	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLines);  [CE]  cannot  find  symbol  commentLines  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLines);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this);    	non-compiled	[CE]  cannot  find  symbol  commentLines	7	None	replace
255	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getEscapeChar());  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getEscapeChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getEscapeChar());	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
256	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCommentChar());  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCommentChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getCommentChar());	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
257	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCommentStart());  [CE]  variable  quoteChar  might  already  have  been  assigned  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getCommentStart());	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  variable  quoteChar  might  already  have  been  assigned	21	None	replace
258	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  in);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	21	None	replace
259	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getSurroundingChar());  [CE]  cannot  find  symbol  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getSurroundingChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getSurroundingChar());	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
260	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart()  -  2);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart()  -  2);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart()  -  2);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart()    -    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	16	None	replace
261	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentStart()  -  1);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentStart()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentStart()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart()    -    1);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
262	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getQuoteChar());  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
263	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar(),  in);  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar(),  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar(),  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
264	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar()  +  1);  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar()  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
265	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  in.getCommentEnd(),  format.getQuoteChar());  [CE]  cannot  find  symbol  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  in.getCommentEnd(),  format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format,  in.getCommentEnd(),  format.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
266	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar(),  delimiter);  [CE]  cannot  find  symbol  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar(),  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar(),  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
267	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart()    +    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	32	None	replace
268	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  this.quoteChar  +  1);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  this.quoteChar  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  this.quoteChar  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart()    +    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	32	None	replace
269	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  false);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  false);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  false);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart()    +    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	32	None	replace
270	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  DISABLED);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart()    +    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	32	None	replace
271	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterEncoding());  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterEncoding());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterEncoding());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterEncoding()    -    1);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
272	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEncoding());  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEncoding());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEncoding());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterEncoding()    -    1);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
273	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharacterEncoding()  -  1);  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharacterEncoding()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharacterEncoding()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterEncoding()    -    1);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
274	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharacterEncoding());  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharacterEncoding());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharacterEncoding());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterEncoding()    -    1);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
275	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCharacterEncoding()  -  1);  [CE]  cannot  find  symbol  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCharacterEncoding()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCharacterEncoding()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterEncoding()    -    1);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
276	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getCharacterEncoding()  -  1);  [CE]  cannot  find  symbol  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getCharacterEncoding()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getCharacterEncoding()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterEncoding()    -    1);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
277	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCharacterEncoding()  -  1);  [CE]  cannot  find  symbol  file  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCharacterEncoding()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCharacterEncoding()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterEncoding()    -    1);    	non-compiled	[CE]  cannot  find  symbol  file	18	None	replace
278	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commentChar);  [CE]  cannot  find  symbol  commentStart  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commentChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  commentStart	73	None	replace
279	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commentChar);  [CE]  cannot  find  symbol  commentChar  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commentChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  commentChar	73	None	replace
280	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.comenceChar);  [CE]  cannot  find  symbol  comenceChar  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.comenceChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.comenceChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  comenceChar	73	None	replace
281	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.composeChar);  [CE]  cannot  find  symbol  composeChar  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.composeChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.composeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  composeChar	73	None	replace
282	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoted);  [CE]  cannot  find  symbol  quoted  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoted);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoted);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    escapeChar);    	non-compiled	[CE]  cannot  find  symbol  quoted	28	None	replace
283	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  QuoteChar);  [CE]  cannot  find  symbol  QuoteChar  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  QuoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  QuoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    escapeChar);    	non-compiled	[CE]  cannot  find  symbol  QuoteChar	28	None	replace
284	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quotedChar);  [CE]  cannot  find  symbol  quotedChar  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quotedChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quotedChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    escapeChar);    	non-compiled	[CE]  cannot  find  symbol  quotedChar	28	None	replace
285	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quotes);  [CE]  cannot  find  symbol  quotes  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quotes);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quotes);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    escapeChar);    	non-compiled	[CE]  cannot  find  symbol  quotes	28	None	replace
286	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEnd);  [CE]  cannot  find  symbol  commentStart  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEnd);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEnd);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentEnd);    	non-compiled	[CE]  cannot  find  symbol  commentStart	45	None	replace
287	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getQuoteChar());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	34	None	replace
288	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getQuoteChar());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	34	None	replace
289	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getQuoteChar());  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
290	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getQuoteChar());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	34	None	replace
291	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  out);  [CE]  cannot  find  symbol  out  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  out);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  out	34	None	replace
292	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getQuoteChar());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	34	None	replace
293	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCharacterIndex());  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCharacterIndex());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCharacterIndex());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
294	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharacterIndex());  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharacterIndex());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCharacterIndex());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
295	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEndIndex());  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEndIndex());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEndIndex());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
296	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCharacterIndex());  [CE]  cannot  find  symbol  file  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCharacterIndex());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCharacterIndex());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol  file	65	None	replace
297	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  text.getCharacterIndex());  [CE]  cannot  find  symbol  text  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  text.getCharacterIndex());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  text.getCharacterIndex());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol  text	65	None	replace
298	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeChar());  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.escape  =  mapNullToDisabled(format.getEscapeChar());	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
299	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this.commmentStart);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this.commmentStart);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  this.commmentStart);	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	55	None	replace
300	[BUG]  [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape());  [CE]  cannot  find  symbol  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.escape  =  mapEscapeNullToDisabled(format.getEscape());	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
301	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeLine());  [CE]  cannot  find  symbol  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeLine());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.escape  =  mapNullToDisabled(format.getEscapeLine());	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
302	[BUG]  [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape());  [CE]  cannot  find  symbol  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.escape  =  mapEscapeToDisabled(format.getEscape());	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
303	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeString());  [CE]  cannot  find  symbol  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeString());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.escape  =  mapNullToDisabled(format.getEscapeString());	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
304	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCommentEnd()  -  1);  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCommentEnd()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  format.getCommentEnd()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
305	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getCommentEnd()  -  1);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getCommentEnd()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart(),  in.getCommentEnd()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
306	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentChar());  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart());    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
307	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	33	None	replace
308	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	33	None	replace
309	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	33	None	replace
310	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentStart())+  1;  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentStart())+  1;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentStart())+  1;	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart())+    1;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
311	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())/  1;  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())/  1;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())/  1;	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart())+    1;    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	57	None	replace
312	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())+  2;  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())+  2;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())+  2;	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart())+    1;    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	57	None	replace
313	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())+  1L;  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())+  1L;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())+  1L;	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart())+    1;    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	57	None	replace
314	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.out);  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.out);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    out);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
315	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.commmentChar);  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.commmentChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.commmentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    out);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
316	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  DISABLED);  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  DISABLED);	  this.quoteChar    =    mapNullToDisabled(format.getRangeChar());    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
317	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  delimiter);  [CE]  cannot  find  symbol  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  delimiter);	  this.quoteChar    =    mapNullToDisabled(format.getRangeChar());    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
318	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DETERMINISTIC_COMMENT_START,  DISABLED);  [CE]  cannot  find  symbol  DETERMINISTIC_COMMENT_START  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DETERMINISTIC_COMMENT_START,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DETERMINISTIC_COMMENT_START,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    sourceChar,    DISABLED);    	non-compiled	[CE]  cannot  find  symbol  DETERMINISTIC_COMMENT_START	40	None	replace
319	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED,  DISABLED);  [CE]  cannot  find  symbol  DEPRECATED  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    sourceChar,    DISABLED);    	non-compiled	[CE]  cannot  find  symbol  DEPRECATED	40	None	replace
320	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  EQUENCE_CHAR,  DISABLED);  [CE]  cannot  find  symbol  EQUENCE_CHAR  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  EQUENCE_CHAR,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  EQUENCE_CHAR,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    sourceChar,    DISABLED);    	non-compiled	[CE]  cannot  find  symbol  EQUENCE_CHAR	40	None	replace
321	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    DISABLED);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	60	None	replace
322	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED,  commmentChar);  [CE]  cannot  find  symbol  commmentChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED,  commmentChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED,  commmentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    DISABLED);    	non-compiled	[CE]  cannot  find  symbol  commmentChar	60	None	replace
323	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.commmentChar);  [CE]  cannot  find  symbol  commmentChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.commmentChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.commmentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this);    	non-compiled	[CE]  cannot  find  symbol  commmentChar	68	None	replace
324	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null,  this);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null,  this);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null,  this);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	68	None	replace
325	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  DISABLED);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	52	None	replace
326	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null,  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null,  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  null,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	52	None	replace
327	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	52	None	replace
328	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  *  1);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  *  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  *  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
329	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  sourceChar,  escape);  [CE]  cannot  find  symbol  sourceChar  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  sourceChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  sourceChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    escape);    	non-compiled	[CE]  cannot  find  symbol  sourceChar	30	None	replace
330	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentStart);  [CE]  cannot  find  symbol  commentStart  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentStart);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentStart);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentEnd);    	non-compiled	[CE]  cannot  find  symbol  commentStart	45	None	replace
331	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLength);  [CE]  cannot  find  symbol  commentLength  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLength);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentLength);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentEnd);    	non-compiled	[CE]  cannot  find  symbol  commentLength	45	None	replace
332	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comment);  [CE]  cannot  find  symbol  comment  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comment);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comment);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar);    	non-compiled	[CE]  cannot  find  symbol  comment	10	None	replace
333	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar  +  1);  [CE]  cannot  find  symbol  commentChar  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar);    	non-compiled	[CE]  cannot  find  symbol  commentChar	10	None	replace
334	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart();  This.commmentStart  =  format.getCommentStart();  [CE]  cannot  find  symbol  This  [FE]    NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart();  This.commmentStart  =  format.getCommentStart();  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart    =    format.getCommentStart();    This.commmentStart  =  format.getCommentStart();	  	non-compiled	[CE]  cannot  find  symbol  This	53	None	add
335	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  DISABLED);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	3	None	replace
336	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  DEPRECATED);  [CE]  cannot  find  symbol  DEPRECATED  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  DEPRECATED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  DEPRECATED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.quoteChar);    	non-compiled	[CE]  cannot  find  symbol  DEPRECATED	3	None	replace
337	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLE());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLE());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLE());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	23	None	replace
338	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDisplay());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDisplay());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDisplay());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	23	None	replace
339	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  delimiter);  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  delimiter);	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	23	None	replace
340	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  1);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart()    +    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	32	None	replace
341	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  DISABLED  +  1);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  DISABLED  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  DISABLED  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart()    +    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	32	None	replace
342	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  escape);  [CE]  cannot  find  symbol  sourceChar  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    escape);    	non-compiled	[CE]  cannot  find  symbol  sourceChar	80	None	replace
343	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  descriptionChar,  escape);  [CE]  cannot  find  symbol  descriptionChar  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  descriptionChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  descriptionChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    escape);    	non-compiled	[CE]  cannot  find  symbol  descriptionChar	80	None	replace
344	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.commentChar);  [CE]  cannot  find  symbol  commentChar  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.commentChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.commentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  commentChar	31	None	replace
345	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  out);  [CE]  cannot  find  symbol  commentChar  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  out);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  commentChar	31	None	replace
346	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  in);  [CE]  cannot  find  symbol  commentChar  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  commentChar	31	None	replace
347	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comMENTChar);  [CE]  cannot  find  symbol  comMENTChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comMENTChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comMENTChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.comMENT_START);    	non-compiled	[CE]  cannot  find  symbol  comMENTChar	46	None	replace
348	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comMENT_Char);  [CE]  cannot  find  symbol  comMENT_Char  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comMENT_Char);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comMENT_Char);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.comMENT_START);    	non-compiled	[CE]  cannot  find  symbol  comMENT_Char	46	None	replace
349	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd(),  DISABLED  +  1);  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd(),  DISABLED  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd(),  DISABLED  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd()    +    1);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
350	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart()  -  2;  [CE]  possible  loss  of  precision  [FE]    NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart()  -  2;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  format.getCommentStart()  -  2;	  this.commmentStart    =    format.getCommentStart();    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
351	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart(displayChar);  [CE]  cannot  find  symbol  displayChar  [FE]      NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart(displayChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  format.getCommentStart(displayChar);	  this.commmentStart    =    format.getCommentStart();    	non-compiled	[CE]  cannot  find  symbol  displayChar	54	None	replace
352	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  null,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  null,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  null,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	8	None	replace
353	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  Format.getCommentEnd());  [CE]  cannot  find  symbol  Format  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  Format.getCommentEnd());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  Format.getCommentEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd());    	non-compiled	[CE]  cannot  find  symbol  Format	12	None	replace
354	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCommentEnd());  [CE]  cannot  find  symbol  file  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCommentEnd());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCommentEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd());    	non-compiled	[CE]  cannot  find  symbol  file	12	None	replace
355	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  Format.getCharacterEnd());  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  Format.getCharacterEnd());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  Format.getCharacterEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getCharacterEnd());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
356	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  DISABLED);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getQuoteChar());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	34	None	replace
357	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in,  out);  [CE]  cannot  find  symbol  out  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in,  out);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in,  out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    in);    	non-compiled	[CE]  cannot  find  symbol  out	69	None	replace
358	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in,  DISABLED);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	69	None	replace
359	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterEncoding()  -  1);  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterEncoding()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCharacterEncoding()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterEncoding()    -    1);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
360	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEncoding()  +  1);  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEncoding()  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEncoding()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterEncoding()    -    1);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
361	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED,  delimiter,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED,  delimiter,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED,  delimiter,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED,    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	47	None	replace
362	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED,  in,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED,  in,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED,  in,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED,    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	47	None	replace
363	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.char);  [CE]  <identifier>  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.char);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.char);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.displayChar);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
364	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.offsetChar);  [CE]  cannot  find  symbol  offsetChar  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.offsetChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.offsetChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.displayChar);    	non-compiled	[CE]  cannot  find  symbol  offsetChar	43	None	replace
365	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.offset);  [CE]  cannot  find  symbol  offset  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.offset);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.offset);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.displayChar);    	non-compiled	[CE]  cannot  find  symbol  offset	43	None	replace
366	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in  +  1);  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    in);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
367	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in,  DISABLED);  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    in);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
368	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharIndex()  +  1);  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharIndex()  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharIndex()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
369	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  DISABLED);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	72	None	replace
370	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  DEPRECATED);  [CE]  cannot  find  symbol  DEPRECATED  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  DEPRECATED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  DEPRECATED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.quoteChar);    	non-compiled	[CE]  cannot  find  symbol  DEPRECATED	72	None	replace
371	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  DISABLED);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	64	None	replace
372	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	64	None	replace
373	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  escapeChar);  [CE]  cannot  find  symbol  escapeChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  escapeChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  escapeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    escapeChar);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	70	None	replace
374	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  delimiter);  [CE]  cannot  find  symbol  sourceChar  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    escapeChar);    	non-compiled	[CE]  cannot  find  symbol  sourceChar	70	None	replace
375	[BUG]  [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  this.commmentStart);  [CE]  cannot  find  symbol  displayChar  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  this.commmentStart);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  this.commmentStart);	  this.displayChar    =    mapNullToDisabled(format.getDisplayChar());    	non-compiled	[CE]  cannot  find  symbol  displayChar	24	None	replace
376	[BUG]  [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar()  -  1);  [CE]  cannot  find  symbol  displayChar  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.displayChar  =  mapNullToDisabled(format.getDisplayChar()  -  1);	  this.displayChar    =    mapNullToDisabled(format.getDisplayChar());    	non-compiled	[CE]  cannot  find  symbol  displayChar	24	None	replace
377	[BUG]  [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  delimiter);  [CE]  cannot  find  symbol  displayChar  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.displayChar  =  mapNullToDisabled(format.getDisplayChar(),  delimiter);	  this.displayChar    =    mapNullToDisabled(format.getDisplayChar());    	non-compiled	[CE]  cannot  find  symbol  displayChar	24	None	replace
378	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  this.quoteChar);	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	55	None	replace
379	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.surroundingSpaces);  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.surroundingSpaces);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.surroundingSpaces);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    out);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
380	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  delimiter,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  delimiter,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  delimiter,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	51	None	replace
381	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  delimiter,  escapeChar);  [CE]  cannot  find  symbol  escapeChar  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  delimiter,  escapeChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  delimiter,  escapeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	51	None	replace
382	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar  +  1);  [CE]  cannot  find  symbol  composeChar  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.composeChar);    	non-compiled	[CE]  cannot  find  symbol  composeChar	50	None	replace
383	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar).DISABLED;  [CE]  cannot  find  symbol  composeChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar).DISABLED;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar).DISABLED;	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.composeChar);    	non-compiled	[CE]  cannot  find  symbol  composeChar	50	None	replace
384	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeLine);  [CE]  cannot  find  symbol  composeLine  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeLine);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeLine);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.composeChar);    	non-compiled	[CE]  cannot  find  symbol  composeLine	50	None	replace
385	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar()).DISABLED;  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar()).DISABLED;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar()).DISABLED;	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
386	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  Format.getQuoteChar());  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  Format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  Format.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
387	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  fileChar.getQuoteChar());  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  fileChar.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  fileChar.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
388	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getCompressedStart());  [CE]  cannot  find  symbol  quoteStart  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getCompressedStart());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteStart  =  mapNullToDisabled(format.getCompressedStart());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  quoteStart	74	None	replace
389	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getCommentChar());  [CE]  cannot  find  symbol  quoteStart  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getCommentChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteStart  =  mapNullToDisabled(format.getCommentChar());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  quoteStart	74	None	replace
390	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getComponentStart());  [CE]  cannot  find  symbol  quoteStart  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getComponentStart());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteStart  =  mapNullToDisabled(format.getComponentStart());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  quoteStart	74	None	replace
391	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.comments);  [CE]  cannot  find  symbol  comments  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.comments);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.comments);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  comments	73	None	replace
392	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.complier);  [CE]  cannot  find  symbol  complier  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.complier);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.complier);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  complier	73	None	replace
393	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  row);  [CE]  cannot  find  symbol  row  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  row);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  row);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    out);    	non-compiled	[CE]  cannot  find  symbol  row	4	None	replace
394	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  2);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  2);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  2);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	56	None	replace
395	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  3);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  3);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  3);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	56	None	replace
396	[BUG]  [BUGGY]  if(this.commmentStart  >=  0)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(this.commmentStart  >=  0)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(this.commmentStart  >=  0)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	20	None	replace
397	[BUG]  [BUGGY]  if(this.commmentStart  ==  0)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(this.commmentStart  ==  0)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(this.commmentStart  ==  0)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	20	None	replace
398	[BUG]  [BUGGY]  if(this.commmentStart  >=  0)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(this.commmentStart  >=  0)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(this.commmentStart  >=  0)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
399	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  sourceChar,  escape);  [CE]  cannot  find  symbol  sourceChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  sourceChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  sourceChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    escape);    	non-compiled	[CE]  cannot  find  symbol  sourceChar	61	None	replace
400	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEnd());  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEnd());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
401	[BUG]  [BUGGY]  this.desc  =  mapNullToDisabled(format.getDesc(),  DISABLED);  [CE]  cannot  find  symbol  desc  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.desc  =  mapNullToDisabled(format.getDesc(),  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.desc  =  mapNullToDisabled(format.getDesc(),  DISABLED);	  this.desc    =    mapNullToDisabled(format.getDesc());    	non-compiled	[CE]  cannot  find  symbol  desc	75	None	replace
402	[BUG]  [BUGGY]  this.desc  =  mapNullToDisabled(format.getDesc(),  delimiter);  [CE]  cannot  find  symbol  desc  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.desc  =  mapNullToDisabled(format.getDesc(),  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.desc  =  mapNullToDisabled(format.getDesc(),  delimiter);	  this.desc    =    mapNullToDisabled(format.getDesc());    	non-compiled	[CE]  cannot  find  symbol  desc	75	None	replace
403	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  DISABLED);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  DISABLED);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	21	None	replace
404	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCompressedStart());  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCompressedStart());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getCompressedStart());	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
405	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCompressedChar());  [CE]  cannot  find  symbol  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCompressedChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getCompressedChar());	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
406	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCommentStart());  [CE]  cannot  find  symbol  file  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCommentStart());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCommentStart());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCommentStart());    	non-compiled	[CE]  cannot  find  symbol  file	78	None	replace
407	[BUG]  [BUGGY]  this.void  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  <identifier>  expected  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.void  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.void  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
408	[BUG]  [BUGGY]  this.displayStart  =  mapNullToDisabled(format.getDisplayStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  cannot  find  symbol  displayStart  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.displayStart  =  mapNullToDisabled(format.getDisplayStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.displayStart  =  mapNullToDisabled(format.getDisplayStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  displayStart	25	None	replace
409	[BUG]  [BUGGY]  this.displayStart  =  mapNullToDisabled(format.getDisplayEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  cannot  find  symbol  displayStart  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.displayStart  =  mapNullToDisabled(format.getDisplayEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.displayStart  =  mapNullToDisabled(format.getDisplayEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  displayStart	25	None	replace
410	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getChars()  -  1);  [CE]  cannot  find  symbol  file  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getChars()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getChars()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getChars()    -    1);    	non-compiled	[CE]  cannot  find  symbol  file	67	None	replace
411	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DEPRECATED);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DEPRECATED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DEPRECATED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
412	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DETERMINISTIC_COMMENT_START);  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DETERMINISTIC_COMMENT_START);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DETERMINISTIC_COMMENT_START);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
413	[BUG]  [BUGGY]  this.quoteDelimiter  =  mapNullToDisabled(format.getQuoteDelimiter());  [CE]  cannot  find  symbol  quoteDelimiter  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteDelimiter  =  mapNullToDisabled(format.getQuoteDelimiter());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteDelimiter  =  mapNullToDisabled(format.getQuoteDelimiter());	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  quoteDelimiter	22	None	replace
414	[BUG]  [BUGGY]  This.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  cannot  find  symbol  This  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  This.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	This.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  This	22	None	replace
415	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  out);  [CE]  cannot  find  symbol  out  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  out);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getIgnoreSurroundingSpaces());    	non-compiled	[CE]  cannot  find  symbol  out	58	None	replace
416	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterIndex()  +  1);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterIndex()  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterIndex()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex()    -    1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
417	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDisplayName());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDisplayName());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	DISABLED  =  mapNullToDisabled(format.getDisplayName());	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	26	None	replace
418	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLE());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLE());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	DISABLED  =  mapNullToDisabled(format.getDISABLE());	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	26	None	replace
419	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getSurrounding());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getSurrounding());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	DISABLED  =  mapNullToDisabled(format.getSurrounding());	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	26	None	replace
420	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  in,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  in,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  in,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	1	None	replace
421	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCommentEnd()  -  1);  [CE]  cannot  find  symbol  file  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCommentEnd()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  file.getCommentEnd()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol  file	62	None	replace
422	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  quoteChar,  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  quoteChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape,  quoteChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	5	None	replace
423	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  quoteChar);  [CE]  cannot  find  symbol  sourceChar  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    in);    	non-compiled	[CE]  cannot  find  symbol  sourceChar	5	None	replace
424	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getCommentEnd()  -  1);  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getCommentEnd()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getCommentEnd()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
425	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  /  1);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  /  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  /  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
426	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar).DISABLED;  [CE]  cannot  find  symbol  categoryChar  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar).DISABLED;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar).DISABLED;	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.categoryChar);    	non-compiled	[CE]  cannot  find  symbol  categoryChar	41	None	replace
427	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar;  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar;	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.categoryChar);    	non-compiled	[CE]  ')'  expected	41	None	replace
428	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	33	None	replace
429	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  commmentStart);  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  commmentStart);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  commmentStart);	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	23	None	replace
430	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())  +  quoteChar;  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())  +  quoteChar;  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())  +  quoteChar;	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart())+    1;    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	57	None	replace
431	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  null);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  null);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  null);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	64	None	replace
432	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  DEPRECATED);  [CE]  cannot  find  symbol  DEPRECATED  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  DEPRECATED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar,  DEPRECATED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1,    this.quoteChar);    	non-compiled	[CE]  cannot  find  symbol  DEPRECATED	64	None	replace
433	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  this.ignoreEmptyLines);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  this.ignoreEmptyLines);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces(),  this.ignoreEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getIgnoreSurroundingSpaces());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	58	None	replace
434	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd(),  in.getCommentStart()  +  1);  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd(),  in.getCommentStart()  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd(),  in.getCommentStart()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd()    +    1);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
435	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  escapeChar);  [CE]  cannot  find  symbol  escapeChar  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  escapeChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar(),  escapeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  escapeChar	34	None	replace
436	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getQuoteChar());  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getQuoteChar());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	34	None	replace
437	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  deser);  [CE]  cannot  find  symbol  deser  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  deser);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  deser);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    escapeChar);    	non-compiled	[CE]  cannot  find  symbol  deser	28	None	replace
438	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  this.ignoreEmptyLines);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  this.ignoreEmptyLines);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar,  this.ignoreEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	72	None	replace
439	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getSurroundChar());  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getSurroundChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getSurroundChar());	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
440	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDisplayDisabled());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDisplayDisabled());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	DISABLED  =  mapNullToDisabled(format.getDisplayDisabled());	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	26	None	replace
441	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getSurroundingLine());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getSurroundingLine());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	DISABLED  =  mapNullToDisabled(format.getSurroundingLine());	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	26	None	replace
442	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentEnd()  /  1);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentEnd()  /  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentEnd()  /  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    /    1);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
443	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  null);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  null);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  null);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart()    +    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	32	None	replace
444	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  length  +  1);  [CE]  cannot  find  symbol  length  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  length  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  length  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart()    +    1);    	non-compiled	[CE]  cannot  find  symbol  length	32	None	replace
445	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  size  +  1);  [CE]  cannot  find  symbol  size  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  size  +  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  size  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart()    +    1);    	non-compiled	[CE]  cannot  find  symbol  size	32	None	replace
446	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.commmentChar);  [CE]  cannot  find  symbol  commmentChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.commmentChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.commmentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  commmentChar	73	None	replace
447	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commmentLine);  [CE]  cannot  find  symbol  commmentLine  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commmentLine);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commmentLine);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  commmentLine	73	None	replace
448	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commmentEscape);  [CE]  cannot  find  symbol  commmentEscape  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commmentEscape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commmentEscape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  commmentEscape	73	None	replace
449	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  this.commmentChar);  [CE]  cannot  find  symbol  out  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  this.commmentChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out,  this.commmentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  out	73	None	replace
450	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  format.getCommentEnd(),  format.getCharacterEnd());  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  format.getCommentEnd(),  format.getCharacterEnd());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format,  format.getCommentEnd(),  format.getCharacterEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getCharacterEnd());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
451	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  this.ignoreEmptyLines);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  this.ignoreEmptyLines);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  this.ignoreEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	3	None	replace
452	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  this.delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  this.delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar,  this.delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	3	None	replace
453	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  delimiter,  escapeChar);  [CE]  cannot  find  symbol  escapeChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  delimiter,  escapeChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  delimiter,  escapeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	2	None	replace
454	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED,  delimiter);  [CE]  cannot  find  symbol  DEPRECATED  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  DEPRECATED	47	None	replace
455	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  deser,  DISABLED);  [CE]  cannot  find  symbol  deser  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  deser,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  deser,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  deser	47	None	replace
456	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  quoteChar,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  quoteChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  quoteChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	8	None	replace
457	[BUG]  [BUGGY]  if(this.quoteChar!=  null)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  incomparable  types:  char  and  <null>  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(this.quoteChar!=  null)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(this.quoteChar!=  null)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  incomparable  types:  char  and  <null>	20	None	replace
458	[BUG]  [BUGGY]  if(this.commmentStart  <  =  0)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(this.commmentStart  <  =  0)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(this.commmentStart  <  =  0)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
459	[BUG]  [BUGGY]  if(this.commmentStart  <  =  0)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(this.commmentStart  <  =  0)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(this.commmentStart  <  =  0)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
460	[BUG]  [BUGGY]  if(this.commmentStart  >=  quoteChar)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(this.commmentStart  >=  quoteChar)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(this.commmentStart  >=  quoteChar)  {  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	20	None	replace
461	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format,  format.getRangeChar());  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format,  format.getRangeChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format,  format.getRangeChar());	  this.quoteChar    =    mapNullToDisabled(format.getRangeChar());    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
462	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  delimiter);	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	55	None	replace
463	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.commmentLines);  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.commmentLines);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.commmentLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    out);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
464	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.commmentLine);  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.commmentLine);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.commmentLine);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    out);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
465	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.renderer);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.renderer);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.renderer);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    out);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
466	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  format.getCommentEnd(),  format.getQuoteChar());  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  format.getCommentEnd(),  format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format,  format.getCommentEnd(),  format.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
467	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  file.getQuoteChar());  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  file.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  file.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
468	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getCommentEnd()  -  1);  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getCommentEnd()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getCommentEnd()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
469	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getCommentLines()  -  1);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getCommentLines()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getCommentLines()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
470	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getCommentStart()  -  1);  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getCommentStart()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in.getCommentStart()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
471	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.quoteChar,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.quoteChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.quoteChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    escape);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	30	None	replace
472	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  this.ignoreEmptyLines);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  this.ignoreEmptyLines);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  this.ignoreEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	52	None	replace
473	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  this.DISABLED);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  this.DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar,  this.DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this.quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	52	None	replace
474	[BUG]  [BUGGY]  if(quoteChar  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  incomparable  types:  char  and  <null>  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(quoteChar  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(quoteChar  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  incomparable  types:  char  and  <null>	22	None	replace
475	[BUG]  [BUGGY]  if(this.commmentStart  ==  quoteChar)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  variable  delimiter  might  already  have  been  assigned  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(this.commmentStart  ==  quoteChar)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(this.commmentStart  ==  quoteChar)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  variable  delimiter  might  already  have  been  assigned	22	None	replace
476	[BUG]  [BUGGY]  if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.commmentStart  =  in;  }  [CE]  incompatible  types  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.commmentStart  =  in;  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.commmentStart  =  in;  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  incompatible  types	22	None	replace
477	[BUG]  [BUGGY]  if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.commmentStart  =  in;  }  [CE]  incompatible  types  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.commmentStart  =  in;  }  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.commmentStart  =  in;  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  incompatible  types	22	None	replace
478	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  in.length  -  1);  [CE]  cannot  find  symbol  length  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  in.length  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  in.length  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart()    -    1);    	non-compiled	[CE]  cannot  find  symbol  length	16	None	replace
479	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  this.quoteChar  -  1);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  this.quoteChar  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart(),  this.quoteChar  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentStart()    -    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	16	None	replace
480	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  this.labelChar);  [CE]  cannot  find  symbol  labelChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  this.labelChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  this.labelChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.DISABLED);    	non-compiled	[CE]  cannot  find  symbol  labelChar	39	None	replace
481	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  this.delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  this.delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED,  this.delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.DISABLED);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	39	None	replace
482	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  deser,  quoteChar,  escape);  [CE]  cannot  find  symbol  deser  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  deser,  quoteChar,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  deser,  quoteChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    escape);    	non-compiled	[CE]  cannot  find  symbol  deser	80	None	replace
483	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  descriptionChar);  [CE]  cannot  find  symbol  descriptionChar  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  descriptionChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  descriptionChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    EQUENCE_CHAR);    	non-compiled	[CE]  cannot  find  symbol  descriptionChar	37	None	replace
484	[BUG]  [BUGGY]  this.desc  =  mapNullToDisabled(format.getDescChar());  [CE]  cannot  find  symbol  desc  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.desc  =  mapNullToDisabled(format.getDescChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.desc  =  mapNullToDisabled(format.getDescChar());	  this.desc    =    mapNullToDisabled(format.getDesc());    	non-compiled	[CE]  cannot  find  symbol  desc	75	None	replace
485	[BUG]  [BUGGY]  this.disabled  =  mapNullToDisabled(format.getDisabled());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  cannot  find  symbol  disabled  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.disabled  =  mapNullToDisabled(format.getDisabled());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.disabled  =  mapNullToDisabled(format.getDisabled());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  disabled	25	None	replace
486	[BUG]  [BUGGY]  this.divideDisabled  =  mapNullToDisabled(format.getDivideDisabled());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  cannot  find  symbol  divideDisabled  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.divideDisabled  =  mapNullToDisabled(format.getDivideDisabled());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.divideDisabled  =  mapNullToDisabled(format.getDivideDisabled());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  divideDisabled	25	None	replace
487	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DEPRECATED);  [CE]  cannot  find  symbol  DEPRECATED  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DEPRECATED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DEPRECATED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    quotedChar);    	non-compiled	[CE]  cannot  find  symbol  DEPRECATED	6	None	replace
488	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DETERMINATED);  [CE]  cannot  find  symbol  DETERMINATED  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DETERMINATED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DETERMINATED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in,    quotedChar);    	non-compiled	[CE]  cannot  find  symbol  DETERMINATED	6	None	replace
489	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in,  delimiter);  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    in);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
490	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in,  null);  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in,  null);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in,  null);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    in);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
491	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in,  format);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in,  format);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in,  format);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    in);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
492	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED,  quoteChar,  delimiter);  [CE]  cannot  find  symbol  DEPRECATED  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED,  quoteChar,  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED,  quoteChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  DEPRECATED	36	None	replace
493	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  format.getCommentStart(),  format.getCommentEnd());  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format,  format.getCommentStart(),  format.getCommentEnd());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format,  format.getCommentStart(),  format.getCommentEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    format.getCommentEnd());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
494	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DETERMINATED,  DISABLED);  [CE]  cannot  find  symbol  DETERMINATED  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DETERMINATED,  DISABLED);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DETERMINATED,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    sourceChar,    DISABLED);    	non-compiled	[CE]  cannot  find  symbol  DETERMINATED	40	None	replace
495	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.categoryChar);  [CE]  cannot  find  symbol  categoryChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.categoryChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.categoryChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this);    	non-compiled	[CE]  cannot  find  symbol  categoryChar	68	None	replace
496	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.commmentLines);  [CE]  cannot  find  symbol  commmentLines  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.commmentLines);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.commmentLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null,    this);    	non-compiled	[CE]  cannot  find  symbol  commmentLines	68	None	replace
497	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getCharacterStart());  [CE]  cannot  find  symbol  quoteStart  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getCharacterStart());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteStart  =  mapNullToDisabled(format.getCharacterStart());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  cannot  find  symbol  quoteStart	74	None	replace
498	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escape);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
499	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escapeChar);  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escapeChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escapeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
500	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  quoteChar);  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
501	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  in);  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
502	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  in);  [CE]  cannot  find  symbol  sourceChar  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  in);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar,    in);    	non-compiled	[CE]  cannot  find  symbol  sourceChar	5	None	replace
503	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commmentLine);  [CE]  cannot  find  symbol  commmentLine  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commmentLine);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commmentLine);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  commmentLine	77	None	replace
504	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commmentEscape);  [CE]  cannot  find  symbol  commmentEscape  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commmentEscape);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commmentEscape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  commmentEscape	77	None	replace
505	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commment);  [CE]  cannot  find  symbol  commment  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commment);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commment);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commmentChar);    	non-compiled	[CE]  cannot  find  symbol  commment	77	None	replace
506	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  file.getCommentStart());  [CE]  cannot  find  symbol  file  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  file.getCommentStart());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  file.getCommentStart());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCommentStart());    	non-compiled	[CE]  cannot  find  symbol  file	78	None	replace
507	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.paintChar);  [CE]  cannot  find  symbol  paintChar  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.paintChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.paintChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.displayChar);    	non-compiled	[CE]  cannot  find  symbol  paintChar	43	None	replace
508	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escapeChar);  [CE]  cannot  find  symbol  escapeChar  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escapeChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escapeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.displayChar);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	43	None	replace
509	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.placeChar);  [CE]  cannot  find  symbol  placeChar  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.placeChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.placeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.displayChar);    	non-compiled	[CE]  cannot  find  symbol  placeChar	43	None	replace
510	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quotedChar);  [CE]  cannot  find  symbol  quotedChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quotedChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quotedChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter,    escapeChar);    	non-compiled	[CE]  cannot  find  symbol  quotedChar	70	None	replace
511	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart(this.quoteChar);  [CE]  method  getCommentStart  in  class  CSVFormat  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart(this.quoteChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  format.getCommentStart(this.quoteChar);	  this.commmentStart    =    format.getCommentStart();    	non-compiled	[CE]  method  getCommentStart  in  class  CSVFormat  cannot  be  applied  to  given  types;	54	None	replace
512	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart(),  delimiter);  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart(),  delimiter);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  format.getCommentStart(),  delimiter);	  this.commmentStart    =    format.getCommentStart();    	non-compiled	[CE]  ';'  expected	54	None	replace
513	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart(this.commentChar);  [CE]  cannot  find  symbol  commentChar  [FE]        NullPointerException    [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  format.getCommentStart(this.commentChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  format.getCommentStart(this.commentChar);	  this.commmentStart    =    format.getCommentStart();    	non-compiled	[CE]  cannot  find  symbol  commentChar	54	None	replace
514	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comMENT_END);  [CE]  cannot  find  symbol  comMENT_END  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comMENT_END);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comMENT_END);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.comMENT_START);    	non-compiled	[CE]  cannot  find  symbol  comMENT_END	46	None	replace
515	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commands);  [CE]  cannot  find  symbol  commands  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commands);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commands);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.comments);    	non-compiled	[CE]  cannot  find  symbol  commands	42	None	replace
516	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  Format.getCharacterIndex());  [CE]  cannot  find  symbol  Format  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  Format.getCharacterIndex());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  Format.getCharacterIndex());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol  Format	65	None	replace
517	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  file.getCharacterIndex());  [CE]  cannot  find  symbol  file  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  file.getCharacterIndex());  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  file.getCharacterIndex());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCharacterIndex());    	non-compiled	[CE]  cannot  find  symbol  file	65	None	replace
518	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCommentEnd()  -  1);  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCommentEnd()  -  1);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  format.getCommentEnd()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in.getCommentEnd()    -    1);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
519	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.commentChar);  [CE]  cannot  find  symbol  commentStart  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.commentChar);  [BUGGY]      this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  this.commentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    this.commentChar,    delimiter);    	non-compiled	[CE]  cannot  find  symbol  commentStart	31	None	replace
