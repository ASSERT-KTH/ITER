bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	1	None	replace
2	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  delimiter);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	1	None	replace
3	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	1	None	replace
4	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  out);  [CE]  cannot  find  symbol  out  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  out);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  cannot  find  symbol  out	1	None	replace
5	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoteChar,  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoteChar,  in);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoteChar,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	1	None	replace
6	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quotedChar);  [CE]  cannot  find  symbol  quotedChar  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quotedChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  quotedChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  cannot  find  symbol  quotedChar	1	None	replace
7	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	11	None	replace
8	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  quoteChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	11	None	replace
9	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  null);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	11	None	replace
10	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar);  [CE]  cannot  find  symbol  commentChar  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null);    	non-compiled	[CE]  cannot  find  symbol  commentChar	11	None	replace
11	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in);  [CE]  cannot  find  symbol  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
12	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd());  [CE]  cannot  find  symbol  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
13	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter);  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
14	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getCharacterEnd());  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getCharacterEnd());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getCharacterEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
15	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar());  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  format.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
16	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart()  -  1);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart()  -  1);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	4	None	replace
17	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  -  1);  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  -  1);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
18	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEncoding()  -  1);  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEncoding()  -  1);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterEncoding()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
19	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharIndex()  -  1);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharIndex()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
20	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	      	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	7	None	replace
21	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  variable  quoteChar  might  already  have  been  assigned  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	      	non-compiled	[CE]  variable  quoteChar  might  already  have  been  assigned	7	None	replace
22	[BUG]  [BUGGY]  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  variable  delimiter  might  already  have  been  assigned  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	      	non-compiled	[CE]  variable  delimiter  might  already  have  been  assigned	7	None	replace
23	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED());	      	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	7	None	replace
24	[BUG]  [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar());  [CE]  cannot  find  symbol  displayChar  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.displayChar  =  mapNullToDisabled(format.getDisplayChar());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.displayChar  =  mapNullToDisabled(format.getDisplayChar());	      	non-compiled	[CE]  cannot  find  symbol  displayChar	7	None	replace
25	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	      	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	7	None	replace
26	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  cannot  assign  a  value  to  final  variable  DISABLED  [FE]                                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	DISABLED  =  mapNullToDisabled(format.getDISABLED());	      	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  DISABLED	7	None	replace
27	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quoteChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	2	None	replace
28	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar);  [CE]  cannot  find  symbol  escapeChar  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	2	None	replace
29	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	2	None	replace
30	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escape);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	2	None	replace
31	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  delimiter);  [CE]  cannot  find  symbol  commentChar  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  delimiter);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol  commentChar	2	None	replace
32	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart()  +  1);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart()  +  1);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    +    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	5	None	replace
33	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart());  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    +    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	5	None	replace
34	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar());  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    +    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	5	None	replace
35	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  +  1);  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  +  1);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentEnd()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    +    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
36	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoteChar,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoteChar,  delimiter);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoteChar,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	6	None	replace
37	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  EQUENCE_CHAR);  [CE]  cannot  find  symbol  EQUENCE_CHAR  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  EQUENCE_CHAR);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  EQUENCE_CHAR);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar);    	non-compiled	[CE]  cannot  find  symbol  EQUENCE_CHAR	6	None	replace
38	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  errorChar);  [CE]  cannot  find  symbol  errorChar  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  errorChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  errorChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar);    	non-compiled	[CE]  cannot  find  symbol  errorChar	6	None	replace
39	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	9	None	replace
40	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  DISABLED);  [CE]  cannot  find  symbol  sourceChar  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  DISABLED);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED);    	non-compiled	[CE]  cannot  find  symbol  sourceChar	9	None	replace
41	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar);  [CE]  cannot  find  symbol  categoryChar  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.categoryChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DEFAULT_COMMENT_START);    	non-compiled	[CE]  cannot  find  symbol  categoryChar	8	None	replace
42	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comments);  [CE]  cannot  find  symbol  comments  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comments);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comments);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DEFAULT_COMMENT_START);    	non-compiled	[CE]  cannot  find  symbol  comments	8	None	replace
43	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.displayChar);  [CE]  cannot  find  symbol  displayChar  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.displayChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.displayChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DEFAULT_COMMENT_START);    	non-compiled	[CE]  cannot  find  symbol  displayChar	8	None	replace
44	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DEPRINT);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	10	None	replace
45	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEnd);  [CE]  cannot  find  symbol  commentEnd  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEnd);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentEnd);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DEFAULT_COMMENT_START);    	non-compiled	[CE]  cannot  find  symbol  commentEnd	8	None	replace
46	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comMENT_START);  [CE]  cannot  find  symbol  comMENT_START  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comMENT_START);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.comMENT_START);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DEFAULT_COMMENT_START);    	non-compiled	[CE]  cannot  find  symbol  comMENT_START	8	None	replace
47	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED,  delimiter);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	9	None	replace
48	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  out);  [CE]  cannot  find  symbol  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  out);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
49	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  -  1);  [CE]  cannot  find  symbol  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  -  1);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
50	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar);  [CE]  cannot  find  symbol  composeChar  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.composeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DEPRINT);    	non-compiled	[CE]  cannot  find  symbol  composeChar	10	None	replace
51	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  delimiter);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  delimiter);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	11	None	replace
52	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	11	None	replace
53	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  format.getCommentStart();  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	add	this.commmentStart  =  format.getCommentStart();	      	compilable	  [FE]  NullPointerException  	7	49	replace
54	[BUG]  [BUGGY]  this.commmentStart  =  format.getCommentStart();  [FE]  NullPointerException  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  format.getCommentStart();  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  format.getCommentStart();	      	compilable	  [FE]  NullPointerException  	7	49	replace
55	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape());  [CE]  variable  escape  might  already  have  been  assigned  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.escape  =  mapNullToDisabled(format.getEscape());	      	non-compiled	[CE]  variable  escape  might  already  have  been  assigned	7	None	replace
56	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  1);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  1);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    +    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	5	None	replace
57	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())+  1;  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())+  1;  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getCommentStart())+  1;	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    +    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	5	None	replace
58	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces());  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  format.getIgnoreSurroundingSpaces());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    +    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	5	None	replace
59	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar);  [CE]  cannot  find  symbol  sourceChar  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  sourceChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar);    	non-compiled	[CE]  cannot  find  symbol  sourceChar	6	None	replace
60	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	1	None	replace
61	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  escape);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	1	None	replace
62	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentEnd()  -  1);  [CE]  cannot  find  symbol  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentEnd()  -  1);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentEnd()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
63	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  /  1);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  /  1);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  /  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	4	None	replace
64	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	4	None	replace
65	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterIndex());  [CE]  cannot  find  symbol  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterIndex());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterIndex());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
66	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterIndex()  -  1);  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterIndex()  -  1);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCharacterIndex()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
67	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getChars()  -  1);  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getChars()  -  1);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getChars()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
68	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  this);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	11	None	replace
69	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  null,  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    null);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	11	None	replace
70	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escapeChar);  [CE]  cannot  find  symbol  escapeChar  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escapeChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escapeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol  escapeChar	2	None	replace
71	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  out);  [CE]  cannot  find  symbol  out  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  out);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  cannot  find  symbol  out	2	None	replace
72	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.quoteChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	1	None	replace
73	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commmentChar);  [CE]  cannot  find  symbol  commmentChar  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commmentChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in,  this.commmentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  cannot  find  symbol  commmentChar	1	None	replace
74	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getQuoteChar());  [CE]  cannot  find  symbol  quoteStart  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteStart  =  mapNullToDisabled(format.getQuoteChar());	      	non-compiled	[CE]  cannot  find  symbol  quoteStart	7	None	replace
75	[BUG]  [BUGGY]  this.desc  =  mapNullToDisabled(format.getDesc());  [CE]  cannot  find  symbol  desc  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.desc  =  mapNullToDisabled(format.getDesc());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.desc  =  mapNullToDisabled(format.getDesc());	      	non-compiled	[CE]  cannot  find  symbol  desc	7	None	replace
76	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar());  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.quoteChar  =  mapNullToDisabled(format.getRangeChar());	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
77	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commmentChar);  [CE]  cannot  find  symbol  commmentChar  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commmentChar);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commmentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DEPRINT);    	non-compiled	[CE]  cannot  find  symbol  commmentChar	10	None	replace
78	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentStart());  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentStart());  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in.getCommentStart());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    +    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
79	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED);  [CE]  cannot  find  symbol  DEPRECATED  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED);    	non-compiled	[CE]  cannot  find  symbol  DEPRECATED	9	None	replace
80	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoteChar,  escape);  [CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoteChar,  escape);  [BUGGY]    this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	63	63	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  quoteChar,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    quoteChar);    	non-compiled	[CE]  method  mapNullToDisabled  in  class  Lexer  cannot  be  applied  to  given  types;	6	None	replace
