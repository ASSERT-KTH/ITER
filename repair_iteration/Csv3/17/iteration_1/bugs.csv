bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]    Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
2	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]      Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
3	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
4	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
5	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
6	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
7	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]    [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
9	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape());  [CE]  illegal  start  of  expression  [FE]    Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape());  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape());	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
10	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  [CE]  illegal  start  of  expression  [FE]      Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
11	[BUG]  [BUGGY]  if(in!=  null)  {  for(final  char  commmentStart  :  in.getComments())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  if(in!=  null)  {  for(final  char  commmentStart  :  in.getComments())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  for(final  char  commmentStart  :  in.getComments())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
12	[BUG]  [BUGGY]  if(in!=  null)  {  for(final  char  commmentStart  :  in.getCommentStarts())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  if(in!=  null)  {  for(final  char  commmentStart  :  in.getCommentStarts())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  for(final  char  commmentStart  :  in.getCommentStarts())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
13	[BUG]  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]    Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
14	[BUG]  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [CE]  ';'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine	}  	non-compiled	[CE]  ';'  expected	33	None	replace
15	[BUG]  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines	}  	non-compiled	[CE]  ';'  expected	33	None	replace
16	[BUG]  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)  [CONTEXT]  Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]    [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
