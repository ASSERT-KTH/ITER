bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  if(this.in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(this.in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
6	[BUG]  [BUGGY]  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
7	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
8	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar());  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getRangeChar());	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCommentChar());  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCommentChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getCommentChar());	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getEscapeChar());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getEscapeChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getEscapeChar());	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getSurroundingChar());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getSurroundingChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getSurroundingChar());	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCurrentChar());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCurrentChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getCurrentChar());	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  in);  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  in);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  in);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
14	[BUG]  [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape());  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeToDisabled(format.getEscape());	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeChar());  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscapeChar());	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape());  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeNullToDisabled(format.getEscape());	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  this.escape  =  mapEscape(format.getEscape());  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.escape  =  mapEscape(format.getEscape());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscape(format.getEscape());	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeLines());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeLines());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscapeLines());	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.  [CE]  <identifier>  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  <identifier>  expected	15	None	replace
26	[BUG]  [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.  [CE]  <identifier>  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  <identifier>  expected	15	None	replace
28	[BUG]  [BUGGY]  &&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  &&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	&&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  not  a  statement	15	None	replace
30	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in);  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  ignoreEmptyLines);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  ignoreEmptyLines);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  ignoreEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentsStart());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentsStart());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentsStart());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  ignoreEmptyLines);  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  ignoreEmptyLines);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  ignoreEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in);  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
43	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
44	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines();  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  in.getIgnoreEmptyLines();	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  +  1;  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  +  1;  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  +  1;	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  -  1;  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  -  1;  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  -  1;	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in);  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  ';'  expected	4	None	replace
49	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  /  2;  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  /  2;  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  /  2;	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  AssertionError(in,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  AssertionError(in,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	AssertionError(in,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  ';'  expected	13	None	replace
52	[BUG]  [BUGGY]  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  if(escape)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(escape)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(escape)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(in);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(in);	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getCommentStarts())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
59	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(in);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  This.commmentStart  =  mapNullToDisabled(in);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(in);	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getCommentStarts())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
60	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(this.commentStart);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(this.commentStart);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(this.commentStart);	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getCommentStarts())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
61	[BUG]  [BUGGY]  final  char  commmentStart  =  in.getCommentStarts();  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  final  char  commmentStart  =  in.getCommentStarts();  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  char  commmentStart  =  in.getCommentStarts();	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getCommentStarts())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(this.commmentStart);  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(this.commmentStart);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(this.commmentStart);	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getCommentStarts())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
63	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
64	[BUG]  [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
65	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
66	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(for.getCommentStart());  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(for.getCommentStart());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(for.getCommentStart());	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  ';'  expected	14	None	replace
68	[BUG]  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  ';'  expected	15	None	replace
69	[BUG]  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  ';'  expected	15	None	replace
70	[BUG]  [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  ';'  expected	15	None	replace
71	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(commentStart);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(commentStart);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(commentStart);	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
72	[BUG]  [BUGGY]  if(in!=  null)  {  for(final  char  commmentStart  :  out.getComments())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in!=  null)  {  for(final  char  commmentStart  :  out.getComments())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  for(final  char  commmentStart  :  out.getComments())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  final  char  commmentStart  =  in.getComments();  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  final  char  commmentStart  =  in.getComments();  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  char  commmentStart  =  in.getComments();	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
74	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(commentStart);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  This.commmentStart  =  mapNullToDisabled(commentStart);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(commentStart);	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
75	[BUG]  [BUGGY]  if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
76	[BUG]  [BUGGY]  if(this.commmentStart!=  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(this.commmentStart!=  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
77	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
78	[BUG]  [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
79	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
80	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED);  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
81	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  +  1);  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  +  1);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
82	[BUG]  [BUGGY]  if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
83	[BUG]  [BUGGY]  if(this.commmentStart!=  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(this.commmentStart!=  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
84	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  delimiter);  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  delimiter);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  delimiter);	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
85	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  in);  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  in);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  in);	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
86	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
87	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteStart  =  mapNullToDisabled(format.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
88	[BUG]  [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
89	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getIgnoreChar());  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getIgnoreChar());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getIgnoreChar());	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
90	[BUG]  [BUGGY]  if(in!=  null)  {  for(final  char  commmentStart  :  in.getCommentEnds())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in!=  null)  {  for(final  char  commmentStart  :  in.getCommentEnds())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  for(final  char  commmentStart  :  in.getCommentEnds())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getCommentStarts())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
91	[BUG]  [BUGGY]  if(in!=  null)  {  for(final  char  commmentStart  :  in.getCommentStart())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in!=  null)  {  for(final  char  commmentStart  :  in.getCommentStart())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  for(final  char  commmentStart  :  in.getCommentStart())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getCommentStarts())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
92	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreSurroundingLines();  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreSurroundingLines();  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreSurroundingLines();	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
93	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(0);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(0);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(0);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
94	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(2);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(2);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(2);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
95	[BUG]  [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
96	[BUG]  [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
97	[BUG]  [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
98	[BUG]  [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  in.close();  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  in.close();  }	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ignor  [CE]  not  a  statement  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ignor  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ignor	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  not  a  statement	5	None	replace
100	[BUG]  [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( " ");  }	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
101	[BUG]  [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  ';'  expected	14	None	replace
102	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DISABLED);  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DISABLED);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
103	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  -  1);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  -  1);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
104	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  +  1);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  +  1);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
105	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  ';'  expected	14	None	replace
106	[BUG]  [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  ';'  expected	14	None	replace
107	[BUG]  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreE  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreE  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreE	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  ';'  expected	14	None	replace
108	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getComments());  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getComments());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(in.getComments());	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
109	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in;  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(in;  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(in;	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  ')'  expected	11	None	replace
110	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(in.getComments());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  This.commmentStart  =  mapNullToDisabled(in.getComments());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(in.getComments());	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
111	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape()  +  1);  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape()  +  1);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape()  +  1);	  this.escape    =    mapNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
112	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(text.getCommentStart());  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(text.getCommentStart());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(text.getCommentStart());	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getCommentStarts())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
113	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  delimiter);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  delimiter);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  delimiter);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
114	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  ';'  expected	15	None	replace
115	[BUG]  [BUGGY]  if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
116	[BUG]  [BUGGY]  if(quoteChar  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(quoteChar  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(quoteChar  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
117	[BUG]  [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
118	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(in);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(in);  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(in);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
119	[BUG]  [BUGGY]  if(this.ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(this.ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
120	[BUG]  [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
121	[BUG]  [BUGGY]  if(this.ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(this.ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
122	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
123	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
124	[BUG]  [BUGGY]  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
125	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in);  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();    [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in);  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]      [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in);  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
