bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.  [CE]  <identifier>  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.	  if(in    ==    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.    	non-compiled	[CE]  <identifier>  expected	27	None	replace
2	[BUG]  [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [CE]  not  a  statement  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines	  if(in    ==    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.    	non-compiled	[CE]  not  a  statement	27	None	replace
3	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(Format.getEscape());  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(Format.getEscape());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(Format.getEscape());	  this.escape    =    mapNullToDisabled(format.getEscape()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
4	[BUG]  [BUGGY]  This.escape  =  mapNullToDisabled(format.getEscape());  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.escape  =  mapNullToDisabled(format.getEscape());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.escape  =  mapNullToDisabled(format.getEscape());	  this.escape    =    mapNullToDisabled(format.getEscape()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
5	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
6	[BUG]  [BUGGY]  This.commentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
7	[BUG]  [BUGGY]  this.commentEnd  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commentEnd  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commentEnd  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQualifiedChar());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQualifiedChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQualifiedChar());	  this.quoteChar    =    mapNullToDisabled(format.getSurroundingChar());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getRangeChar());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getRangeChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteStart  =  mapNullToDisabled(format.getRangeChar());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
10	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteStart  =  mapNullToDisabled(format.getCommentStart());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
11	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getEscapeChar());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getEscapeChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteStart  =  mapNullToDisabled(format.getEscapeChar());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
12	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getSurroundingChar());  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getSurroundingChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteStart  =  mapNullToDisabled(format.getSurroundingChar());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
13	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getQuoteEnd());  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getQuoteEnd());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteStart  =  mapNullToDisabled(format.getQuoteEnd());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
14	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getRangeStart());  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getRangeStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteStart  =  mapNullToDisabled(format.getRangeStart());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
15	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommentStart());	  This.commmentStart    =    mapNullToDisabled(commentStart);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
16	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoreEmptyLines);  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoreEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoreEmptyLines);	  This.commmentStart    =    mapNullToDisabled(commentStart);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
17	[BUG]  [BUGGY]  Iterator  <  DISABLED>  it  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  Iterator  <  DISABLED>  it  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Iterator  <  DISABLED>  it  =  mapNullToDisabled(format.getDISABLED());	  This.commmentStart    =    mapNullToDisabled(commentStart);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
18	[BUG]  [BUGGY]  This.commentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commentStart  =  mapNullToDisabled(format.getCommentStart());	  This.commmentStart    =    mapNullToDisabled(commentStart);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
19	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.ignoreEmptyLines);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.ignoreEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.ignoreEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    ignoreEmptyLines);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
20	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.ignoreSurroundingSpaces);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.ignoreSurroundingSpaces);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.ignoreSurroundingSpaces);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    ignoreEmptyLines);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
21	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  ignoredEmptyLines);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  ignoredEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  ignoredEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    ignoreEmptyLines);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
22	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.surroundingSpaces);  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.surroundingSpaces);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.surroundingSpaces);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    ignoreEmptyLines);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
23	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.DISABLED);  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.DISABLED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    ignoreEmptyLines);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
24	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.annotationChar);  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.annotationChar);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.annotationChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    ignoreEmptyLines);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
25	[BUG]  [BUGGY]  &&  in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  &&  in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	&&  in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  if(in    ==    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
26	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getComments());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getComments());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getComments());	  This.commmentStart    =    mapNullToDisabled(in.getComments());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
27	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getComments());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getComments());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getComments());	  This.commmentStart    =    mapNullToDisabled(in.getComments());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
28	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(in.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(in.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(in.getCommentStart());	  This.commmentStart    =    mapNullToDisabled(in.getComments());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
29	[BUG]  [BUGGY]  This.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
30	[BUG]  [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( "  [CE]  unclosed  string  literal  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( "  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( "	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	100	None	replace
31	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart,  this.quoteChar);  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart,  this.quoteChar);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart,  this.quoteChar);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(this.commmentStart);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
32	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart,  DISABLED);  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart,  DISABLED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart,  DISABLED);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(this.commmentStart);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
33	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.quoteChar);  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.quoteChar);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.quoteChar);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(this.commmentStart);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
34	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart  +  1);  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart  +  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart  +  1);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(this.commmentStart);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
35	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart  -  1);  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart  -  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart  -  1);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(this.commmentStart);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
36	[BUG]  [BUGGY]  if(!DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(!DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(!DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
37	[BUG]  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignor  [CE]  not  a  statement  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignor  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignor	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    	non-compiled	[CE]  not  a  statement	29	None	replace
38	[BUG]  [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmpty  [CE]  not  a  statement  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmpty  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmpty	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    	non-compiled	[CE]  not  a  statement	29	None	replace
39	[BUG]  [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignor  [CE]  not  a  statement  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignor  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignor	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    	non-compiled	[CE]  not  a  statement	29	None	replace
40	[BUG]  [BUGGY]  if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(this.quoteChar!=    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
41	[BUG]  [BUGGY]  if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(this.quoteChar!=    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
42	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno	  if(in    ==    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgno    	non-compiled	[CE]  ';'  expected	101	None	replace
43	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommmentStart());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommmentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommmentStart());	  This.commmentStart    =    mapNullToDisabled(in);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
44	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommmentStart());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommmentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommmentStart());	  This.commmentStart    =    mapNullToDisabled(in);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
45	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(this.commmentStart);  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(this.commmentStart);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(this.commmentStart);	  This.commmentStart    =    mapNullToDisabled(in);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
46	[BUG]  [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( "  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( "	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	96	None	replace
47	[BUG]  [BUGGY]  if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
48	[BUG]  [BUGGY]  if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
49	[BUG]  [BUGGY]  if(!DISABLED)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(!DISABLED)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(!DISABLED)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
50	[BUG]  [BUGGY]  if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  in.close();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  in.close();  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
51	[BUG]  [BUGGY]  if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  in.close();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  in.close();  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
52	[BUG]  [BUGGY]  if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
53	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DISABLED,  delimiter);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DISABLED,  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DISABLED,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    DISABLED);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
54	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    DISABLED);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
55	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DEPRECATED);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DEPRECATED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DEPRECATED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    DISABLED);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
56	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreSurroundingLines();  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreSurroundingLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  in.getIgnoreSurroundingLines();	  this.ignoreEmptyLines    =    format.getIgnoreSurroundingLines();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
57	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEndingLines();  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEndingLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEndingLines();	  this.ignoreEmptyLines    =    format.getIgnoreSurroundingLines();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
58	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreSurroundingSpaces();  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreSurroundingSpaces();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreSurroundingSpaces();	  this.ignoreEmptyLines    =    format.getIgnoreSurroundingLines();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
59	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  escape);  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  escape);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  escape);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar(),    in);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
60	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  out);  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  out);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  out);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar(),    in);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  in);  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  in);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar(),    in);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
62	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  escapeEmptyLines);  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  escapeEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  escapeEmptyLines);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar(),    in);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
63	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  escape);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  escape);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
64	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escapeEmptyLines);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escapeEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escapeEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
65	[BUG]  [BUGGY]  if(escape)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(escape)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(escape)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getQuoteStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
66	[BUG]  [BUGGY]  if(escape)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(escape)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(escape)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.commmentStart    =    mapNullToDisabled(format.getQuoteStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
67	[BUG]  [BUGGY]  &&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.get  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  &&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.get  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	&&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.get	  &&    in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
68	[BUG]  [BUGGY]  &&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  &&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	&&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  &&    in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
69	[BUG]  [BUGGY]  &&  in  >=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  &&  in  >=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	&&  in  >=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  &&    in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
70	[BUG]  [BUGGY]  &&  this.in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  &&  this.in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	&&  this.in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  &&    in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
71	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  delimiter);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  delimiter);	  this.quoteChar    =    mapNullToDisabled(format.getRangeChar());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoreEmptyLines);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoreEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoreEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
73	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.DISABLED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
74	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoreSurroundingSpaces);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoreSurroundingSpaces);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoreSurroundingSpaces);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
75	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED()  +  1);  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED()  +  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	DISABLED  =  mapNullToDisabled(format.getDISABLED()  +  1);	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
76	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED(),  this.ignoreEmptyLines);  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED(),  this.ignoreEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	DISABLED  =  mapNullToDisabled(format.getDISABLED(),  this.ignoreEmptyLines);	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
77	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED(),  delimiter);  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED(),  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	DISABLED  =  mapNullToDisabled(format.getDISABLED(),  delimiter);	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
78	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED(),  this.commmentStart);  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED(),  this.commmentStart);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	DISABLED  =  mapNullToDisabled(format.getDISABLED(),  this.commmentStart);	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
79	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED()).charValue();  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED()).charValue();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	DISABLED  =  mapNullToDisabled(format.getDISABLED()).charValue();	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
80	[BUG]  [BUGGY]  final  char  commmentStart  =  in.getCommentEnds();  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  char  commmentStart  =  in.getCommentEnds();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  char  commmentStart  =  in.getCommentEnds();	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getCommentEnds())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
81	[BUG]  [BUGGY]  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreSurroundingSpaces    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
82	[BUG]  [BUGGY]  this.ignoreStart  =  mapNullToDisabled(format.getEnd());  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreStart  =  mapNullToDisabled(format.getEnd());  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreStart  =  mapNullToDisabled(format.getEnd());  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreSurroundingSpaces    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
83	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  Format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  Format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  Format.getIgnoreEmptyLines();	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
84	[BUG]  [BUGGY]  This.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.ignoreEmptyLines  =  format.getIgnoreEmptyLines();	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
85	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  formats.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  formats.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  formats.getIgnoreEmptyLines();	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
86	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  [CE]  ';'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    else    {    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  ';'  expected	35	None	replace
87	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  type  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    else    {    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
88	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [CE]  ';'  expected  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    else    {    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  ';'  expected	35	None	replace
89	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  Format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  Format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  Format.getIgnoreEmptyLines();  }	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    else    {    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
90	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  if(this.ignoreEmptyLines!=  null)  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  if(this.ignoreEmptyLines!=  null)  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  if(this.ignoreEmptyLines!=  null)  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    else    {    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
91	[BUG]  [BUGGY]  final  String  commmentStart  =  in.getComments();  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  String  commmentStart  =  in.getComments();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  String  commmentStart  =  in.getComments();	  final    char    commmentStart    =    in.getComments();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
92	[BUG]  [BUGGY]  final  String  CommmentStart  =  in.getComments();  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  String  CommmentStart  =  in.getComments();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  String  CommmentStart  =  in.getComments();	  final    char    commmentStart    =    in.getComments();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
93	[BUG]  [BUGGY]  final  char  commmentStart  =  in.getCommentStart();  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  char  commmentStart  =  in.getCommentStart();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  char  commmentStart  =  in.getCommentStart();	  final    char    commmentStart    =    in.getComments();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
94	[BUG]  [BUGGY]  static  final  String  commmentStart  =  in.getComments();  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  static  final  String  commmentStart  =  in.getComments();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	static  final  String  commmentStart  =  in.getComments();	  final    char    commmentStart    =    in.getComments();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
95	[BUG]  [BUGGY]  final  Character  commmentStart  =  in.getComments();  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  Character  commmentStart  =  in.getComments();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  Character  commmentStart  =  in.getComments();	  final    char    commmentStart    =    in.getComments();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
96	[BUG]  [BUGGY]  if(ignoreSurroundingSpaces  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreSurroundingSpaces  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreSurroundingSpaces  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  if(ignoreEmptyLines    ==    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
97	[BUG]  [BUGGY]  Iterator  <  DISABLED>  it  =  mapNullToDisabled(format.getDISABLED());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  Iterator  <  DISABLED>  it  =  mapNullToDisabled(format.getDISABLED());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Iterator  <  DISABLED>  it  =  mapNullToDisabled(format.getDISABLED());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
98	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  in.close();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  in.close();  }	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
99	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
100	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines(),  format);  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines(),  format);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  in.getIgnoreEmptyLines(),  format);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(),    in);    	non-compiled	[CE]  ';'  expected	48	None	replace
101	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in,  delimiter);  [CE]  ';'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in,  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in,  delimiter);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(),    in);    	non-compiled	[CE]  ';'  expected	48	None	replace
102	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  escapeChar);  [CE]  ';'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  escapeChar);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  escapeChar);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(),    in);    	non-compiled	[CE]  ';'  expected	48	None	replace
103	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  out);  [CE]  ';'  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  out);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  out);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(),    in);    	non-compiled	[CE]  ';'  expected	48	None	replace
104	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  delimiter);  [CE]  ';'  expected  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  delimiter);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(),    in);    	non-compiled	[CE]  ';'  expected	48	None	replace
105	[BUG]  [BUGGY]  int  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  int  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	int  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
106	[BUG]  [BUGGY]  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
107	[BUG]  [BUGGY]  if(in!=  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
108	[BUG]  [BUGGY]  if(in  ==  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
109	[BUG]  [BUGGY]  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
110	[BUG]  [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commentStart  =  mapNullToDisabled(format.getCommentStart());	  this.commmentStart    =    mapNullToDisabled(this.commentStart);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
111	[BUG]  [BUGGY]  this.commmentStart  -=  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  -=  mapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  -=  mapNullToDisabled(format.getCommentStart());	  this.commmentStart    =    mapNullToDisabled(this.commentStart);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
112	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCOMMENTStart());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCOMMENTStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCOMMENTStart());	  this.commmentStart    =    mapNullToDisabled(commentStart);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
113	[BUG]  [BUGGY]  this.commmentStart  =  mappingNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mappingNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mappingNullToDisabled(format.getCommentStart());	  this.commmentStart    =    mapNullToDisabled(commentStart);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
114	[BUG]  [BUGGY]  if(ignoreSurroundingSpaces!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreSurroundingSpaces!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreSurroundingSpaces!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  if(ignoreEmptyLines!=    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
115	[BUG]  [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  in.close();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  in.close();  }	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
116	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommentEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
117	[BUG]  [BUGGY]  final  String  commmentStart  =  in.getCommentStarts();  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  String  commmentStart  =  in.getCommentStarts();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  String  commmentStart  =  in.getCommentStarts();	  final    char    commmentStart    =    in.getCommentStarts();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
118	[BUG]  [BUGGY]  final  String  CommmentStart  =  in.getCommentStarts();  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  String  CommmentStart  =  in.getCommentStarts();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  String  CommmentStart  =  in.getCommentStarts();	  final    char    commmentStart    =    in.getCommentStarts();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
119	[BUG]  [BUGGY]  final  Character  commmentStart  =  in.getCommentStarts();  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  Character  commmentStart  =  in.getCommentStarts();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  Character  commmentStart  =  in.getCommentStarts();	  final    char    commmentStart    =    in.getCommentStarts();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
120	[BUG]  [BUGGY]  final  int  commmentStart  =  in.getCommentStarts();  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  int  commmentStart  =  in.getCommentStarts();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  int  commmentStart  =  in.getCommentStarts();	  final    char    commmentStart    =    in.getCommentStarts();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
121	[BUG]  [BUGGY]  this.commmentStart  =  mapEscapeCharToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapEscapeCharToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapEscapeCharToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
122	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
123	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
124	[BUG]  [BUGGY]  if(escape)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(escape)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(escape)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
125	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
126	[BUG]  [BUGGY]  this.escape  =  mapEscapeCharToDisabled(format.getEscapeChar());  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeCharToDisabled(format.getEscapeChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeCharToDisabled(format.getEscapeChar());	  this.escape    =    mapNullToDisabled(format.getEscapeChar());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
127	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeChar(),  delimiter);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeChar(),  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscapeChar(),  delimiter);	  this.escape    =    mapNullToDisabled(format.getEscapeChar());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
128	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeChar(),  in);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeChar(),  in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscapeChar(),  in);	  this.escape    =    mapNullToDisabled(format.getEscapeChar());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
129	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeLine());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeLine());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscapeLine());	  this.escape    =    mapNullToDisabled(format.getEscapeChar());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
130	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in);  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in);  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in);  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
131	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out);  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out);  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out);  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
132	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter);  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter);  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter);  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
133	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in);  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in);  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in);  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
134	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
135	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  in.close();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  in.close();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
136	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
137	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
138	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  in.close();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  in.close();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
139	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  in.close();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  in.close();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
140	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
141	[BUG]  [BUGGY]  AssertionError(in,  quoteChar)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  AssertionError(in,  quoteChar)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	AssertionError(in,  quoteChar)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  AssertionError(in,    DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  ';'  expected	51	None	replace
142	[BUG]  [BUGGY]  AssertionError(in,  error)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  AssertionError(in,  error)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	AssertionError(in,  error)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  AssertionError(in,    DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  ';'  expected	51	None	replace
143	[BUG]  [BUGGY]  AssertionError(this.commmentStart,  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  AssertionError(this.commmentStart,  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	AssertionError(this.commmentStart,  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  AssertionError(in,    DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  ';'  expected	51	None	replace
144	[BUG]  [BUGGY]  AssertionError(in,  delimiter)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  AssertionError(in,  delimiter)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	AssertionError(in,  delimiter)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  AssertionError(in,    DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  ';'  expected	51	None	replace
145	[BUG]  [BUGGY]  AssertionError(this.commmentStart,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  AssertionError(this.commmentStart,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	AssertionError(this.commmentStart,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  AssertionError(in,    DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  ';'  expected	51	None	replace
146	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
147	[BUG]  [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
148	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
149	[BUG]  [BUGGY]  this.commmentEnd  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentEnd  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentEnd  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  if(this.commmentStart!=    in)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
150	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCommentChar(),  delimiter);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCommentChar(),  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getCommentChar(),  delimiter);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
151	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  escapeSurroundingSpaces);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  escapeSurroundingSpaces);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  escapeSurroundingSpaces);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
152	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnorEmptyLines();  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnorEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnorEmptyLines();	  if(ignoreEmptyLines    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
153	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore	  if(in    ==    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnore    	non-compiled	[CE]  ';'  expected	70	None	replace
154	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(1);  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(1);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(2);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
155	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(4);  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(4);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(4);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(2);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
156	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(3);  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(3);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(3);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(2);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
157	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(5);  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(5);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(5);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(2);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
158	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  '('  or  '['  expected	34	None	replace
159	[BUG]  [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  '('  or  '['  expected	34	None	replace
160	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeSurroundingSpaces());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeSurroundingSpaces());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscapeSurroundingSpaces());	  this.escape    =    mapNullToDisabled(format.getEscapeLines());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
161	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeSurroundingLines());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeSurroundingLines());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscapeSurroundingLines());	  this.escape    =    mapNullToDisabled(format.getEscapeLines());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
162	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapes());  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapes());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscapes());	  this.escape    =    mapNullToDisabled(format.getEscapeLines());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
163	[BUG]  [BUGGY]  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.neverEmptyLines    =    format.getIgnoreNeverEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
164	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.neverEmptyLines    =    format.getIgnoreNeverEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
165	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreNeverEmptyLines();  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreNeverEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreNeverEmptyLines();	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.neverEmptyLines    =    format.getIgnoreNeverEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
166	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  else  {	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.neverEmptyLines    =    format.getIgnoreNeverEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
167	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getNeverEmptyLines();  [CE]  illegal  start  of  expression  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getNeverEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getNeverEmptyLines();	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.neverEmptyLines    =    format.getIgnoreNeverEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
168	[BUG]  [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.  [CE]  <identifier>  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  <identifier>  expected	114	None	replace
169	[BUG]  [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  ';'  expected	114	None	replace
170	[BUG]  [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmp  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmp  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmp	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  ';'  expected	114	None	replace
171	[BUG]  [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreE  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreE  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreE	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  ';'  expected	114	None	replace
172	[BUG]  [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  ';'  expected	114	None	replace
173	[BUG]  [BUGGY]  Integer  quoteStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  Integer  quoteStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Integer  quoteStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
174	[BUG]  [BUGGY]  char  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  char  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	char  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
175	[BUG]  [BUGGY]  int  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  int  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	int  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
176	[BUG]  [BUGGY]  char[]  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  char[]  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	char[]  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
177	[BUG]  [BUGGY]  if(in!=  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
178	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  in.readLines();  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  in.readLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  in.readLines();	  this.ignoreEmptyLines    =    in.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
179	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines()  -  1;  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines()  -  1;  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  in.getIgnoreEmptyLines()  -  1;	  this.ignoreEmptyLines    =    in.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
180	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines()  +  1;  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines()  +  1;  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  in.getIgnoreEmptyLines()  +  1;	  this.ignoreEmptyLines    =    in.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
181	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines(),  delimiter);  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines(),  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  in.getIgnoreEmptyLines(),  delimiter);	  this.ignoreEmptyLines    =    in.getIgnoreEmptyLines();    	non-compiled	[CE]  ';'  expected	44	None	replace
182	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  in);  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  in);	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
183	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  delimiter);  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  delimiter);	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
184	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  false);  [CE]  illegal  start  of  expression  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  false);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  false);	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
185	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED()  +  1);  [CE]  illegal  start  of  expression  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED()  +  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED()  +  1);	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
186	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  null);  [CE]  illegal  start  of  expression  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  null);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  null);	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
187	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(in,  DISABLED);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(in,  DISABLED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(in,  DISABLED);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(in);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
188	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(commmentStart);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(commmentStart);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(commmentStart);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(in);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
189	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(in,  delimiter);  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(in,  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(in,  delimiter);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(in);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
190	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommmentEnd());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommmentEnd());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommmentEnd());	  this.commmentStart    =    mapNullToDisabled(this.commmentStart);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
191	[BUG]  [BUGGY]  this.commmentStart  -=  mapNullToDisabled(format.getCommmentStart());  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  -=  mapNullToDisabled(format.getCommmentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  -=  mapNullToDisabled(format.getCommmentStart());	  this.commmentStart    =    mapNullToDisabled(this.commmentStart);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
192	[BUG]  [BUGGY]  this.commmentStart  =  mappingNullToDisabled(format.getCommmentStart());  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mappingNullToDisabled(format.getCommmentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mappingNullToDisabled(format.getCommmentStart());	  this.commmentStart    =    mapNullToDisabled(this.commmentStart);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
193	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  escape);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  escape);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  escape);	  this.escape    =    mapNullToDisabled(format.getEscape(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
194	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  escapeChar);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  escapeChar);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  escapeChar);	  this.escape    =    mapNullToDisabled(format.getEscape(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
195	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  escapeSurroundingSpaces);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  escapeSurroundingSpaces);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  escapeSurroundingSpaces);	  this.escape    =    mapNullToDisabled(format.getEscape(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
196	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this.commmentStart);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this.commmentStart);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  this.commmentStart);	  this.escape    =    mapNullToDisabled(format.getEscape(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
197	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED,  delimiter);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED,  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED,  delimiter);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
198	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DEPRECATED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
199	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(out);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(out);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(out);	  if(in!=    null)    {    for(final    char    commmentStart    :    out.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
200	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(out);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(out);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(out);	  if(in!=    null)    {    for(final    char    commmentStart    :    out.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
201	[BUG]  [BUGGY]  if(escape  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(escape  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(escape  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(quoteChar    ==    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
202	[BUG]  [BUGGY]  if(escape!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(escape!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(escape!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(quoteChar    ==    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
203	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnorEmptyLines();  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnorEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnorEmptyLines();	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
204	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
205	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format    	non-compiled	[CE]  ';'  expected	67	None	replace
206	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentsEnd());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentsEnd());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentsEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentsStart());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
207	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
208	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
209	[BUG]  [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ign  [CE]  not  a  statement  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ign  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ign	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    this.ignor    	non-compiled	[CE]  not  a  statement	99	None	replace
210	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines(0);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines(0);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  in.getIgnoreEmptyLines(0);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(0);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
211	[BUG]  [BUGGY]  this.escape  =  mapEscape(format.getEscape(),  in);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscape(format.getEscape(),  in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscape(format.getEscape(),  in);	  this.escape    =    mapEscape(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
212	[BUG]  [BUGGY]  this.escape  =  mapEscape(format.getEscapeChar());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscape(format.getEscapeChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscape(format.getEscapeChar());	  this.escape    =    mapEscape(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
213	[BUG]  [BUGGY]  this.escape  =  mapEscape(format.getEscapeLines());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscape(format.getEscapeLines());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscape(format.getEscapeLines());	  this.escape    =    mapEscape(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
214	[BUG]  [BUGGY]  this.escape  =  mapEscape(format.getEscape(),  delimiter);  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscape(format.getEscape(),  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscape(format.getEscape(),  delimiter);	  this.escape    =    mapEscape(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
215	[BUG]  [BUGGY]  this.escape  =  mapEscape(in.getEscape());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscape(in.getEscape());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscape(in.getEscape());	  this.escape    =    mapEscape(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
216	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getIgnoreEmptyLines());  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getIgnoreEmptyLines());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getIgnoreEmptyLines());	  if(this.commmentStart!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
217	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuestionChar());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuestionChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuestionChar());	  this.quoteChar    =    mapNullToDisabled(format.getCommentChar());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
218	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  Format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  Format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  Format.getIgnoreEmptyLines();	  if(this.ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
219	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  variable  commmentStart  might  already  have  been  assigned  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(escape)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  variable  commmentStart  might  already  have  been  assigned	56	None	replace
220	[BUG]  [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscapeChar());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscapeChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeNullToDisabled(format.getEscapeChar());	  this.escape    =    mapEscapeNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
221	[BUG]  [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape(),  in);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape(),  in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeNullToDisabled(format.getEscape(),  in);	  this.escape    =    mapEscapeNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
222	[BUG]  [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape(),  delimiter);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape(),  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeNullToDisabled(format.getEscape(),  delimiter);	  this.escape    =    mapEscapeNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
223	[BUG]  [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscapeLines());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscapeLines());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeNullToDisabled(format.getEscapeLines());	  this.escape    =    mapEscapeNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
224	[BUG]  [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape(),  false);  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape(),  false);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeNullToDisabled(format.getEscape(),  false);	  this.escape    =    mapEscapeNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
225	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.surroundingSpaces);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.surroundingSpaces);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.surroundingSpaces);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    ignoreEmptyLines);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
226	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.annotationChar);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.annotationChar);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.annotationChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    ignoreEmptyLines);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
227	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.annotationLines);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.annotationLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.annotationLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    ignoreEmptyLines);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
228	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(in.getCommentStart());	  this.commmentStart    =    mapNullToDisabled(in.getComments());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
229	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getComments(),  ignoreEmptyLines);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getComments(),  ignoreEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getComments(),  ignoreEmptyLines);	  this.commmentStart    =    mapNullToDisabled(in.getComments());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
230	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in,  format.getComments());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in,  format.getComments());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(in,  format.getComments());	  this.commmentStart    =    mapNullToDisabled(in.getComments());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
231	[BUG]  [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape(),  in);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape(),  in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeToDisabled(format.getEscape(),  in);	  this.escape    =    mapEscapeToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
232	[BUG]  [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscapeChar());  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscapeChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeToDisabled(format.getEscapeChar());	  this.escape    =    mapEscapeToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
233	[BUG]  [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape(),  delimiter);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape(),  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeToDisabled(format.getEscape(),  delimiter);	  this.escape    =    mapEscapeToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
234	[BUG]  [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscapeLines());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscapeLines());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeToDisabled(format.getEscapeLines());	  this.escape    =    mapEscapeToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
235	[BUG]  [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape(),  false);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape(),  false);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeToDisabled(format.getEscape(),  false);	  this.escape    =    mapEscapeToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
236	[BUG]  [BUGGY]  this.commmentStart  =  mapEscapeCharToDisabled(format.getCommmentStart());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapEscapeCharToDisabled(format.getCommmentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapEscapeCharToDisabled(format.getCommmentStart());	  this.commmentStart    =    mapNullToDisabled(in);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
237	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines()  /  2;  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  in.getIgnoreEmptyLines()  /  2;  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  in.getIgnoreEmptyLines()  /  2;	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines()    /    2;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
238	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this.ignoreEmptyLines);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this.ignoreEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  this.ignoreEmptyLines);	  this.escape    =    mapNullToDisabled(format.getEscape(),    in);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
239	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this.DISABLED);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this.DISABLED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  this.DISABLED);	  this.escape    =    mapNullToDisabled(format.getEscape(),    in);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
240	[BUG]  [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getQuoteChar());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
241	[BUG]  [BUGGY]  this.commmentStart  =  mapEscapeCharToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapEscapeCharToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapEscapeCharToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getQuoteChar());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
242	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getQuoteChar());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
243	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(in,  DISABLED);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(in,  DISABLED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(in,  DISABLED);	  this.commmentStart    =    mapNullToDisabled(in;    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
244	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
245	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
246	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.displayChar);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.displayChar);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.displayChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
247	[BUG]  [BUGGY]  if(ignoreEmptyLines)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
248	[BUG]  [BUGGY]  if(!DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(!DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(!DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
249	[BUG]  [BUGGY]  final  char  commmentStart  =  this.in.getCommentStarts();  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  char  commmentStart  =  this.in.getCommentStarts();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  char  commmentStart  =  this.in.getCommentStarts();	  final    char    commmentStart    =    in.getCommentStarts();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
250	[BUG]  [BUGGY]  final  char  commmentStart  =  format.getCommentStarts();  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  char  commmentStart  =  format.getCommentStarts();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  char  commmentStart  =  format.getCommentStarts();	  final    char    commmentStart    =    in.getCommentStarts();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
251	[BUG]  [BUGGY]  final  char  commmentStart  =  in.getCommentStart(this.quoteChar);  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  char  commmentStart  =  in.getCommentStart(this.quoteChar);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  char  commmentStart  =  in.getCommentStart(this.quoteChar);	  final    char    commmentStart    =    in.getCommentStarts();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
252	[BUG]  [BUGGY]  if(this.commmentStart  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  if(this.commmentStart!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
253	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getIgnorableChar());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getIgnorableChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getIgnorableChar());	  this.quoteChar    =    mapNullToDisabled(format.getIgnoreChar());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
254	[BUG]  [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
255	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in  +  1);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in  +  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  in  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    in);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
256	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  out);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  out);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    in);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
257	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.in);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    in);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
258	[BUG]  [BUGGY]  if(DISABLED)  {  this.commentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.commentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  ';'  expected	114	None	replace
259	[BUG]  [BUGGY]  if(DISABLED)  {  this.commentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.commentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  ';'  expected	114	None	replace
260	[BUG]  [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getQuoteStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
261	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getQuoteStart());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getQuoteStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteStart  =  mapNullToDisabled(format.getQuoteStart());	  this.commmentStart    =    mapNullToDisabled(format.getQuoteStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
262	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
263	[BUG]  [BUGGY]  if(DISABLED)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
264	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  escapeChar);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  escapeChar);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  escapeChar);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
265	[BUG]  [BUGGY]  final  char  commmentStart  =  this.in.getComments();  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  char  commmentStart  =  this.in.getComments();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  char  commmentStart  =  this.in.getComments();	  final    char    commmentStart    =    in.getComments();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
266	[BUG]  [BUGGY]  final  char  commmentStart  =  format.getComments();  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  char  commmentStart  =  format.getComments();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  char  commmentStart  =  format.getComments();	  final    char    commmentStart    =    in.getComments();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
267	[BUG]  [BUGGY]  final  int  commmentStart  =  in.getComments();  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  int  commmentStart  =  in.getComments();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  int  commmentStart  =  in.getComments();	  final    char    commmentStart    =    in.getComments();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
268	[BUG]  [BUGGY]  final  char  commmentStart  =  in.readLine();  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  char  commmentStart  =  in.readLine();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  char  commmentStart  =  in.readLine();	  final    char    commmentStart    =    in.getComments();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
269	[BUG]  [BUGGY]  if(this.commmentStart  ==  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  if(this.commmentStart!=    in)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
270	[BUG]  [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException  [CE]  '('  or  '['  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  '('  or  '['  expected	96	None	replace
271	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.escape);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.escape);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
272	[BUG]  [BUGGY]  if(escape!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(escape!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(escape!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreE    	non-compiled	[CE]  ';'  expected	107	None	replace
273	[BUG]  [BUGGY]  for(final  char  commmentStart  :  in.getCommentEnds())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  for(final  char  commmentStart  :  in.getCommentEnds())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	for(final  char  commmentStart  :  in.getCommentEnds())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getCommentEnds())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
274	[BUG]  [BUGGY]  if(escape!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(escape!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(escape!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
275	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeStart());  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscapeStart());	  this.escape    =    mapNullToDisabled(format.getEscapeChar());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
276	[BUG]  [BUGGY]  It.commmentStart  =  mapNullToDisabled(format.getCommmentStart());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  It.commmentStart  =  mapNullToDisabled(format.getCommmentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	It.commmentStart  =  mapNullToDisabled(format.getCommmentStart());	  This.commmentStart    =    mapNullToDisabled(in);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
277	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCOMMENTStart());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCOMMENTStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCOMMENTStart());	  This.commmentStart    =    mapNullToDisabled(in);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
278	[BUG]  [BUGGY]  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
279	[BUG]  [BUGGY]  if(ignoreSurroundingSpaces!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreSurroundingSpaces!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreSurroundingSpaces!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(ignoreEmptyLines!=    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
280	[BUG]  [BUGGY]  this.commentEnd  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commentEnd  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commentEnd  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
281	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.delimiter);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.delimiter);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(in);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
282	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.in);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.in);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(in);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
283	[BUG]  [BUGGY]  if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
284	[BUG]  [BUGGY]  if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
285	[BUG]  [BUGGY]  if(this.quoteChar!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.quoteChar!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.quoteChar!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(this.ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
286	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getIgnoreSurroundingChar());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getIgnoreSurroundingChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getIgnoreSurroundingChar());	  this.quoteChar    =    mapNullToDisabled(format.getSurroundingChar());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
287	[BUG]  [BUGGY]  this.commmentEnd  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentEnd  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentEnd  =  mapNullToDisabled(format.getCommentEnd());  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
288	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
289	[BUG]  [BUGGY]  AssertionError(this.commment,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  AssertionError(this.commment,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	AssertionError(this.commment,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  AssertionError(in,    DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  ';'  expected	51	None	replace
290	[BUG]  [BUGGY]  AssertionError(this.in,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  AssertionError(this.in,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	AssertionError(this.in,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  AssertionError(in,    DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  ';'  expected	51	None	replace
291	[BUG]  [BUGGY]  AssertionError(in,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  AssertionError(in,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	AssertionError(in,  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  AssertionError(in,    DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  ';'  expected	51	None	replace
292	[BUG]  [BUGGY]  for(final  char  commmentStart  :  in.getCommentStart())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  for(final  char  commmentStart  :  in.getCommentStart())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	for(final  char  commmentStart  :  in.getCommentStart())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getCommentStart())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
293	[BUG]  [BUGGY]  if(in!=  null)  {  for(final  char  commmentStart  :  in.getCommentEnd())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  for(final  char  commmentStart  :  in.getCommentEnd())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  for(final  char  commmentStart  :  in.getCommentEnd())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }	  if(in!=    null)    {    for(final    char    commmentStart    :    in.getCommentStart())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
294	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentsStart()  -  1);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentsStart()  -  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentsStart()  -  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentsStart());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
295	[BUG]  [BUGGY]  if(escape  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(escape  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(escape  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno	  if(in    ==    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  ';'  expected	106	None	replace
296	[BUG]  [BUGGY]  if(escape  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(escape  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(escape  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore	  if(in    ==    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  ';'  expected	106	None	replace
297	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreNonEmptyLines();  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreNonEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreNonEmptyLines();	  this.ignoreEmptyLines    =    format.getIgnoreSurroundingLines();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
298	[BUG]  [BUGGY]  if(out!=  null)  {  for(final  char  commmentStart  :  out.getComments())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(out!=  null)  {  for(final  char  commmentStart  :  out.getComments())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(out!=  null)  {  for(final  char  commmentStart  :  out.getComments())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }	  if(in!=    null)    {    for(final    char    commmentStart    :    out.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
299	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(out.getComments());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(out.getComments());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(out.getComments());	  if(in!=    null)    {    for(final    char    commmentStart    :    out.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
300	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(out.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(out.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(out.getCommentStart());	  if(in!=    null)    {    for(final    char    commmentStart    :    out.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
301	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(out.getComments());  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(out.getComments());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(out.getComments());	  if(in!=    null)    {    for(final    char    commmentStart    :    out.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
302	[BUG]  [BUGGY]  if(out!=  null)  {  for(final  char  commmentStart  :  in.getComments())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(out!=  null)  {  for(final  char  commmentStart  :  in.getComments())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(out!=  null)  {  for(final  char  commmentStart  :  in.getComments())  {  this.commmentStart  =  mapNullToDisabled(commentStart);  }	  if(in!=    null)    {    for(final    char    commmentStart    :    out.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
303	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(2)  +  1;  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(2)  +  1;  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(2)  +  1;	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(2);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
304	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  out);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  out);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  out);	  this.escape    =    mapNullToDisabled(format.getEscape(),    in);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
305	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  this);	  this.escape    =    mapNullToDisabled(format.getEscape(),    in);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
306	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getComments(),  DISABLED);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getComments(),  DISABLED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getComments(),  DISABLED);	  this.commmentStart    =    mapNullToDisabled(in.getComments());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
307	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getComments()  -  1);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getComments()  -  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getComments()  -  1);	  this.commmentStart    =    mapNullToDisabled(in.getComments());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
308	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
309	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
310	[BUG]  [BUGGY]  if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  if(in    ==    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
311	[BUG]  [BUGGY]  if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  if(in    ==    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
312	[BUG]  [BUGGY]  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
313	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.DISABLED  =  mapNullToDisabled(format.getDISABLED());	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
314	[BUG]  [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  in  [CE]  not  a  statement  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  in  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  in	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    in.close();    }    	non-compiled	[CE]  not  a  statement	98	None	replace
315	[BUG]  [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ignor  [CE]  not  a  statement  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ignor  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ignor	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    this.ignor    	non-compiled	[CE]  not  a  statement	99	None	replace
316	[BUG]  [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ign  [CE]  not  a  statement  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ign  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ign	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    this.ignor    	non-compiled	[CE]  not  a  statement	99	None	replace
317	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DISABLED  +  1);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DISABLED  +  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DISABLED  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    DISABLED);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
318	[BUG]  [BUGGY]  if(escape  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.  [CE]  <identifier>  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(escape  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(escape  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.	  if(in    ==    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgno    	non-compiled	[CE]  <identifier>  expected	101	None	replace
319	[BUG]  [BUGGY]  if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  if(ignoreEmptyLines!=    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
320	[BUG]  [BUGGY]  Iterator  <  DISABLED>  commentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  Iterator  <  DISABLED>  commentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Iterator  <  DISABLED>  commentStart  =  mapNullToDisabled(format.getCommentStart());	  This.commmentStart    =    mapNullToDisabled(commentStart);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
321	[BUG]  [BUGGY]  Iterator  <  Comment>  commentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  Iterator  <  Comment>  commentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Iterator  <  Comment>  commentStart  =  mapNullToDisabled(format.getCommentStart());	  This.commmentStart    =    mapNullToDisabled(commentStart);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
322	[BUG]  [BUGGY]  It.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  It.commmentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	It.commmentStart  =  mapNullToDisabled(format.getCommentStart());	  This.commmentStart    =    mapNullToDisabled(commentStart);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
323	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  Escape.DISABLED);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  Escape.DISABLED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  Escape.DISABLED);	  this.escape    =    mapNullToDisabled(format.getEscape(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
324	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED  +  1);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED  +  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
325	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DETERMINISTIC_SOURCE);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DETERMINISTIC_SOURCE);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DETERMINISTIC_SOURCE);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
326	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(in;  }  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(in;  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(in;  }	  this.commmentStart    =    mapNullToDisabled(in;    	non-compiled	[CE]  ')'  expected	109	None	replace
327	[BUG]  [BUGGY]  if(this.commmentStart  ==  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  in)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(this.commmentStart!=    in)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
328	[BUG]  [BUGGY]  if(DISABLED)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
329	[BUG]  [BUGGY]  if(DISABLED)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
330	[BUG]  [BUGGY]  if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  [CE]  illegal  start  of  expression  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
331	[BUG]  [BUGGY]  if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  [CE]  illegal  start  of  expression  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
332	[BUG]  [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    else    {    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
333	[BUG]  [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  [CE]  ';'  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    else    {    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  ';'  expected	35	None	replace
334	[BUG]  [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [CE]  ';'  expected  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    else    {    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  ';'  expected	35	None	replace
335	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  if(ignoreEmptyLines  ==  null)  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  if(ignoreEmptyLines  ==  null)  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  if(ignoreEmptyLines  ==  null)  {  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    else    {    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
336	[BUG]  [BUGGY]  if(ignoreSurroundingSpaces  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreSurroundingSpaces  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreSurroundingSpaces  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(ignoreEmptyLines    ==    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
337	[BUG]  [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
338	[BUG]  [BUGGY]  this.commmentEnd  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentEnd  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentEnd  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
339	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DISABLED);  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DISABLED);  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DISABLED);  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
340	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  FormatUtils.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  FormatUtils.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  FormatUtils.getIgnoreEmptyLines();	  this.ignoreEmptyLines    =    in.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
341	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  FormatUtils.getIgnoreEmptyLines(in);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  FormatUtils.getIgnoreEmptyLines(in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  FormatUtils.getIgnoreEmptyLines(in);	  this.ignoreEmptyLines    =    in.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
342	[BUG]  [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape(),  out);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape(),  out);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeNullToDisabled(format.getEscape(),  out);	  this.escape    =    mapEscapeNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
343	[BUG]  [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape()  +  1);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeNullToDisabled(format.getEscape()  +  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeNullToDisabled(format.getEscape()  +  1);	  this.escape    =    mapEscapeNullToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
344	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(DISABLED);  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(DISABLED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(DISABLED);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(this.commmentStart);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
345	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  *  2;  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  *  2;  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  *  2;	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines()    /    2;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
346	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  +  2;  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  +  2;  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  +  2;	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines()    /    2;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
347	[BUG]  [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.neverEmptyLines    =    format.getIgnoreNeverEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
348	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.neverEmptyLines    =    format.getIgnoreNeverEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
349	[BUG]  [BUGGY]  if(escape  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(escape  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(escape  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines	  if(in    ==    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    	non-compiled	[CE]  not  a  statement	26	None	replace
350	[BUG]  [BUGGY]  if(this.commmentStart  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(this.commmentStart!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
351	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.in);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.in);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
352	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.out);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.out);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
353	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreSurroundingSpaces    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
354	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED);  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED);  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DISABLED);  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreSurroundingSpaces    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
355	[BUG]  [BUGGY]  if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  if(ignoreEmptyLines    ==    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
356	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.commentChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
357	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  escapeChar);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
358	[BUG]  [BUGGY]  if(escape!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [CE]  not  a  statement  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(escape!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(escape!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    	non-compiled	[CE]  not  a  statement	29	None	replace
359	[BUG]  [BUGGY]  if(this.in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [CE]  not  a  statement  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    	non-compiled	[CE]  not  a  statement	29	None	replace
360	[BUG]  [BUGGY]  if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
361	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoredEmptyLines);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoredEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoredEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    ignoreEmptyLines);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
362	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  DISABLED);  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  DISABLED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  DISABLED);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar(),    in);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
363	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
364	[BUG]  [BUGGY]  this.escape  =  mapEscape(format.getEscape()  +  1);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscape(format.getEscape()  +  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscape(format.getEscape()  +  1);	  this.escape    =    mapEscape(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
365	[BUG]  [BUGGY]  this.escape  =  mapEscape(format.getEscape(),  out);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscape(format.getEscape(),  out);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscape(format.getEscape(),  out);	  this.escape    =    mapEscape(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
366	[BUG]  [BUGGY]  this.escape  =  mapEscape(format.getEscape(),  escape);  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscape(format.getEscape(),  escape);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscape(format.getEscape(),  escape);	  this.escape    =    mapEscape(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
367	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCSVChar());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCSVChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getCSVChar());	  this.quoteChar    =    mapNullToDisabled(format.getEscapeChar());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
368	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getEscapeChar(),  delimiter);  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getEscapeChar(),  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getEscapeChar(),  delimiter);	  this.quoteChar    =    mapNullToDisabled(format.getEscapeChar());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
369	[BUG]  [BUGGY]  if(in  ==  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
370	[BUG]  [BUGGY]  if(this.commmentStart!=  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart!=  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
371	[BUG]  [BUGGY]  &&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar()  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  &&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar()  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	&&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar()	  &&    in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
372	[BUG]  [BUGGY]  &&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  &&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	&&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar	  &&    in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
373	[BUG]  [BUGGY]  if(this.in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.in  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  if(this.in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
374	[BUG]  [BUGGY]  if(ignoreSurroundingSpaces!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreSurroundingSpaces!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreSurroundingSpaces!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  '('  or  '['  expected	34	None	replace
375	[BUG]  [BUGGY]  if(this.in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  if(this.ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
376	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.annotationLines);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.annotationLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.annotationLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    ignoreEmptyLines);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
377	[BUG]  [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
378	[BUG]  [BUGGY]  this.commmentEnd  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentEnd  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentEnd  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
379	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
380	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  DISABLED);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  DISABLED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  DISABLED);	  this.quoteChar    =    mapNullToDisabled(format.getRangeChar());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
381	[BUG]  [BUGGY]  if(in  ==  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  Integer  commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
382	[BUG]  [BUGGY]  if(in!=  null)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
383	[BUG]  [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape(),  out);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape(),  out);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeToDisabled(format.getEscape(),  out);	  this.escape    =    mapEscapeToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
384	[BUG]  [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape(),  escape);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape(),  escape);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeToDisabled(format.getEscape(),  escape);	  this.escape    =    mapEscapeToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
385	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in,  DISABLED);  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in,  DISABLED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in,  DISABLED);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(),    in);    	non-compiled	[CE]  ';'  expected	48	None	replace
386	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in  +  1;  [CE]  ';'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in  +  1;  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in  +  1;	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(),    in);    	non-compiled	[CE]  ';'  expected	48	None	replace
387	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED())+  1;  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED())+  1;  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	DISABLED  =  mapNullToDisabled(format.getDISABLED())+  1;	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
388	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  out);  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  out);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  out);	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
389	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  in  +  1);  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  in  +  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  in  +  1);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar(),    in);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
390	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  this.in);  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  this.in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  this.in);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar(),    in);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
391	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DETERMINATED);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DETERMINATED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  DETERMINATED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    DISABLED);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
392	[BUG]  [BUGGY]  if(this.ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.ignoreEmptyLines!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  '('  or  '['  expected	34	None	replace
393	[BUG]  [BUGGY]  if(this.ignoreSurroundingSpaces!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.ignoreSurroundingSpaces!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.ignoreSurroundingSpaces!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  '('  or  '['  expected	34	None	replace
394	[BUG]  [BUGGY]  if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  '('  or  '['  expected	34	None	replace
395	[BUG]  [BUGGY]  if(this.in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(in!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
396	[BUG]  [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnorEmptyLines();  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnorEmptyLines();  }  else  {  in.close();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnorEmptyLines();  }  else  {  in.close();  }	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
397	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(Format.getCommentEnd());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(Format.getCommentEnd());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(Format.getCommentEnd());	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
398	[BUG]  [BUGGY]  if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
399	[BUG]  [BUGGY]  if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
400	[BUG]  [BUGGY]  if(this.commmentStart  ==  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
401	[BUG]  [BUGGY]  if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {	  if(ignoreEmptyLines    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
402	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(-1);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(-1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(-1);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(0);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
403	[BUG]  [BUGGY]  Node  commmentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  Node  commmentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Node  commmentStart  =  mapNullToDisabled(format.getCommentStart());  DISABLED  =  mapNullToDisabled(format.getDISABLED());	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
404	[BUG]  [BUGGY]  if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
405	[BUG]  [BUGGY]  if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
406	[BUG]  [BUGGY]  if(this.quoteChar!=  null)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.quoteChar!=  null)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.quoteChar!=  null)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
407	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  return  in;  }  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  return  in;  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  return  in;  }	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
408	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
409	[BUG]  [BUGGY]  if(this.delimiter!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.delimiter!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.delimiter!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
410	[BUG]  [BUGGY]  if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
411	[BUG]  [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED(),  in);  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  DISABLED  =  mapNullToDisabled(format.getDISABLED(),  in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	DISABLED  =  mapNullToDisabled(format.getDISABLED(),  in);	  DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
412	[BUG]  [BUGGY]  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    else    {    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
413	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  mapNullToDisabled(format.getQuoteChar());	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    else    {    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
414	[BUG]  [BUGGY]  this.signoreEmptyLines  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.signoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.signoreEmptyLines  =  format.getIgnoreEmptyLines();	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    else    {    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
415	[BUG]  [BUGGY]  this.index  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.index  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.index  =  mapNullToDisabled(format.getQuoteChar());	  if(ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    else    {    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
416	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DETERMINATED);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DETERMINATED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  DETERMINATED);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    DISABLED);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
417	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(2)  -  1;  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(2)  -  1;  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(2)  -  1;	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(2);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
418	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  variable  commmentStart  might  already  have  been  assigned  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  if(this.commmentStart!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    }    	non-compiled	[CE]  variable  commmentStart  might  already  have  been  assigned	82	None	replace
419	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart,  this.commmentStart);  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart,  this.commmentStart);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart,  this.commmentStart);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(this.commmentStart);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
420	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart,  this.commmentEnd);  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart,  this.commmentEnd);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(this.commmentStart,  this.commmentEnd);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(this.commmentStart);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
421	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(in,  in);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(in,  in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(in,  in);	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(in);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
422	[BUG]  [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape()  +  1);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapEscapeToDisabled(format.getEscape()  +  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapEscapeToDisabled(format.getEscape()  +  1);	  this.escape    =    mapEscapeToDisabled(format.getEscape());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
423	[BUG]  [BUGGY]  char  commmentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  char  commmentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	char  commmentStart  =  mapNullToDisabled(format.getCommentStart());	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
424	[BUG]  [BUGGY]  Integer  quotedStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  Integer  quotedStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Integer  quotedStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
425	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno	  if(in    ==    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgno    	non-compiled	[CE]  ';'  expected	101	None	replace
426	[BUG]  [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
427	[BUG]  [BUGGY]  if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
428	[BUG]  [BUGGY]  if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( "  [CE]  unclosed  string  literal  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( "  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalStateException( "	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	100	None	replace
429	[BUG]  [BUGGY]  if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
430	[BUG]  [BUGGY]  if(quoteChar  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(quoteChar  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(quoteChar  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
431	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  -  2;  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  -  2;  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines()  -  2;	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines()    /    2;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
432	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(outline);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(outline);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(outline);	  if(in!=    null)    {    for(final    char    commmentStart    :    out.getComments())    {    this.commmentStart    =    mapNullToDisabled(commentStart);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
433	[BUG]  [BUGGY]  if(this.commmentStart  ==  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
434	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escape);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escape);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
435	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escapeSurroundingSpaces);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escapeSurroundingSpaces);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  delimiter,  escapeSurroundingSpaces);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
436	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.ignoringEmptyLines);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.ignoringEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentEnd(),  this.ignoringEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentEnd(),    ignoreEmptyLines);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
437	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoreEmptyLines);  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoreEmptyLines);  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoreEmptyLines);  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();	  if(ignoreEmptyLines!=    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
438	[BUG]  [BUGGY]  AssertionError(in,  DETERMINATED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  AssertionError(in,  DETERMINATED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	AssertionError(in,  DETERMINATED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  AssertionError(in,    DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  ';'  expected	51	None	replace
439	[BUG]  [BUGGY]  AssertionError(in,  DEPRECATED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  AssertionError(in,  DEPRECATED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	AssertionError(in,  DEPRECATED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  AssertionError(in,    DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  ';'  expected	51	None	replace
440	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getReturnChar());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getReturnChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getReturnChar());	  this.quoteChar    =    mapNullToDisabled(format.getCommentChar());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
441	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escapeEmptyLines);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escapeEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escapeEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
442	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escape);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escape);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escape);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
443	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escapeSurroundingSpaces);  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escapeSurroundingSpaces);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  delimiter,  escapeSurroundingSpaces);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
444	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  file.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  file.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  file.getIgnoreEmptyLines();	  this.ignoreEmptyLines    =    in.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
445	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCOMmmentStart());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCOMmmentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCOMmmentStart());	  this.commmentStart    =    mapNullToDisabled(in;    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
446	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommonStart());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommonStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommonStart());	  this.commmentStart    =    mapNullToDisabled(in;    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
447	[BUG]  [BUGGY]  &&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  &&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	&&  in!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  &&    in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
448	[BUG]  [BUGGY]  &&  this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  &&  this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	&&  this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());	  &&    in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
449	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  DEPRECATED);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  DEPRECATED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getRangeChar(),  DEPRECATED);	  this.quoteChar    =    mapNullToDisabled(format.getRangeChar());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
450	[BUG]  [BUGGY]  if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getQuoteStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
451	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getQuoteStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
452	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getQuoteStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
453	[BUG]  [BUGGY]  if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.  [CE]  <identifier>  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.	  this.commmentStart    =    mapNullToDisabled(format.getQuoteStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
454	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.  [CE]  <identifier>  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.    	non-compiled	[CE]  <identifier>  expected	25	None	replace
455	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLine	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  ';'  expected	105	None	replace
456	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  ';'  expected	105	None	replace
457	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  ';'  expected	105	None	replace
458	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  ';'  expected	105	None	replace
459	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgno	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  ';'  expected	105	None	replace
460	[BUG]  [BUGGY]  if(this.ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignor  [CE]  not  a  statement  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignor  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.ignoreEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignor	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  not  a  statement	105	None	replace
461	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  delimiter,  escape);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  delimiter,  escape);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  delimiter,  escape);	  this.escape    =    mapNullToDisabled(format.getEscape(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
462	[BUG]  [BUGGY]  Iterator  <  DISABLED>  in  =  mapNullToDisabled(format.getCommmentStart());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  Iterator  <  DISABLED>  in  =  mapNullToDisabled(format.getCommmentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Iterator  <  DISABLED>  in  =  mapNullToDisabled(format.getCommmentStart());	  This.commmentStart    =    mapNullToDisabled(in);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
463	[BUG]  [BUGGY]  Iterator  <  DISABLED>  it  =  mapNullToDisabled(format.getCommmentStart());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  Iterator  <  DISABLED>  it  =  mapNullToDisabled(format.getCommmentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	Iterator  <  DISABLED>  it  =  mapNullToDisabled(format.getCommmentStart());	  This.commmentStart    =    mapNullToDisabled(in);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
464	[BUG]  [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCOMmmentStart());  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  This.commmentStart  =  mapNullToDisabled(format.getCOMmmentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	This.commmentStart  =  mapNullToDisabled(format.getCOMmmentStart());	  This.commmentStart    =    mapNullToDisabled(in);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
465	[BUG]  [BUGGY]  if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
466	[BUG]  [BUGGY]  if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
467	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  return  in;  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  return  in;  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.commmentStart  =  mapNullToDisabled(format.getCommentEnd());  }  else  {  return  in;  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentEnd());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
468	[BUG]  [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
469	[BUG]  [BUGGY]  if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
470	[BUG]  [BUGGY]  if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.in  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  '('  or  '['  expected	96	None	replace
471	[BUG]  [BUGGY]  if(this.commmentStart  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  throw  new  Il	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  '('  or  '['  expected	96	None	replace
472	[BUG]  [BUGGY]  if(this.commmentStart!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
473	[BUG]  [BUGGY]  if(this.commmentStart  ==  DISABLED)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart  ==  DISABLED)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart  ==  DISABLED)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
474	[BUG]  [BUGGY]  if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  return  in;  }  [CE]  illegal  start  of  expression  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  return  in;  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.delimiter  =  mapNullToDisabled(format.getDelimiter());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  return  in;  }	  this.delimiter    =    mapNullToDisabled(format.getDelimiter());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
475	[BUG]  [BUGGY]  if(this.delimiter!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.delimiter!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.delimiter!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(escape)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
476	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getEmptyChar());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getEmptyChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getEmptyChar());	  this.quoteChar    =    mapNullToDisabled(format.getEscapeChar());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
477	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getSequenceChar());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getSequenceChar());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getSequenceChar());	  this.quoteChar    =    mapNullToDisabled(format.getEscapeChar());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
478	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(Format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(Format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(Format.getCommentStart());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
479	[BUG]  [BUGGY]  final  char  commmentStart  =  this.commmentChar.getComments();  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  char  commmentStart  =  this.commmentChar.getComments();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  char  commmentStart  =  this.commmentChar.getComments();	  final    char    commmentStart    =    in.getComments();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
480	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  in  +  1);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  in  +  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  in  +  1);	  this.escape    =    mapNullToDisabled(format.getEscape(),    in);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
481	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this.in);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscape(),  this.in);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscape(),  this.in);	  this.escape    =    mapNullToDisabled(format.getEscape(),    in);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
482	[BUG]  [BUGGY]  if(this.delimiter  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.delimiter  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.delimiter  ==  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =	  if(in    ==    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
483	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  delimiter,  escape);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  delimiter,  escape);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  delimiter,  escape);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
484	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  delimiter,  escapeEmptyLines);  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  delimiter,  escapeEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar(),  delimiter,  escapeEmptyLines);	  this.quoteChar    =    mapNullToDisabled(format.getQuoteChar(),    delimiter);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
485	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreE  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreE  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreE	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreE    	non-compiled	[CE]  ';'  expected	107	None	replace
486	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnore	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreE    	non-compiled	[CE]  ';'  expected	107	None	replace
487	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  variable  quoteChar  might  already  have  been  assigned  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  if(this.ignoreEmptyLines!=    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    	non-compiled	[CE]  variable  quoteChar  might  already  have  been  assigned	119	None	replace
488	[BUG]  [BUGGY]  int  commmentStart  =  mapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  int  commmentStart  =  mapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	int  commmentStart  =  mapNullToDisabled(format.getCommentStart());	  Integer    commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
489	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  format.getDISABLED());  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  format.getDISABLED());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  format.getDISABLED());	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
490	[BUG]  [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  DEPRECATED);  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  DEPRECATED);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.DISABLED  =  mapNullToDisabled(format.getDISABLED(),  DEPRECATED);	  this.DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
491	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeString());  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(format.getEscapeString());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(format.getEscapeString());	  this.escape    =    mapNullToDisabled(format.getEscapeLines());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
492	[BUG]  [BUGGY]  if(this.neverEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.neverEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.neverEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.neverEmptyLines    =    format.getIgnoreNeverEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
493	[BUG]  [BUGGY]  if(this.neverEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  else  {  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.neverEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  else  {  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.neverEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  else  {	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.neverEmptyLines    =    format.getIgnoreNeverEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
494	[BUG]  [BUGGY]  if(this.neverEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.neverEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.neverEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  }  else  {  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines();  }	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.neverEmptyLines    =    format.getIgnoreNeverEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
495	[BUG]  [BUGGY]  if(this.neverEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines()  [CE]  ';'  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.neverEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines()  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.neverEmptyLines!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.neverEmptyLines  =  format.getIgnoreNeverEmptyLines()	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.neverEmptyLines    =    format.getIgnoreNeverEmptyLines();    	non-compiled	[CE]  ';'  expected	86	None	replace
496	[BUG]  [BUGGY]  this.neverEmptyLines  =  mapNullToDisabled(format.getIgnoreNeverEmptyLines());  [CE]  illegal  start  of  expression  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.neverEmptyLines  =  mapNullToDisabled(format.getIgnoreNeverEmptyLines());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.neverEmptyLines  =  mapNullToDisabled(format.getIgnoreNeverEmptyLines());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.neverEmptyLines    =    format.getIgnoreNeverEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
497	[BUG]  [BUGGY]  if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ign  [CE]  not  a  statement  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ign  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ign	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    this.ignor    	non-compiled	[CE]  not  a  statement	99	None	replace
498	[BUG]  [BUGGY]  if(this.ignoreChar  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ign  [CE]  not  a  statement  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.ignoreChar  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ign  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.ignoreChar  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this.ign	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    this.ignor    	non-compiled	[CE]  not  a  statement	99	None	replace
499	[BUG]  [BUGGY]  if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this  [CE]  not  a  statement  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.ignoreEmptyLines  ==  null)  {  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  else  {  this	  if(in    ==    null)    {    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    }    else    {    this.ignor    	non-compiled	[CE]  not  a  statement	99	None	replace
500	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in);  DISABLED  =  mapNullToDisabled(format.getDISABLED()  +  1);  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in);  DISABLED  =  mapNullToDisabled(format.getDISABLED()  +  1);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  in);  DISABLED  =  mapNullToDisabled(format.getDISABLED()  +  1);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    DISABLED    =    mapNullToDisabled(format.getDISABLED());    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
501	[BUG]  [BUGGY]  this.commmentStart  =  MapNullToDisabled(format.getCommentStart());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  MapNullToDisabled(format.getCommentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  MapNullToDisabled(format.getCommentStart());	  this.commmentStart    =    mapNullToDisabled(this.commentStart);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
502	[BUG]  [BUGGY]  final  char  commmentStart  =  this.commmentChar.getCommentStarts();  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  final  char  commmentStart  =  this.commmentChar.getCommentStarts();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	final  char  commmentStart  =  this.commmentChar.getCommentStarts();	  final    char    commmentStart    =    in.getCommentStarts();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
503	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoringEmptyLines);  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoringEmptyLines);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  this.ignoringEmptyLines);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    ignoreEmptyLines);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
504	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getIgnoreChar(),  delimiter);  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getIgnoreChar(),  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getIgnoreChar(),  delimiter);	  this.quoteChar    =    mapNullToDisabled(format.getIgnoreChar());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
505	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [CE]  not  a  statement  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    	non-compiled	[CE]  not  a  statement	29	None	replace
506	[BUG]  [BUGGY]  if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [CE]  not  a  statement  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.commmentStart!=  CSVFormat.DISABLED)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    	non-compiled	[CE]  not  a  statement	29	None	replace
507	[BUG]  [BUGGY]  if(quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  if(quoteChar    ==    null)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
508	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format!=  ';'  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format!=  ';'  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format!=  ';'	  if(in!=    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format    	non-compiled	[CE]  ';'  expected	67	None	replace
509	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLine	  if(in    ==    CSVFormat.DISABLED)    {    this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLine    	non-compiled	[CE]  ';'  expected	106	None	replace
510	[BUG]  [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCurrentChar(),  delimiter);  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteChar  =  mapNullToDisabled(format.getCurrentChar(),  delimiter);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteChar  =  mapNullToDisabled(format.getCurrentChar(),  delimiter);	  this.quoteChar    =    mapNullToDisabled(format.getCurrentChar());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
511	[BUG]  [BUGGY]  if(ignoreEmptyLines!=  null)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines!=  null)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines!=  null)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
512	[BUG]  [BUGGY]  if(ignoreEmptyLines  ==  null)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(ignoreEmptyLines  ==  null)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(ignoreEmptyLines  ==  null)  {  This.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();  }	  This.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
513	[BUG]  [BUGGY]  if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getQuoteChar());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
514	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getQuoteChar());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
515	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }	  this.commmentStart    =    mapNullToDisabled(format.getQuoteChar());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
516	[BUG]  [BUGGY]  if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.  [CE]  <identifier>  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(this.quoteChar!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getQuoteChar());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  }  else  {  this.	  this.commmentStart    =    mapNullToDisabled(format.getQuoteChar());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
517	[BUG]  [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getCharacterStart());  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.quoteStart  =  mapNullToDisabled(format.getCharacterStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.quoteStart  =  mapNullToDisabled(format.getCharacterStart());	  this.quoteStart    =    mapNullToDisabled(format.getQuoteChar());    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
518	[BUG]  [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in!=  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  ';'  expected	114	None	replace
519	[BUG]  [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	if(in  ==  null)  {  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  ';'  expected	114	None	replace
520	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.quoteChar    =    mapNullToDisabled(format.getQuoteChar());    this.ignoreEmptyLines    =    format.getIgnoreEmptyLines    	non-compiled	[CE]  ';'  expected	114	None	replace
521	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in;  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in;  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  format.getIgnoreEmptyLines(),  in;	  this.ignoreEmptyLines    =    format.getIgnoreEmptyLines(),    in);    	non-compiled	[CE]  ';'  expected	48	None	replace
522	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(Format.getCommmentStart());  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(Format.getCommmentStart());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(Format.getCommmentStart());	  this.commmentStart    =    mapNullToDisabled(in);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
523	[BUG]  [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out);  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out);  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.commmentStart  =  mapNullToDisabled(format.getCommentStart(),  out);	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart(),    in);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
524	[BUG]  [BUGGY]  this.escape  =  mapNullToDisabled(for.getEscape());  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.escape  =  mapNullToDisabled(for.getEscape());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.escape  =  mapNullToDisabled(for.getEscape());	  this.escape    =    mapNullToDisabled(format.getEscape()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
525	[BUG]  [BUGGY]  this.ignoreEmptyLines  =  mapNullToDisabled(format.getIgnoreEmptyLines());  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreEmptyLines  =  mapNullToDisabled(format.getIgnoreEmptyLines());  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreEmptyLines  =  mapNullToDisabled(format.getIgnoreEmptyLines());	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreSurroundingSpaces    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
526	[BUG]  [BUGGY]  this.ignoreStart  =  mapNullToDisabled(format.getIgnoreStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      Lexer(final  CSVFormat  format,  final  ExtendedBufferedReader  in)  {  this.format  =  format;  this.in  =  in;  this.delimiter  =  format.getDelimiter();  this.escape  =  mapNullToDisabled(format.getEscape());  this.quoteChar  =  mapNullToDisabled(format.getQuoteChar());  this.commmentStart  =  mapNullToDisabled(format.getCommentStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreSurroundingSpaces();  this.ignoreEmptyLines  =  format.getIgnoreEmptyLines();      [BUGGY]  this.ignoreStart  =  mapNullToDisabled(format.getIgnoreStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();  [BUGGY]        [CLASS]  Lexer  [METHOD]  <init>  [RETURN_TYPE]  ExtendedBufferedReader)  CSVFormat  format  ExtendedBufferedReader  in  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	66	66	3	replace	this.ignoreStart  =  mapNullToDisabled(format.getIgnoreStart());  this.ignoreSurroundingSpaces  =  format.getIgnoreEmptyLines();	  this.commmentStart    =    mapNullToDisabled(format.getCommentStart());    this.ignoreSurroundingSpaces    =    format.getIgnoreEmptyLines();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
