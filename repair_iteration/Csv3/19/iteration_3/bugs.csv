bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()!=  0)  {	  if(in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	168	49	replace
2	[BUG]  [BUGGY]  if(in.read()!=  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()!=  0)  {	  if(in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	168	49	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  >=  0)  {	  if(in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	168	49	replace
4	[BUG]  [BUGGY]  if(in.read()  >=  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  >=  0)  {	  if(in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	168	49	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  -1)  {	  if(in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	168	48	replace
6	[BUG]  [BUGGY]  if(in.read()  ==  -1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  -1)  {	  if(in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	168	48	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()!=  LF)  {	  if(in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	168	49	replace
8	[BUG]  [BUGGY]  if(in.read()!=  LF)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()!=  LF)  {	  if(in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	168	49	replace
9	[BUG]  [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    LF)    {    if(in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	add
10	[BUG]  [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    LF)    {    if(in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	add
11	[BUG]  [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    LF)    {    if(in.lookAhead()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	add
12	[BUG]  [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()  ==  FT)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()  ==  FT)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    LF)    {    if(in.lookAhead()  ==  FT)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	add
13	[BUG]  [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()  ==  FR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()  ==  FR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    LF)    {    if(in.lookAhead()  ==  FR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	add
14	[BUG]  [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()  ==  RF)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()  ==  RF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    LF)    {    if(in.lookAhead()  ==  RF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	add
15	[BUG]  [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()  >=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    LF)    {    if(in.lookAhead()  >=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	add
16	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  <  DISABLED  ||  c  ==  'n')  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	157	48	replace
17	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n')  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  ||  c  ==  'n')  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	157	48	replace
18	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'e'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  'e'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	157	25	replace
19	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  DISABLED)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'e'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'e'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	157	25	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'r'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  'r'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	157	19	replace
21	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  DISABLED)  {  [FE]  AssertionError  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'r'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'r'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	157	19	replace
22	[BUG]  [BUGGY]  if(c  ==  'ufffd'  ||  c  ==  DISABLED)  {  [CE]  unclosed  character  literal  [FE]          Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'ufffd'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'ufffd'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  unclosed  character  literal	157	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  '-'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  '-'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	157	9	replace
24	[BUG]  [BUGGY]  if(c  ==  '-'  ||  c  ==  DISABLED)  {  [FE]  AssertionError  [FE]            Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  '-'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  '-'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	157	9	replace
25	[BUG]  [BUGGY]  if(in.lookAhead()!=  c)  {  if(in.lookAhead()!=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  c)  {  if(in.lookAhead()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    c)    {    if(in.lookAhead()!=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	205	None	add
26	[BUG]  [BUGGY]  if(in.lookAhead()!=  c)  {  if(in.lookAhead()  >=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  c)  {  if(in.lookAhead()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    c)    {    if(in.lookAhead()  >=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	205	None	add
27	[BUG]  [BUGGY]  if(in.lookAhead()!=  c)  {  if(in.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  c)  {  if(in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    c)    {    if(in.lookAhead()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	205	None	add
28	[BUG]  [BUGGY]  if(in.lookAhead()!=  c)  {  if(in.lookAhead()  >>  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  c)  {  if(in.lookAhead()  >>  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    c)    {    if(in.lookAhead()  >>  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	205	None	add
29	[BUG]  [BUGGY]  if(in.lookAhead()!=  c)  {  if(in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  c)  {  if(in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    c)    {    if(in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	205	None	add
30	[BUG]  [BUGGY]  if(in.lookAhead()!=  c)  {  if(in.lookAhead()  [Delete]  c)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  c)  {  if(in.lookAhead()  [Delete]  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    c)    {    if(in.lookAhead()  [Delete]  c)  {	  	non-compiled	[CE]  ')'  expected	205	None	add
31	[BUG]  [BUGGY]  if(in.read()  ==  CR  &&  isEndOfLine(c))  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR  &&  isEndOfLine(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  CR  &&  isEndOfLine(c))  {	  if(in.read()    ==    c    &&    isEndOfLine(c))    {    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
32	[BUG]  [BUGGY]  if(c.read()  ==  in  &&  isEndOfLine(c))  {  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c.read()  ==  in  &&  isEndOfLine(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c.read()  ==  in  &&  isEndOfLine(c))  {	  if(in.read()    ==    c    &&    isEndOfLine(c))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	175	None	replace
33	[BUG]  [BUGGY]  if(in.read()  ==  LF  &&  isEndOfLine(c))  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  LF  &&  isEndOfLine(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  LF  &&  isEndOfLine(c))  {	  if(in.read()    ==    c    &&    isEndOfLine(c))    {    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
34	[BUG]  [BUGGY]  if(c.read()  ==  int  &&  isEndOfLine(c))  {  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c.read()  ==  int  &&  isEndOfLine(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c.read()  ==  int  &&  isEndOfLine(c))  {	  if(in.read()    ==    c    &&    isEndOfLine(c))    {    	non-compiled	[CE]  '.class'  expected	175	None	replace
35	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  isEndOfLine(c))  {  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  isEndOfLine(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  ||  isEndOfLine(c))  {	  if(in.read()    ==    c    &&    isEndOfLine(c))    {    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
36	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  isEndOfLine(c)||  isEndOfLine(c))  {  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  isEndOfLine(c)||  isEndOfLine(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  &&  isEndOfLine(c)||  isEndOfLine(c))  {	  if(in.read()    ==    c    &&    isEndOfLine(c))    {    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  >  CR)  {	  if    (in.lookAhead()    >    CR)    {    	compilable	  [FE]  AssertionError  	214	49	replace
38	[BUG]  [BUGGY]  if  (in.read()  >  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  >  CR)  {	  if    (in.lookAhead()    >    CR)    {    	compilable	  [FE]  AssertionError  	214	49	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  >=  CR)  {	  if    (in.lookAhead()    >    CR)    {    	compilable	  [FE]  AssertionError  	214	49	replace
40	[BUG]  [BUGGY]  if  (in.lookAhead()  >=  CR)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  >=  CR)  {	  if    (in.lookAhead()    >    CR)    {    	compilable	  [FE]  AssertionError  	214	49	replace
41	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  >  0)  {	  if    (in.lookAhead()    >    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	214	47	replace
42	[BUG]  [BUGGY]  if  (in.lookAhead()  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  >  0)  {	  if    (in.lookAhead()    >    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	214	47	replace
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  >  LF)  {	  if    (in.lookAhead()    >    CR)    {    	compilable	  [FE]  AssertionError  	214	49	replace
44	[BUG]  [BUGGY]  if  (in.lookAhead()  >  LF)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  >  LF)  {	  if    (in.lookAhead()    >    CR)    {    	compilable	  [FE]  AssertionError  	214	49	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  <  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  <  CR)  {	  if    (in.lookAhead()    >    CR)    {    	compilable	  [FE]  AssertionError  	214	31	replace
46	[BUG]  [BUGGY]  if  (in.lookAhead()  <  CR)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  <  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  <  CR)  {	  if    (in.lookAhead()    >    CR)    {    	compilable	  [FE]  AssertionError  	214	31	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  in.read()  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	60	7	replace
48	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  DISABLED)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  in.read()  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	60	7	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	60	7	replace
50	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	60	7	replace
51	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	48	replace
52	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	48	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	60	7	replace
54	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	60	7	replace
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	6	7	replace
56	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	6	7	replace
57	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	48	replace
58	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	48	replace
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	6	7	replace
60	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	6	7	replace
61	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentEnd)  {  [CE]  cannot  find  symbol  commmentEnd  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentEnd)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentEnd)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    	non-compiled	[CE]  cannot  find  symbol  commmentEnd	6	None	replace
62	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  ||  in.read()  ==  CR)  {	  if(in!=    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	154	48	replace
63	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  ==  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.read()  ==  CR)  {	  if(in!=    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	154	48	replace
64	[BUG]  [BUGGY]  if(c  ==  null  ||  in.read()  ==  c)  {  [CE]  incomparable  types:  int  and  <null>  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  null  ||  in.read()  ==  c)  {	  if(in!=    null    ||    in.read()    ==    c)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	154	None	replace
65	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  0  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c!=  0  ||  in.read()  ==  c)  {	  if(in!=    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	154	48	replace
66	[BUG]  [BUGGY]  if(c!=  0  ||  in.read()  ==  c)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  0  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c!=  0  ||  in.read()  ==  c)  {	  if(in!=    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	154	48	replace
67	[BUG]  [BUGGY]  if(c!=  null  ||  in.read()  ==  c)  {  [CE]  incomparable  types:  int  and  <null>  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c!=  null  ||  in.read()  ==  c)  {	  if(in!=    null    ||    in.read()    ==    c)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	154	None	replace
68	[BUG]  [BUGGY]  String  commmentStart  =  readEndOfLine(c);  [CE]  illegal  start  of  type  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  String  commmentStart  =  readEndOfLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	String  commmentStart  =  readEndOfLine(c);	  char    commmentStart    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
69	[BUG]  [BUGGY]  int  commmentStart  =  readEndOfLine(c);  [CE]  illegal  start  of  type  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  int  commmentStart  =  readEndOfLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	int  commmentStart  =  readEndOfLine(c);	  char    commmentStart    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
70	[BUG]  [BUGGY]  Char  commmentStart  =  readEndOfLine(c);  [CE]  illegal  start  of  type  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Char  commmentStart  =  readEndOfLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Char  commmentStart  =  readEndOfLine(c);	  char    commmentStart    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
71	[BUG]  [BUGGY]  Integer  commmentStart  =  readEndOfLine(c);  [CE]  illegal  start  of  type  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  commmentStart  =  readEndOfLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  commmentStart  =  readEndOfLine(c);	  char    commmentStart    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
72	[BUG]  [BUGGY]  Character  commmentStart  =  readEndOfLine(c);  [CE]  illegal  start  of  type  [FE]                                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Character  commmentStart  =  readEndOfLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Character  commmentStart  =  readEndOfLine(c);	  char    commmentStart    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
73	[BUG]  [BUGGY]  if(in.read()  ==  CR  &&  in.isEmptyLine())  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR  &&  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  CR  &&  in.isEmptyLine())  {	  if(in.read()    ==    c    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
74	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.isEmptyLine())  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  ||  in.isEmptyLine())  {	  if(in.read()    ==    c    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
75	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart  &&  in.isEmptyLine())  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart  &&  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart  &&  in.isEmptyLine())  {	  if(in.read()    ==    c    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
76	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.isEmptyLine())  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  &&  in.isEmptyLine())  {	  if(in.read()    ==    c    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
77	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  isEmptyLine())  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  &&  isEmptyLine())  {	  if(in.read()    ==    c    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
78	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.isEmptyLine()  ||  in.isEmptyLine())  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.isEmptyLine()  ||  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  &&  in.isEmptyLine()  ||  in.isEmptyLine())  {	  if(in.read()    ==    c    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  in.read()  ||  in.lookAhead()  ==  LF)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	50	replace
80	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  LF)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  in.read()  ||  in.lookAhead()  ==  LF)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	50	replace
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  in.read()  ||  in.lookAhead()  ==  0)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	50	replace
82	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  in.read()  ||  in.lookAhead()  ==  0)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	50	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  c  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  ==  c  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	48	replace
84	[BUG]  [BUGGY]  if  (in.read()  ==  c  ||  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  c  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  c  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	48	replace
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  in.read()  &&  in.lookAhead()  ==  CR)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	50	replace
86	[BUG]  [BUGGY]  if  (c  <  in.read()  &&  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  in.read()  &&  in.lookAhead()  ==  CR)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	50	replace
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  ==  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	49	replace
88	[BUG]  [BUGGY]  if  (in.read()  ==  LF  ||  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	49	replace
89	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  in.read()  ||  in.lookAhead()!=  LF)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	49	replace
90	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()!=  LF)  {  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  in.read()  ||  in.lookAhead()!=  LF)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	49	replace
91	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	add
92	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	add
93	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c!=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c!=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c!=  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	add
94	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	add
95	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	add
96	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	add
97	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  in.lookAhead()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  &&  in.lookAhead()  >  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	134	7	replace
98	[BUG]  [BUGGY]  if(c  ==  DISABLED  &&  in.lookAhead()  >  LF)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  in.lookAhead()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  &&  in.lookAhead()  >  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	134	7	replace
99	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  &&  in.lookAhead()  >=  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	134	7	replace
100	[BUG]  [BUGGY]  if(c  ==  DISABLED  &&  in.lookAhead()  >=  LF)  {  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  &&  in.lookAhead()  >=  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	134	7	replace
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	134	7	replace
102	[BUG]  [BUGGY]  if(c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	134	7	replace
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  0  ||  in.read()  ==  0)  {	  if    (c    <    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	18	48	replace
104	[BUG]  [BUGGY]  if  (c  <  0  ||  in.read()  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  0  ||  in.read()  ==  0)  {	  if    (c    <    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	18	48	replace
105	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.lookAhead()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  0  ||  in.lookAhead()  >  0)  {	  if    (c    <    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	47	replace
106	[BUG]  [BUGGY]  if  (c  <  0  ||  in.lookAhead()  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.lookAhead()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  0  ||  in.lookAhead()  >  0)  {	  if    (c    <    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	47	replace
107	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  0  ||  in.lookAhead()!=  0)  {	  if    (c    <    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	48	replace
108	[BUG]  [BUGGY]  if  (c  <  0  ||  in.lookAhead()!=  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  0  ||  in.lookAhead()!=  0)  {	  if    (c    <    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	48	replace
109	[BUG]  [BUGGY]  if  (c  <  =  0  ||  in.lookAhead()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  0  ||  in.lookAhead()  ==  0)  {	  if    (c    <    0    ||    in.lookAhead()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
110	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	133	7	replace
111	[BUG]  [BUGGY]  if(c  ==  DISABLED)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	133	7	replace
112	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    if  (c  >=  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	226	None	add
113	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c!=  DISABLED  ||  c  >  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c!=  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    if  (c!=  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	226	None	add
114	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c  >>  DISABLED  ||  c  >  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c  >>  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    if  (c  >>  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	226	None	add
115	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c  ==  DISABLED  ||  c  >  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c  ==  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    if  (c  ==  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	226	None	add
116	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c  [Delete]  DISABLED  ||  c  >  DISABLED)  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c  [Delete]  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    if  (c  [Delete]  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  ')'  expected	226	None	add
117	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c  [BUGGY]  DISABLED  ||  c  >  DISABLED)  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c  [BUGGY]  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    if  (c  [BUGGY]  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  ')'  expected	226	None	add
118	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	248	48	replace
119	[BUG]  [BUGGY]  if(in!=  null  ||  in.lookAhead()  ==  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	248	48	replace
120	[BUG]  [BUGGY]  if(in!=  null)  {  if  (c  ==  LF  &&  out.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if  (c  ==  LF  &&  out.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if  (c  ==  LF  &&  out.lookAhead()  ==  CR)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	248	None	replace
121	[BUG]  [BUGGY]  if(in!=  null)  {  if(c  ==  in.read())  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(c  ==  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(c  ==  in.read())  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	248	None	replace
122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in  ==  null  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	248	14	replace
123	[BUG]  [BUGGY]  if(in  ==  null  ||  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	248	14	replace
124	[BUG]  [BUGGY]  if(in!=  null)  {  if  (c  ==  in.lookAhead())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if  (c  ==  in.lookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if  (c  ==  in.lookAhead())  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	248	None	replace
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  <  in.read())  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	248	50	replace
126	[BUG]  [BUGGY]  if(c  <  in.read())  {  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  in.read())  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	248	50	replace
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()!=  c)  {	  if(in.read()    ==    c)    {    if(in.read()!=    c)    {    	compilable	  [FE]  AssertionError  	42	50	replace
128	[BUG]  [BUGGY]  if(in.read()!=  c)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()!=  c)  {	  if(in.read()    ==    c)    {    if(in.read()!=    c)    {    	compilable	  [FE]  AssertionError  	42	50	replace
129	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  >=  c)  {	  if(in.read()    ==    c)    {    if(in.read()!=    c)    {    	compilable	  [FE]  AssertionError  	42	50	replace
130	[BUG]  [BUGGY]  if(in.read()  >=  c)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  >=  c)  {	  if(in.read()    ==    c)    {    if(in.read()!=    c)    {    	compilable	  [FE]  AssertionError  	42	50	replace
131	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()!=  CR)  {	  if(in.read()    ==    c)    {    if(in.read()!=    c)    {    	compilable	  [FE]  AssertionError  	42	49	replace
132	[BUG]  [BUGGY]  if(in.read()!=  CR)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()!=  CR)  {	  if(in.read()    ==    c)    {    if(in.read()!=    c)    {    	compilable	  [FE]  AssertionError  	42	49	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  ==  0  &&  in.lookAhead()  ==  0)  {	  if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	84	7	replace
134	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  0  &&  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  ==  0  &&  in.lookAhead()  ==  0)  {	  if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	84	7	replace
135	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  ==  CR  ||  in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	48	replace
136	[BUG]  [BUGGY]  if  (in.read()  ==  CR  ||  in.lookAhead()  ==  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  CR  ||  in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	48	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  ==  CR  &&  in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	84	48	replace
138	[BUG]  [BUGGY]  if  (in.read()  ==  CR  &&  in.lookAhead()  ==  LF)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  CR  &&  in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	84	48	replace
139	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	84	26	replace
140	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  LF)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	84	26	replace
141	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  c  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  ==  c  &&  in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	84	48	replace
142	[BUG]  [BUGGY]  if  (in.read()  ==  c  &&  in.lookAhead()  ==  LF)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  c  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  c  &&  in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	84	48	replace
143	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED)    {    if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	add
144	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  c!=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  c!=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED)    {    if  (c  ==  DISABLED  &&  c!=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	add
145	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  if  (c!=  DISABLED  &&  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  if  (c!=  DISABLED  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED)    {    if  (c!=  DISABLED  &&  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	add
146	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED)    {    if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	add
147	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  c  >=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED)    {    if  (c  ==  DISABLED  &&  c  >=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	add
148	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  If  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  If  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED)    {    If  (c  ==  DISABLED  &&  c  ==  DISABLED)  {	  	non-compiled	[CE]  ';'  expected	120	None	add
149	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	add
150	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  c  ==  DISABLED)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	160	7	replace
151	[BUG]  [BUGGY]  if(in!=  null  &&  c  ==  DISABLED)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  c  ==  DISABLED)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	160	7	replace
152	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in  ==  null  ||  c  ==  DISABLED)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	160	7	replace
153	[BUG]  [BUGGY]  if(in  ==  null  ||  c  ==  DISABLED)  {  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  ||  c  ==  DISABLED)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	160	7	replace
154	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  ||  in!=  null)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	48	replace
155	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  in!=  null)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  ||  in!=  null)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	48	replace
156	[BUG]  [BUGGY]  if(in!=  null  ||  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  <  =  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  c  <  =  DISABLED)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
157	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  ||  c  >=  DISABLED)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	48	replace
158	[BUG]  [BUGGY]  if(in!=  null  ||  c  >=  DISABLED)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  c  >=  DISABLED)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	48	replace
159	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	266	None	add
160	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(in.read()!=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(in.read()!=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if(in.read()!=  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	266	None	add
161	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(in.read()  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(in.read()  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if(in.read()  ==  DISABLED  &&  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	266	None	add
162	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(in.read()  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(in.read()  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if(in.read()  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	266	None	add
163	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if(c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	266	None	add
164	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(out.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(out.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if(out.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	266	None	add
165	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(in.read()  ==  DISABLED  &&  in.lookAhead()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(in.read()  ==  DISABLED  &&  in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if(in.read()  ==  DISABLED  &&  in.lookAhead()  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	266	None	add
166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  in.read())  {	  if(in.lookAhead()    ==    c)    {    if(c    ==    in.lookAhead())    {    	compilable	  [FE]  AssertionError  	33	47	replace
167	[BUG]  [BUGGY]  if(c  ==  in.read())  {  [FE]  AssertionError  [FE]                IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  in.read())  {	  if(in.lookAhead()    ==    c)    {    if(c    ==    in.lookAhead())    {    	compilable	  [FE]  AssertionError  	33	47	replace
168	[BUG]  [BUGGY]  if(in.read()  ==  c)  {  if(c  ==  in.read())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c)  {  if(c  ==  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c)  {  if(c  ==  in.read())  {	  if(in.lookAhead()    ==    c)    {    if(c    ==    in.lookAhead())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
169	[BUG]  [BUGGY]  if(in.lookAhead()  >  c)  {  if(c  ==  in.lookAhead())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >  c)  {  if(c  ==  in.lookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  >  c)  {  if(c  ==  in.lookAhead())  {	  if(in.lookAhead()    ==    c)    {    if(c    ==    in.lookAhead())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
170	[BUG]  [BUGGY]  if(in.read()  ==  c)  {  if(c  <  in.read())  {  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c)  {  if(c  <  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c)  {  if(c  <  in.read())  {	  if(in.lookAhead()    ==    c)    {    if(c    ==    in.lookAhead())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
171	[BUG]  [BUGGY]  if(in.read()  ==  c)  {  if(c  >=  in.read())  {  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c)  {  if(c  >=  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c)  {  if(c  >=  in.read())  {	  if(in.lookAhead()    ==    c)    {    if(c    ==    in.lookAhead())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
172	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.read()  ==  0)  {	  if(in!=    null    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	217	48	replace
173	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  ==  0)  {	  if(in!=    null    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	217	48	replace
174	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  ||  in.read()  >  0)  {	  if(in!=    null    &&    in.read()    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	217	48	replace
175	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.read()  >  0)  {	  if(in!=    null    &&    in.read()    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	217	48	replace
176	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  <  =  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  <  =  0)  {	  if(in!=    null    &&    in.read()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.read()  >=  0)  {	  if(in!=    null    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	217	49	replace
178	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >=  0)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  >=  0)  {	  if(in!=    null    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	217	49	replace
179	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  <  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.read()  <  0)  {	  if(in!=    null    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	217	48	replace
180	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  <  0)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  <  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  <  0)  {	  if(in!=    null    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	217	48	replace
181	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in  ==  null  &&  in.read()  >  0)  {	  if(in!=    null    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	217	7	replace
182	[BUG]  [BUGGY]  if(in  ==  null  &&  in.read()  >  0)  {  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  &&  in.read()  >  0)  {	  if(in!=    null    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	217	7	replace
183	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  in.read()  ==  CR)  {	  if    (c    <    DISABLED    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	48	replace
184	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.read()  ==  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  in.read()  ==  CR)  {	  if    (c    <    DISABLED    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	48	replace
185	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    DISABLED    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
186	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  in.lookAhead()  ==  commmentStart)  {	  if    (c    <    DISABLED    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	48	replace
187	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  commmentStart)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  in.lookAhead()  ==  commmentStart)  {	  if    (c    <    DISABLED    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	48	replace
188	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  in.lookAhead()  ==  0)  {	  if    (c    <    DISABLED    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	48	replace
189	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  in.lookAhead()  ==  0)  {	  if    (c    <    DISABLED    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	48	replace
190	[BUG]  [BUGGY]  if(in!=  null)  {  if(c  <  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(c  <  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(c  <  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
191	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  [CE]  class,  interface,  or  enum  expected  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	233	None	add
192	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  ((  in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1))  {  [CE]  class,  interface,  or  enum  expected  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  ((  in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    if  ((  in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	233	None	add
193	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()!=  -1)  {  [CE]  class,  interface,  or  enum  expected  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()!=  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    if  (in.lookAhead()  ==  -1  ||  in.lookAhead()!=  -1)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	233	None	add
194	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  (in.lookAhead()!=  -1  ||  in.lookAhead()  ==  -1)  {  [CE]  class,  interface,  or  enum  expected  [FE]          Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  (in.lookAhead()!=  -1  ||  in.lookAhead()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    if  (in.lookAhead()!=  -1  ||  in.lookAhead()  ==  -1)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	233	None	add
195	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  (in.lookAhead()  ==  -2  ||  in.lookAhead()  ==  -1)  {  [CE]  class,  interface,  or  enum  expected  [FE]            Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  (in.lookAhead()  ==  -2  ||  in.lookAhead()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    if  (in.lookAhead()  ==  -2  ||  in.lookAhead()  ==  -1)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	233	None	add
196	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	add
197	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  ||  in.lookAhead()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  ||  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  ||  in.lookAhead()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	add
198	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (c!=  DISABLED  ||  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	add
199	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (c  >=  DISABLED  ||  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	add
200	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	add
201	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  >=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  ||  in.lookAhead()  >=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	add
202	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  in.read()  ==  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	199	7	replace
203	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  in.read()  ==  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	199	7	replace
204	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	199	7	replace
205	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	199	7	replace
206	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  in.read()  ==  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	199	7	replace
207	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.read()  ==  0)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  in.read()  ==  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	199	7	replace
208	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  in.lookAhead()  >  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	199	7	replace
209	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  >  0)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  in.lookAhead()  >  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	199	7	replace
210	[BUG]  [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    0)    {    if(in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	add
211	[BUG]  [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    0)    {    if(in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	add
212	[BUG]  [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    0)    {    if(in.lookAhead()!=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	add
213	[BUG]  [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    0)    {    if(in.lookAhead()  >=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	add
214	[BUG]  [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  ==  0  ||  in.lookAhead()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  ==  0  ||  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    0)    {    if(in.lookAhead()  ==  0  ||  in.lookAhead()!=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	add
215	[BUG]  [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  ==  0  ||  in.lookAhead()  ==  10)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  ==  0  ||  in.lookAhead()  ==  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    0)    {    if(in.lookAhead()  ==  0  ||  in.lookAhead()  ==  10)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	add
216	[BUG]  [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  ==  0  ||  in.lookAhead()  ==  5)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  ==  0  ||  in.lookAhead()  ==  5)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    0)    {    if(in.lookAhead()  ==  0  ||  in.lookAhead()  ==  5)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	add
217	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  0  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  0  ||  in.read()  ==  c)  {	  if(in    ==    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	193	47	replace
218	[BUG]  [BUGGY]  if(c  ==  0  ||  in.read()  ==  c)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  0  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  0  ||  in.read()  ==  c)  {	  if(in    ==    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	193	47	replace
219	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  ||  in.read()  ==  c)  {	  if(in    ==    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	193	47	replace
220	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  in.read()  ==  c)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  ||  in.read()  ==  c)  {	  if(in    ==    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	193	47	replace
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in  ==  null  ||  in.read()  ==  CR)  {	  if(in    ==    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	193	48	replace
222	[BUG]  [BUGGY]  if(in  ==  null  ||  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  ||  in.read()  ==  CR)  {	  if(in    ==    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	193	48	replace
223	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  Integer.MAX_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  Integer.MAX_VALUE)  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	208	7	replace
224	[BUG]  [BUGGY]  if(c  ==  Integer.MAX_VALUE)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  Integer.MAX_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  Integer.MAX_VALUE)  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	208	7	replace
225	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  Integer.MIN_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  Integer.MIN_VALUE)  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	208	7	replace
226	[BUG]  [BUGGY]  if(c  ==  Integer.MIN_VALUE)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  Integer.MIN_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  Integer.MIN_VALUE)  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	208	7	replace
227	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	34	7	replace
228	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [FE]  AssertionError  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	34	7	replace
229	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    CR)    {    if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	add
230	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.read()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    CR)    {    if  (c  ==  DISABLED  &&  in.read()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	add
231	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  if  (c!=  DISABLED  &&  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  if  (c!=  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    CR)    {    if  (c!=  DISABLED  &&  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	add
232	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.read()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.read()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    CR)    {    if  (c  ==  DISABLED  &&  in.read()  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	add
233	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  if  (c  >=  DISABLED  &&  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  if  (c  >=  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    CR)    {    if  (c  >=  DISABLED  &&  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	add
234	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    CR)    {    if  (c  ==  DISABLED  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	add
235	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  If  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  If  (c  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    CR)    {    If  (c  ==  DISABLED  &&  in.read()  ==  CR)  {	  	non-compiled	[CE]  ';'  expected	110	None	add
236	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  in.read()  ==  LF)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	58	7	replace
237	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.read()  ==  LF)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  in.read()  ==  LF)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	58	7	replace
238	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  ||  in.lookAhead()  ==  LF)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	58	26	replace
239	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  LF)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  ||  in.lookAhead()  ==  LF)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	58	26	replace
240	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c!=  DISABLED  &&  in.lookAhead()  ==  CR)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	58	14	replace
241	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c!=  DISABLED  &&  in.lookAhead()  ==  CR)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	58	14	replace
242	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	58	7	replace
243	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	58	7	replace
244	[BUG]  [BUGGY]  if(c  <  =  DISABLED  &&  in.lookAhead()!=  LF)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  DISABLED  &&  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  DISABLED  &&  in.lookAhead()!=  LF)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    in.lookAhead()!=    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
245	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0  ||  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  0  ||  in.read()  ==  0)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    (Integer.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	240	50	replace
246	[BUG]  [BUGGY]  if(in.read()  ==  0  ||  in.read()  ==  0)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0  ||  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  0  ||  in.read()  ==  0)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    (Integer.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	240	50	replace
247	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  CR  ||  c  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  CR  ||  c  ==  LF)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    (Integer.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	240	33	replace
248	[BUG]  [BUGGY]  if(c  ==  CR  ||  c  ==  LF)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  CR  ||  c  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  CR  ||  c  ==  LF)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    (Integer.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	240	33	replace
249	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  c  ||  in.read()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    (Integer.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	240	50	replace
250	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  LF)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  ||  in.read()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    (Integer.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	240	50	replace
251	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	add
252	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    if  (in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	add
253	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	add
254	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  >>  0  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  >>  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    if  (in.lookAhead()  >>  0  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	add
255	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()!=  0  ||  in.lookAhead()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()!=  0  ||  in.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    if  (in.lookAhead()!=  0  ||  in.lookAhead()  >=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	add
256	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  >=  0  ||  in.lookAhead()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  >=  0  ||  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    if  (in.lookAhead()  >=  0  ||  in.lookAhead()!=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	add
257	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  ((  in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  ((  in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    if  ((  in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	add
258	[BUG]  [BUGGY]  String  c  =  in.read();  [CE]  illegal  start  of  type  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  String  c  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	String  c  =  in.read();	  char    c    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
259	[BUG]  [BUGGY]  int  c  =  in.read();  [CE]  illegal  start  of  type  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  int  c  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	int  c  =  in.read();	  char    c    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
260	[BUG]  [BUGGY]  Char  c  =  in.read();  [CE]  illegal  start  of  type  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Char  c  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Char  c  =  in.read();	  char    c    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
261	[BUG]  [BUGGY]  Integer  c  =  in.read();  [CE]  illegal  start  of  type  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  c  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  c  =  in.read();	  char    c    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
262	[BUG]  [BUGGY]  Character  c  =  in.read();  [CE]  illegal  start  of  type  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Character  c  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Character  c  =  in.read();	  char    c    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
263	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	add
264	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	add
265	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	add
266	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	add
267	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	add
268	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	add
269	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	add
270	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  [CE]  class,  interface,  or  enum  expected  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	258	None	add
271	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(in.lookAhead()!=  c  &&  in.read()  >  10)  {  [CE]  class,  interface,  or  enum  expected  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(in.lookAhead()!=  c  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    if(in.lookAhead()!=  c  &&  in.read()  >  10)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	258	None	add
272	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(in.lookAhead()  >=  c  &&  in.read()  >  10)  {  [CE]  class,  interface,  or  enum  expected  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(in.lookAhead()  >=  c  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    if(in.lookAhead()  >=  c  &&  in.read()  >  10)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	258	None	add
273	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  If(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  [CE]  ';'  expected  [FE]          Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  If(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    If(in.lookAhead()  ==  c  &&  in.read()  >  10)  {	  	non-compiled	[CE]  ';'  expected	258	None	add
274	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    if  (c  <  DISABLED  ||  c  >=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	176	None	add
275	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c!=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c!=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    if  (c  <  DISABLED  ||  c!=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	176	None	add
276	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c  >>  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c  >>  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    if  (c  <  DISABLED  ||  c  >>  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	176	None	add
277	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    if  (c  <  DISABLED  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	176	None	add
278	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c  [BUGGY]  DISABLED)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c  [BUGGY]  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    if  (c  <  DISABLED  ||  c  [BUGGY]  DISABLED)  {	  	non-compiled	[CE]  ')'  expected	176	None	add
279	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c  [Delete]  DISABLED)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c  [Delete]  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    if  (c  <  DISABLED  ||  c  [Delete]  DISABLED)  {	  	non-compiled	[CE]  ')'  expected	176	None	add
280	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c  [PATCH]  DISABLED)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  if  (c  <  DISABLED  ||  c  [PATCH]  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    if  (c  <  DISABLED  ||  c  [PATCH]  DISABLED)  {	  	non-compiled	[CE]  ')'  expected	176	None	add
281	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.read()!=  c)  {	  if(in!=    null    &&    in.read()    >=    c)    {    	compilable	  [FE]  AssertionError  	251	50	replace
282	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()!=  c)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()!=  c)  {	  if(in!=    null    &&    in.read()    >=    c)    {    	compilable	  [FE]  AssertionError  	251	50	replace
283	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  <  =  c)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  <  =  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  <  =  c)  {	  if(in!=    null    &&    in.read()    >=    c)    {    	non-compiled	[CE]  illegal  start  of  expression	251	None	replace
284	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  ||  in.read()  >=  c)  {	  if(in!=    null    &&    in.read()    >=    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	251	48	replace
285	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  >=  c)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.read()  >=  c)  {	  if(in!=    null    &&    in.read()    >=    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	251	48	replace
286	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  <  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.read()  <  c)  {	  if(in!=    null    &&    in.read()    >=    c)    {    	compilable	  [FE]  AssertionError  	251	50	replace
287	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  <  c)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  <  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  <  c)  {	  if(in!=    null    &&    in.read()    >=    c)    {    	compilable	  [FE]  AssertionError  	251	50	replace
288	[BUG]  [BUGGY]  if(in!=  null)  {  if  (c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if  (c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if  (c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    out.lookAhead()    ==    LF)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	247	None	replace
289	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  ||  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    out.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	247	48	replace
290	[BUG]  [BUGGY]  if(in!=  null  ||  in.lookAhead()  ==  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    out.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	247	48	replace
291	[BUG]  [BUGGY]  if(c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {  [CE]  cannot  find  symbol  out  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    out.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  out	247	None	replace
292	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  out.lookAhead()  ==  CR)  {  [CE]  cannot  find  symbol  out  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  out.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  out.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    out.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  out	247	None	replace
293	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  ==  0  ||  in.lookAhead()!=  0)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    (in.lookAhead()    ==    CR    ||    in.lookAhead()!=    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	48	replace
294	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()!=  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  ==  0  ||  in.lookAhead()!=  0)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    (in.lookAhead()    ==    CR    ||    in.lookAhead()!=    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	127	48	replace
295	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  'n'  ||  c  ==  'r')  {	  if(in!=    null)    {    if(in!=    null)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	94	22	replace
296	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {	  if(in!=    null)    {    if(in!=    null)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	94	22	replace
297	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  >=  DISABLED)  {	  if(in!=    null)    {    if(in!=    null)    {    	compilable	  [FE]  AssertionError  	94	7	replace
298	[BUG]  [BUGGY]  if(c  >=  DISABLED)  {  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  >=  DISABLED)  {	  if(in!=    null)    {    if(in!=    null)    {    	compilable	  [FE]  AssertionError  	94	7	replace
299	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c!=  DISABLED)  {	  if(in!=    null)    {    if(in!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	48	replace
300	[BUG]  [BUGGY]  if(c!=  DISABLED)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c!=  DISABLED)  {	  if(in!=    null)    {    if(in!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	48	replace
301	[BUG]  [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
302	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()  >  c)  {	  if(in.lookAhead()    >=    c)    {    	compilable	  [FE]  AssertionError  	257	47	replace
303	[BUG]  [BUGGY]  if(in.lookAhead()  >  c)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  >  c)  {	  if(in.lookAhead()    >=    c)    {    	compilable	  [FE]  AssertionError  	257	47	replace
304	[BUG]  [BUGGY]  if(in.lookAhead()  <  =  c)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  <  =  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  <  =  c)  {	  if(in.lookAhead()    >=    c)    {    	non-compiled	[CE]  illegal  start  of  expression	257	None	replace
305	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	add
306	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c!=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c!=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c!=  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	add
307	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	add
308	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  >>  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  >>  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  >>  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	add
309	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  &&  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  &&  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  >=  DISABLED  &&  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	add
310	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	add
311	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  DISABLED  ||  c  <  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  >=  DISABLED  ||  c  <  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED)    {    if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	73	48	replace
312	[BUG]  [BUGGY]  if(c  >=  DISABLED  ||  c  <  DISABLED)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  DISABLED  ||  c  <  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  >=  DISABLED  ||  c  <  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED)    {    if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	73	48	replace
313	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED)  {  If(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED)  {  If(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  ||  c  >  DISABLED)  {  If(c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    If    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  ';'  expected	166	None	replace
314	[BUG]  [BUGGY]  if(c  <  DISABLED)  {  If(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED)  {  If(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED)  {  If(c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    If    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  ';'  expected	166	None	replace
315	[BUG]  [BUGGY]  if(c  <  =  DISABLED)  {  If  (c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  DISABLED)  {  If  (c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  DISABLED)  {  If  (c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    If    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
316	[BUG]  [BUGGY]  if(in!=  null)  {  if  (c  <  DISABLED  &&  out.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if  (c  <  DISABLED  &&  out.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if  (c  <  DISABLED  &&  out.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    out.lookAhead()    ==    LF)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	218	None	replace
317	[BUG]  [BUGGY]  if(in  ==  null)  {  if  (c  <  DISABLED  &&  out.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if  (c  <  DISABLED  &&  out.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  if  (c  <  DISABLED  &&  out.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    out.lookAhead()    ==    LF)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	218	None	replace
318	[BUG]  [BUGGY]  if(c  <  =  DISABLED  &&  out.lookAhead()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  DISABLED  &&  out.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  DISABLED  &&  out.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    out.lookAhead()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
319	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF    ||    in.lookAhead()    ==    CR)    {    if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	add
320	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()  >=  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()  >=  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF    ||    in.lookAhead()    ==    CR)    {    if  (in.lookAhead()  >=  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	add
321	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF    ||    in.lookAhead()    ==    CR)    {    if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	add
322	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()  >>  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()  >>  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF    ||    in.lookAhead()    ==    CR)    {    if  (in.lookAhead()  >>  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	add
323	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF    ||    in.lookAhead()    ==    CR)    {    if  (in.lookAhead()!=  LF  ||  in.lookAhead()  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	add
324	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
325	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (c  <  LF  ||  in.lookAhead()!=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]      (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (c  <  LF  ||  in.lookAhead()!=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    if  (c  <  LF  ||  in.lookAhead()!=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
326	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (c  <  LF  ||  in.lookAhead()  >=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]        (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (c  <  LF  ||  in.lookAhead()  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    if  (c  <  LF  ||  in.lookAhead()  >=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
327	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (c  <  LB  ||  in.lookAhead()  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]          (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (c  <  LB  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    if  (c  <  LB  ||  in.lookAhead()  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
328	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (c  <  LC  ||  in.lookAhead()  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]            (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (c  <  LC  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    if  (c  <  LC  ||  in.lookAhead()  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
329	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  If  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  [CE]  ';'  expected  [FE]              (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  If  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    If  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
330	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()!=  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	48	replace
331	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()!=  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()!=  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	48	replace
332	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  AssertionError  	35	7	replace
333	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {  [FE]  AssertionError  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  AssertionError  	35	7	replace
334	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  >=  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	48	replace
335	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  >=  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  >=  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	48	replace
336	[BUG]  [BUGGY]  if(c  <  =  DISABLED)  {  if(c  >=  DISABLED  ||  c  ==  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  DISABLED)  {  if(c  >=  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  DISABLED)  {  if(c  >=  DISABLED  ||  c  ==  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    if    (c    >=    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
337	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  >=  DISABLED  ||  c  ==  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    if    (c    >=    DISABLED    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	164	7	replace
338	[BUG]  [BUGGY]  if(c  >=  DISABLED  ||  c  ==  DISABLED)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  >=  DISABLED  ||  c  ==  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    if    (c    >=    DISABLED    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	164	7	replace
339	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED)  {  If(c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED)  {  If(c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  ||  c  >  DISABLED)  {  If(c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    If    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  ';'  expected	239	None	replace
340	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  ';')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  ';')  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    If    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	239	8	replace
341	[BUG]  [BUGGY]  if(c  ==  ';')  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  ';')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  ';')  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    If    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	239	8	replace
342	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  <  DISABLED  ||  c  ==  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	49	replace
343	[BUG]  [BUGGY]  if  (in.read()  <  DISABLED  ||  c  ==  DISABLED)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  <  DISABLED  ||  c  ==  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	49	replace
344	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  >  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  >  DISABLED  ||  c  >  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	48	replace
345	[BUG]  [BUGGY]  if  (in.read()  >  DISABLED  ||  c  >  DISABLED)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  >  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  >  DISABLED  ||  c  >  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	48	replace
346	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  <  DISABLED  ||  c  >=  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	49	replace
347	[BUG]  [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >=  DISABLED)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  <  DISABLED  ||  c  >=  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	49	replace
348	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  ==  DISABLED  ||  c  >  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	48	replace
349	[BUG]  [BUGGY]  if  (in.read()  ==  DISABLED  ||  c  >  DISABLED)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  DISABLED  ||  c  >  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	48	replace
350	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  >=  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  >=  DISABLED  ||  c  >  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	48	replace
351	[BUG]  [BUGGY]  if  (in.read()  >=  DISABLED  ||  c  >  DISABLED)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  >=  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  >=  DISABLED  ||  c  >  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	48	replace
352	[BUG]  [BUGGY]  if  (in.read()  <  DISABLED  ||  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c  <  =  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  <  DISABLED  ||  c  <  =  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
353	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c!=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  <  DISABLED  ||  c!=  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	49	replace
354	[BUG]  [BUGGY]  if  (in.read()  <  DISABLED  ||  c!=  DISABLED)  {  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c!=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  <  DISABLED  ||  c!=  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	49	replace
355	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  if(c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  if(c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    'n'    ||    c    ==    DISABLED)    {    if(c  ==  'n'  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	156	None	add
356	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  if(c  ==  'n'  ||  c!=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  if(c  ==  'n'  ||  c!=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    'n'    ||    c    ==    DISABLED)    {    if(c  ==  'n'  ||  c!=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	156	None	add
357	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  if(c!=  'n'  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  if(c!=  'n'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    'n'    ||    c    ==    DISABLED)    {    if(c!=  'n'  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	156	None	add
358	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  if(c  >=  'n'  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]          Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  if(c  >=  'n'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    'n'    ||    c    ==    DISABLED)    {    if(c  >=  'n'  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	156	None	add
359	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  if(c  ==  'n'  ||  c  >=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]            Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  if(c  ==  'n'  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    'n'    ||    c    ==    DISABLED)    {    if(c  ==  'n'  ||  c  >=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	156	None	add
360	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  if(c  {  'n'  ||  c  ==  DISABLED)  {  [CE]  ')'  expected  [FE]              Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  if(c  {  'n'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    'n'    ||    c    ==    DISABLED)    {    if(c  {  'n'  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  ')'  expected	156	None	add
361	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  If(c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  ';'  expected  [FE]                Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)  {  If(c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    'n'    ||    c    ==    DISABLED)    {    If(c  ==  'n'  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  ';'  expected	156	None	add
362	[BUG]  [BUGGY]  if(in.read()  ==  0  ||  in.read()  ==  0)  {  if((  in.lookAhead()  ==  0)||(in.lookAhead()  ==  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0  ||  in.read()  ==  0)  {  if((  in.lookAhead()  ==  0)||(in.lookAhead()  ==  0))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  0  ||  in.read()  ==  0)  {  if((  in.lookAhead()  ==  0)||(in.lookAhead()  ==  0))  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    ((    in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
363	[BUG]  [BUGGY]  if(c  ==  CR  ||  c  ==  LF)  {  if((  in.lookAhead()  ==  CR  ||  in.lookAhead()  ==  LF)  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  CR  ||  c  ==  LF)  {  if((  in.lookAhead()  ==  CR  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  CR  ||  c  ==  LF)  {  if((  in.lookAhead()  ==  CR  ||  in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    ((    in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  ')'  expected	128	None	replace
364	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  if(in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  if(in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  0)  {  if(in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    ((    in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
365	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  ')')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  ')')  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    ((    in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	128	7	replace
366	[BUG]  [BUGGY]  if(c  ==  ')')  {  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  ')')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  ')')  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    ((    in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	128	7	replace
367	[BUG]  [BUGGY]  if(c  <  =  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
368	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  <  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	161	48	replace
369	[BUG]  [BUGGY]  if(c  <  DISABLED)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	161	48	replace
370	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (in.lookAhead()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF)    {    if  (in.lookAhead()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	add
371	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (in.lookAhead()  >=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF)    {    if  (in.lookAhead()  >=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	add
372	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF)    {    if  (in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	add
373	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (in.lookAhead()  >>  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (in.lookAhead()  >>  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF)    {    if  (in.lookAhead()  >>  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	add
374	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (in.lookAhead()!=  FT)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (in.lookAhead()!=  FT)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF)    {    if  (in.lookAhead()!=  FT)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	add
375	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (in.lookAhead()!=  FR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (in.lookAhead()!=  FR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF)    {    if  (in.lookAhead()!=  FR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	add
376	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  <  =  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  ||  c  <  =  DISABLED)  {	  if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	227	None	replace
377	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c!=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  ||  c!=  DISABLED)  {	  if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	227	48	replace
378	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  c!=  DISABLED)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c!=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  ||  c!=  DISABLED)  {	  if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	227	48	replace
379	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >  DISABLED  ||  c  >=  DISABLED)  {	  if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	227	7	replace
380	[BUG]  [BUGGY]  if  (c  >  DISABLED  ||  c  >=  DISABLED)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >  DISABLED  ||  c  >=  DISABLED)  {	  if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	227	7	replace
381	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED)  {  If  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED)  {  If  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  ||  c  >  DISABLED)  {  If  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    If    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
382	[BUG]  [BUGGY]  If  (in.lookAhead()  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  If  (in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	If  (in.lookAhead()  ==  0)  {	  if    (in.lookAhead()    ==    CR)    {    If    (in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
383	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	add
384	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  &&  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  &&  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  <  DISABLED  &&  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	add
385	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  &&  in.lookAhead()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  &&  in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  <  DISABLED  &&  in.lookAhead()  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	add
386	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	add
387	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  &&  out.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  &&  out.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  <  DISABLED  &&  out.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	add
388	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  If  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  If  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.lookAhead()    ==    CR)    {    If  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  ';'  expected	118	None	add
389	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	add
390	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	add
391	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c!=  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c!=  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  (c!=  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	add
392	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  (c  >=  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	add
393	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  c!=  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  c!=  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  ||  c!=  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	add
394	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  c  ==  LD  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  c  ==  LD  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  ||  c  ==  LD  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	add
395	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  c  ==  FIN  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  c  ==  FIN  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  ||  c  ==  FIN  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	add
396	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  READ  &&  in.lookAhead()  ==  LF)  {  [CE]  cannot  find  symbol  READ  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  READ  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  ||  c  ==  READ  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    READ    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  READ	221	None	replace
397	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    READ    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	221	None	replace
398	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	209	None	add
399	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	209	None	add
400	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	209	None	add
401	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  &&  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  &&  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  &&  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	209	None	add
402	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  >=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  >=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	209	None	add
403	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	209	None	add
404	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	209	None	add
405	[BUG]  [BUGGY]  if(in!=  null)  {  if(in.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(in.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
406	[BUG]  [BUGGY]  if(in.isEnabled())  {  if(in.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]          IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.isEnabled())  {  if(in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.isEnabled())  {  if(in.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
407	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	add
408	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	add
409	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	add
410	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >>  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >>  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >>  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	add
411	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c!=  DISABLED  &&  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	add
412	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	add
413	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	add
414	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(in!=  null  ||  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(in!=  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    in.read()    ==    c)    {    if(in!=  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	add
415	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(in  ==  null  ||  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(in  ==  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    in.read()    ==    c)    {    if(in  ==  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	add
416	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(c  ==  null  ||  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(c  ==  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    in.read()    ==    c)    {    if(c  ==  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	add
417	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(c!=  null  ||  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(c!=  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    in.read()    ==    c)    {    if(c!=  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	add
418	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(in!=  null  ||  in.read()  >=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(in!=  null  ||  in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    in.read()    ==    c)    {    if(in!=  null  ||  in.read()  >=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	add
419	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(in  >=  null  ||  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(in  >=  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    in.read()    ==    c)    {    if(in  >=  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	add
420	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(c  >=  null  ||  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(c  >=  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    in.read()    ==    c)    {    if(c  >=  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	add
421	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  &&  in.lookAhead()  ==  CR)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
422	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  ==  DISABLED)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	119	7	replace
423	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  DISABLED)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  ==  DISABLED)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	119	7	replace
424	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  ||  in.read()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  ||  in.read()  ==  LF)  {	  if    (c    <    =    DISABLED    &&    in.read()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
425	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  &&  in.read()  ==  commmentStart)  {  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  &&  in.read()  ==  commmentStart)  {	  if    (c    <    =    DISABLED    &&    in.read()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
426	[BUG]  [BUGGY]  if(c  <  =  DISABLED)  {  if  (c  ==  DISABLED  ||  c  >=  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  DISABLED)  {  if  (c  ==  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  DISABLED)  {  if  (c  ==  DISABLED  ||  c  >=  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    if    (c    ==    DISABLED    ||    c    >=    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
427	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  in.read()  ==  CR)  {	  if    (c    ==    DISABLED    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	68	48	replace
428	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  in.read()  ==  CR)  {	  if    (c    ==    DISABLED    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	68	48	replace
429	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  FR  &&  in.lookAhead()  ==  LF)  {  [CE]  cannot  find  symbol  FR  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  FR  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  FR  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    FR    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  FR	269	None	replace
430	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    FR    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	269	None	replace
431	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.parseInt(c)||  Integer.parseInt(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.parseInt(c)||  Integer.parseInt(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.parseInt(c)||  Integer.parseInt(c))  {	  if(in!=    null)    {    if(Integer.parseInt(c))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
432	[BUG]  [BUGGY]  if(in!=  null)  {  if(!Integer.parseInt(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(!Integer.parseInt(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(!Integer.parseInt(c))  {	  if(in!=    null)    {    if(Integer.parseInt(c))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
433	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.parseInt(c)||  Character.isDigit(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.parseInt(c)||  Character.isDigit(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.parseInt(c)||  Character.isDigit(c))  {	  if(in!=    null)    {    if(Integer.parseInt(c))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
434	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  Integer.MIN_VALUE  ||  c  ==  Integer.MAX_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  Integer.MIN_VALUE  ||  c  ==  Integer.MAX_VALUE)  {	  if(in!=    null)    {    if(Integer.parseInt(c))    {    	compilable	  [FE]  AssertionError  	228	7	replace
435	[BUG]  [BUGGY]  if(c  ==  Integer.MIN_VALUE  ||  c  ==  Integer.MAX_VALUE)  {  [FE]  AssertionError  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  Integer.MIN_VALUE  ||  c  ==  Integer.MAX_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  Integer.MIN_VALUE  ||  c  ==  Integer.MAX_VALUE)  {	  if(in!=    null)    {    if(Integer.parseInt(c))    {    	compilable	  [FE]  AssertionError  	228	7	replace
436	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  Integer.MIN_VALUE  ||  c  ==  Integer.MAX_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c!=  Integer.MIN_VALUE  ||  c  ==  Integer.MAX_VALUE)  {	  if(in!=    null)    {    if(Integer.isLetter(c))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	231	48	replace
437	[BUG]  [BUGGY]  if(c!=  Integer.MIN_VALUE  ||  c  ==  Integer.MAX_VALUE)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  Integer.MIN_VALUE  ||  c  ==  Integer.MAX_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c!=  Integer.MIN_VALUE  ||  c  ==  Integer.MAX_VALUE)  {	  if(in!=    null)    {    if(Integer.isLetter(c))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	231	48	replace
438	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  Integer.MIN_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c!=  Integer.MIN_VALUE)  {	  if(in!=    null)    {    if(Integer.isLetter(c))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	231	48	replace
439	[BUG]  [BUGGY]  if(c!=  Integer.MIN_VALUE)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  Integer.MIN_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c!=  Integer.MIN_VALUE)  {	  if(in!=    null)    {    if(Integer.isLetter(c))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	231	48	replace
440	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c!=  DISABLED  &&  in.read()  ==  LF)  {	  if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	62	49	replace
441	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.read()  ==  LF)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c!=  DISABLED  &&  in.read()  ==  LF)  {	  if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	62	49	replace
442	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c!=  DISABLED  ||  in.lookAhead()  ==  LF)  {	  if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	48	replace
443	[BUG]  [BUGGY]  if  (c!=  DISABLED  ||  in.lookAhead()  ==  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c!=  DISABLED  ||  in.lookAhead()  ==  LF)  {	  if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	48	replace
444	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	10	7	replace
445	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	10	7	replace
446	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  <  =  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  <  =  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c  <  =  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
447	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	10	7	replace
448	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	10	7	replace
449	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	48	replace
450	[BUG]  [BUGGY]  if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	48	replace
451	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	10	7	replace
452	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  CR)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	10	7	replace
453	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  CR)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	10	7	replace
454	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  CR)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	10	7	replace
455	[BUG]  [BUGGY]  if(in!=  null)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    ||    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	246	None	replace
456	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    ||    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	246	None	replace
457	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if    (c    >=    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
458	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if  (c  >=  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if  (c  >=  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if  (c  >=  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if    (c    >=    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
459	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  CR)  {  if  (c  ==  DISABLED  ||  c  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  CR)  {  if  (c  ==  DISABLED  ||  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    CR)    {    if  (c  ==  DISABLED  ||  c  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	add
460	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  CR)  {  if  (c  ==  DISABLED  ||  c!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  CR)  {  if  (c  ==  DISABLED  ||  c!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    CR)    {    if  (c  ==  DISABLED  ||  c!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	add
461	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  CR)  {  if  (c!=  DISABLED  ||  c  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  CR)  {  if  (c!=  DISABLED  ||  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    CR)    {    if  (c!=  DISABLED  ||  c  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	add
462	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  CR)  {  if  (c  >=  DISABLED  ||  c  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  CR)  {  if  (c  >=  DISABLED  ||  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    CR)    {    if  (c  >=  DISABLED  ||  c  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	add
463	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  CR)  {  if  (c  ==  DISABLED  ||  c  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  CR)  {  if  (c  ==  DISABLED  ||  c  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    CR)    {    if  (c  ==  DISABLED  ||  c  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	add
464	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  CR)  {  If  (c  ==  DISABLED  ||  c  ==  CR)  {  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  CR)  {  If  (c  ==  DISABLED  ||  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    CR)    {    If  (c  ==  DISABLED  ||  c  ==  CR)  {	  	non-compiled	[CE]  ';'  expected	123	None	add
465	[BUG]  [BUGGY]  if(c  <  =  DISABLED)  {  if  (c  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  DISABLED)  {  if  (c  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  DISABLED)  {  if  (c  <  DISABLED  ||  c  >  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED)    {    if    (c    <    DISABLED    ||    c    >    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
466	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	add
467	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.read()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.read()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c  ==  DISABLED  &&  in.read()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	add
468	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c!=  DISABLED  &&  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c!=  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c!=  DISABLED  &&  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	add
469	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.read()  >=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.read()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c  ==  DISABLED  &&  in.read()  >=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	add
470	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  >=  DISABLED  &&  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  >=  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c  >=  DISABLED  &&  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	add
471	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c  ==  DISABLED  ||  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	add
472	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.read()  ==  RF)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.read()  ==  RF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c  ==  DISABLED  &&  in.read()  ==  RF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	add
473	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	12	7	replace
474	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	12	7	replace
475	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	48	replace
476	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  commmentStart)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	48	replace
477	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  delimiter)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  delimiter)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	12	7	replace
478	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  delimiter)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  delimiter)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  delimiter)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	12	7	replace
479	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	12	7	replace
480	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  0)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	12	7	replace
481	[BUG]  [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  (in.lookAhead()  >  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  (in.lookAhead()  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    >    CR)    {    if  (in.lookAhead()  >  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	213	None	add
482	[BUG]  [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  (Integer.lookAhead()  >  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  (Integer.lookAhead()  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    >    CR)    {    if  (Integer.lookAhead()  >  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	213	None	add
483	[BUG]  [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  ((  in.lookAhead()  >  CR)||(c  ==  DISABLED))  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  ((  in.lookAhead()  >  CR)||(c  ==  DISABLED))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    >    CR)    {    if  ((  in.lookAhead()  >  CR)||(c  ==  DISABLED))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	213	None	add
484	[BUG]  [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  ((  in.lookAhead()  >  CR)||(c  >=  DISABLED))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  ((  in.lookAhead()  >  CR)||(c  >=  DISABLED))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    >    CR)    {    if  ((  in.lookAhead()  >  CR)||(c  >=  DISABLED))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	213	None	add
485	[BUG]  [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  ((  in.lookAhead()  >  CR)||(c  <  DISABLED))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  ((  in.lookAhead()  >  CR)||(c  <  DISABLED))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    >    CR)    {    if  ((  in.lookAhead()  >  CR)||(c  <  DISABLED))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	213	None	add
486	[BUG]  [BUGGY]  if(in!=  null  ||  in.available()  >  0)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.available()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.available()  >  0)  {	  if(in!=    null    &&    in.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	252	None	replace
487	[BUG]  [BUGGY]  if(in  ==  null  &&  in.available()  >  0)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  &&  in.available()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  &&  in.available()  >  0)  {	  if(in!=    null    &&    in.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	252	None	replace
488	[BUG]  [BUGGY]  if(in  >=  null  &&  in.available()  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  >=  null  &&  in.available()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  >=  null  &&  in.available()  >  0)  {	  if(in!=    null    &&    in.available()    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	252	None	replace
489	[BUG]  [BUGGY]  if(in!=  null  &&  in.available()  <  0)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.available()  <  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.available()  <  0)  {	  if(in!=    null    &&    in.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	252	None	replace
490	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	add
491	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	add
492	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  if  (c!=  DISABLED  &&  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  if  (c!=  DISABLED  &&  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    if  (c!=  DISABLED  &&  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	add
493	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  >>  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  >>  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  >>  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	add
494	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  if  (c  >=  DISABLED  &&  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  if  (c  >=  DISABLED  &&  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    if  (c  >=  DISABLED  &&  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	add
495	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    if  (c  ==  DISABLED  ||  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	add
496	[BUG]  [BUGGY]  String  commmentStart  =  in.read(c);  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  String  commmentStart  =  in.read(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	String  commmentStart  =  in.read(c);	  char    commmentStart    =    in.read(c);    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
497	[BUG]  [BUGGY]  int  commmentStart  =  in.read(c);  [CE]  illegal  start  of  type  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  int  commmentStart  =  in.read(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	int  commmentStart  =  in.read(c);	  char    commmentStart    =    in.read(c);    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
498	[BUG]  [BUGGY]  Char  commmentStart  =  in.read(c);  [CE]  illegal  start  of  type  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Char  commmentStart  =  in.read(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Char  commmentStart  =  in.read(c);	  char    commmentStart    =    in.read(c);    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
499	[BUG]  [BUGGY]  Character  commmentStart  =  in.read(c);  [CE]  illegal  start  of  type  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Character  commmentStart  =  in.read(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Character  commmentStart  =  in.read(c);	  char    commmentStart    =    in.read(c);    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
500	[BUG]  [BUGGY]  Integer  commmentStart  =  in.read(c);  [CE]  illegal  start  of  type  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  commmentStart  =  in.read(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  commmentStart  =  in.read(c);	  char    commmentStart    =    in.read(c);    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
501	[BUG]  [BUGGY]  char  commmentStart  =  in.read(c,  DISABLED);  [CE]  illegal  start  of  type  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  char  commmentStart  =  in.read(c,  DISABLED);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	char  commmentStart  =  in.read(c,  DISABLED);	  char    commmentStart    =    in.read(c);    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
502	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  if(in.read()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  if(in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    0)    {    if(in.read()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	add
503	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  if(in.read()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  if(in.read()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    0)    {    if(in.read()!=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	add
504	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  if(in.read()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  if(in.read()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    0)    {    if(in.read()  >=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	add
505	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  if(c  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  if(c  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    0)    {    if(c  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	add
506	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  If(in.read()  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  If(in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    0)    {    If(in.read()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	169	None	add
507	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    ==    DISABLED)    {    if  (c  <  DISABLED  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	178	None	add
508	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    ==    DISABLED)    {    if  (c  <  DISABLED  ||  c  >=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	178	None	add
509	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (c  <  DISABLED  ||  c!=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (c  <  DISABLED  ||  c!=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    ==    DISABLED)    {    if  (c  <  DISABLED  ||  c!=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	178	None	add
510	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (c  <  DISABLED  ||  c  >>  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (c  <  DISABLED  ||  c  >>  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    ==    DISABLED)    {    if  (c  <  DISABLED  ||  c  >>  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	178	None	add
511	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  If  (c  <  DISABLED  ||  c  ==  DISABLED)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  If  (c  <  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    ==    DISABLED)    {    If  (c  <  DISABLED  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  ';'  expected	178	None	add
512	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (c  >=  DISABLED  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (c  >=  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    ==    DISABLED)    {    if  (c  >=  DISABLED  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	178	None	add
513	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED)    {    if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	add
514	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  if  (c!=  DISABLED  &&  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  if  (c!=  DISABLED  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED)    {    if  (c!=  DISABLED  &&  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	add
515	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  if  (c  >>  DISABLED  &&  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  if  (c  >>  DISABLED  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED)    {    if  (c  >>  DISABLED  &&  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	add
516	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED)    {    if  (c  ==  DISABLED  &&  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	add
517	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  if  (c  >=  DISABLED  &&  c!=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  if  (c  >=  DISABLED  &&  c!=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED)    {    if  (c  >=  DISABLED  &&  c!=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	add
518	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  if  (c  [Delete]  DISABLED  &&  c  ==  DISABLED)  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  if  (c  [Delete]  DISABLED  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED)    {    if  (c  [Delete]  DISABLED  &&  c  ==  DISABLED)  {	  	non-compiled	[CE]  ')'  expected	235	None	add
519	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  <  DISABLED  ||  in.lookAhead()!=  CR)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    if    (C    <    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	270	48	replace
520	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  in.lookAhead()!=  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  ||  in.lookAhead()!=  CR)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    if    (C    <    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	270	48	replace
521	[BUG]  [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    0)    {    if(in.lookAhead()  >=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	203	None	add
522	[BUG]  [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    0)    {    if(in.lookAhead()!=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	203	None	add
523	[BUG]  [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()  >>  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()  >>  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    0)    {    if(in.lookAhead()  >>  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	203	None	add
524	[BUG]  [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    0)    {    if(in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	203	None	add
525	[BUG]  [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()  [Delete]  0)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()  [Delete]  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    0)    {    if(in.lookAhead()  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	203	None	add
526	[BUG]  [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()  [BUGGY]  0)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()  [BUGGY]  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    0)    {    if(in.lookAhead()  [BUGGY]  0)  {	  	non-compiled	[CE]  ')'  expected	203	None	add
527	[BUG]  [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()  <  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  0)  {  if(in.lookAhead()  <  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    0)    {    if(in.lookAhead()  <  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	203	None	add
528	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  in.read()  ==  LF)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	109	49	replace
529	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.read()  ==  LF)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  in.read()  ==  LF)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	109	49	replace
530	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  in.read()  ==  LF)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	109	48	replace
531	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.read()  ==  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  in.read()  ==  LF)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	109	48	replace
532	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  COMMENT_START)  {  [CE]  cannot  find  symbol  COMMENT_START  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  COMMENT_START)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  in.read()  ==  COMMENT_START)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	109	None	replace
533	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentEnd)  {  [CE]  cannot  find  symbol  commmentEnd  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentEnd)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  in.read()  ==  commmentEnd)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  commmentEnd	109	None	replace
534	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  in.read()!=  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    	compilable	  [FE]  AssertionError  	115	7	replace
535	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()!=  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  in.read()!=  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    	compilable	  [FE]  AssertionError  	115	7	replace
536	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  in.lookAhead()!=  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	115	45	replace
537	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()!=  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  in.lookAhead()!=  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	115	45	replace
538	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  in.read()!=  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    	compilable	  [FE]  AssertionError  	115	7	replace
539	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.read()!=  CR)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  in.read()!=  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    	compilable	  [FE]  AssertionError  	115	7	replace
540	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c!=  DISABLED  &&  in.read()!=  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    	compilable	  [FE]  AssertionError  	115	49	replace
541	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.read()!=  CR)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c!=  DISABLED  &&  in.read()!=  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    	compilable	  [FE]  AssertionError  	115	49	replace
542	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0)  {  if  (in.lookAhead()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0)  {  if  (in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0)    {    if  (in.lookAhead()!=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	add
543	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0)  {  if  (in.lookAhead()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0)  {  if  (in.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0)    {    if  (in.lookAhead()  >=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	add
544	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0)  {  if  (in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0)  {  if  (in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0)    {    if  (in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	add
545	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0)  {  if  (in.lookAhead()  >>  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0)  {  if  (in.lookAhead()  >>  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0)    {    if  (in.lookAhead()  >>  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	add
546	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)&&(c  <  DISABLED  ||  c  >  DISABLED))  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)&&(c  <  DISABLED  ||  c  >  DISABLED))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0)    {    if  ((  in.lookAhead()  >=  0)&&(c  <  DISABLED  ||  c  >  DISABLED))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	add
547	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)||(in.lookAhead()!=  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)||(in.lookAhead()!=  0))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0)    {    if  ((  in.lookAhead()  >=  0)||(in.lookAhead()!=  0))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	add
548	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)&&(in.lookAhead()!=  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)&&(in.lookAhead()!=  0))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0)    {    if  ((  in.lookAhead()  >=  0)&&(in.lookAhead()!=  0))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	add
549	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)||(c  ==  DISABLED))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)||(c  ==  DISABLED))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0)    {    if  ((  in.lookAhead()  >=  0)||(c  ==  DISABLED))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	add
550	[BUG]  [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    0    ||    in.lookAhead()    ==    0)    {    if  (c  <  0  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	add
551	[BUG]  [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  if  (c  <  0  ||  in.lookAhead()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  if  (c  <  0  ||  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    0    ||    in.lookAhead()    ==    0)    {    if  (c  <  0  ||  in.lookAhead()!=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	add
552	[BUG]  [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  if  (c  <  0  ||  in.lookAhead()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  if  (c  <  0  ||  in.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    0    ||    in.lookAhead()    ==    0)    {    if  (c  <  0  ||  in.lookAhead()  >=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	add
553	[BUG]  [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  if  (c  >=  0  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  if  (c  >=  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    0    ||    in.lookAhead()    ==    0)    {    if  (c  >=  0  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	add
554	[BUG]  [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  If  (c  <  0  ||  in.lookAhead()  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  If  (c  <  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    0    ||    in.lookAhead()    ==    0)    {    If  (c  <  0  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
555	[BUG]  [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  if  (c  <  0  ||  out.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  if  (c  <  0  ||  out.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    0    ||    in.lookAhead()    ==    0)    {    if  (c  <  0  ||  out.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	add
556	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  <  =  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  <  =  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  c  <  =  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
557	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	212	7	replace
558	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	212	7	replace
559	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	212	7	replace
560	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	212	7	replace
561	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  ||  in.read()  ==  0)  {	  if(in.read()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	170	48	replace
562	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.read()  ==  0)  {	  if(in.read()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	170	48	replace
563	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  0  ||  in.read()  ==  c)  {	  if(in.read()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	170	50	replace
564	[BUG]  [BUGGY]  if(in.read()  ==  0  ||  in.read()  ==  c)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  0  ||  in.read()  ==  c)  {	  if(in.read()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	170	50	replace
565	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in  ==  null  ||  in.read()  ==  0)  {	  if(in.read()    ==    0)    {    	compilable	  [FE]  AssertionError  	170	48	replace
566	[BUG]  [BUGGY]  if(in  ==  null  ||  in.read()  ==  0)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  ||  in.read()  ==  0)  {	  if(in.read()    ==    0)    {    	compilable	  [FE]  AssertionError  	170	48	replace
567	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0  ||  in.read()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  0  ||  in.read()!=  c)  {	  if(in.read()    ==    0)    {    	compilable	  [FE]  AssertionError  	170	50	replace
568	[BUG]  [BUGGY]  if(in.read()  ==  0  ||  in.read()!=  c)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0  ||  in.read()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  0  ||  in.read()!=  c)  {	  if(in.read()    ==    0)    {    	compilable	  [FE]  AssertionError  	170	50	replace
569	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.read()  ==  CR)  {	  if(in!=    null    &&    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	191	48	replace
570	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  ==  CR)  {	  if(in!=    null    &&    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	191	48	replace
571	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  commmentStart  &&  in!=  null  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c!=  commmentStart  &&  in!=  null  &&  in.read()  ==  c)  {	  if(in!=    null    &&    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	191	47	replace
572	[BUG]  [BUGGY]  if(c!=  commmentStart  &&  in!=  null  &&  in.read()  ==  c)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  commmentStart  &&  in!=  null  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c!=  commmentStart  &&  in!=  null  &&  in.read()  ==  c)  {	  if(in!=    null    &&    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	191	47	replace
573	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in  ==  null  &&  in.read()  ==  c)  {	  if(in!=    null    &&    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	191	7	replace
574	[BUG]  [BUGGY]  if(in  ==  null  &&  in.read()  ==  c)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  &&  in.read()  ==  c)  {	  if(in!=    null    &&    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	191	7	replace
575	[BUG]  [BUGGY]  if(c!=  null  &&  in.read()  ==  c)  {  [CE]  incomparable  types:  int  and  <null>  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  null  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c!=  null  &&  in.read()  ==  c)  {	  if(in!=    null    &&    in.read()    ==    c)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	191	None	replace
576	[BUG]  [BUGGY]  if  (c  <  =  0  &&  in.lookAhead()  ==  CR)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  0  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  0  &&  in.lookAhead()  ==  CR)  {	  if    (c    <    =    LF    &&    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  illegal  start  of  expression	260	None	replace
577	[BUG]  [BUGGY]  if  (c  <  =  COMMENT_START  ||  in.lookAhead()  ==  CR)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  COMMENT_START  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  COMMENT_START  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    =    LF    &&    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  illegal  start  of  expression	260	None	replace
578	[BUG]  [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	181	None	add
579	[BUG]  [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  (Integer.read()  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  (Integer.read()  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    if  (Integer.read()  <  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	181	None	add
580	[BUG]  [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  (out.read()  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  (out.read()  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    if  (out.read()  <  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	181	None	add
581	[BUG]  [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  (c  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  (c  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    if  (c  <  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	181	None	add
582	[BUG]  [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  If  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  If  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    If  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  ';'  expected	181	None	add
583	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  in.lookAhead()  >=  CR)  {	  if    (c    <    DISABLED    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	113	48	replace
584	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  >=  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  in.lookAhead()  >=  CR)  {	  if    (c    <    DISABLED    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	113	48	replace
585	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  COMMENT_START)  {  [CE]  cannot  find  symbol  COMMENT_START  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  COMMENT_START)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  in.lookAhead()  ==  COMMENT_START)  {	  if    (c    <    DISABLED    ||    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	113	None	replace
586	[BUG]  [BUGGY]  if(c  <  =  DISABLED  &&  in.lookAhead()  >=  LF)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  DISABLED  &&  in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  DISABLED  &&  in.lookAhead()  >=  LF)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    in.lookAhead()    >=    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
587	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  &&  in.lookAhead()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  <  DISABLED  &&  in.lookAhead()  >  LF)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	26	49	replace
588	[BUG]  [BUGGY]  if(c  <  DISABLED  &&  in.lookAhead()  >  LF)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  &&  in.lookAhead()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  &&  in.lookAhead()  >  LF)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	26	49	replace
589	[BUG]  [BUGGY]  String  CR  =  in.read();  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  String  CR  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	String  CR  =  in.read();	  char    CR    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
590	[BUG]  [BUGGY]  int  CR  =  in.read();  [CE]  illegal  start  of  type  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  int  CR  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	int  CR  =  in.read();	  char    CR    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
591	[BUG]  [BUGGY]  Char  CR  =  in.read();  [CE]  illegal  start  of  type  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Char  CR  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Char  CR  =  in.read();	  char    CR    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
592	[BUG]  [BUGGY]  Character  CR  =  in.read();  [CE]  illegal  start  of  type  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Character  CR  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Character  CR  =  in.read();	  char    CR    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
593	[BUG]  [BUGGY]  BigInteger  CR  =  in.read();  [CE]  illegal  start  of  type  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  BigInteger  CR  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	BigInteger  CR  =  in.read();	  char    CR    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
594	[BUG]  [BUGGY]  Integer  CR  =  in.read();  [CE]  illegal  start  of  type  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  CR  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  CR  =  in.read();	  char    CR    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
595	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  >  0  ||  in.lookAhead()  ==  0)  {	  if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	47	replace
596	[BUG]  [BUGGY]  if  (in.lookAhead()  >  0  ||  in.lookAhead()  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  >  0  ||  in.lookAhead()  ==  0)  {	  if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	47	replace
597	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  ')')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  ')')  {	  if(in.read()    ==    c)    {    if(in.read()    {    c)    {    	compilable	  [FE]  AssertionError  	268	48	replace
598	[BUG]  [BUGGY]  if(in.read()  ==  ')')  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  ')')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  ')')  {	  if(in.read()    ==    c)    {    if(in.read()    {    c)    {    	compilable	  [FE]  AssertionError  	268	48	replace
599	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	238	None	replace
600	[BUG]  [BUGGY]  If(in.read()  ==  c)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  If(in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	If(in.read()  ==  c)  {	  if(in.read()    ==    c)    {    If(in.read()    ==    c)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
601	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  ';')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  ';')  {	  if(in.read()    ==    c)    {    If(in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	44	48	replace
602	[BUG]  [BUGGY]  if(in.read()  ==  ';')  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  ';')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  ';')  {	  if(in.read()    ==    c)    {    If(in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	44	48	replace
603	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.MAX_VALUE  ==  Integer.MIN_VALUE)  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.MAX_VALUE  ==  Integer.MIN_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.MAX_VALUE  ==  Integer.MIN_VALUE)  {	  if(in!=    null)    {    if(Integer.MAX_VALUE    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
604	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  if  (c  <  LF  ||  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  if  (c  <  LF  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.read()    ==    CR)    {    if  (c  <  LF  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	add
605	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  if  (c  <  LF  ||  in.read()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  if  (c  <  LF  ||  in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.read()    ==    CR)    {    if  (c  <  LF  ||  in.read()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	add
606	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  if  (c  <  LF  ||  in.read()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  if  (c  <  LF  ||  in.read()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.read()    ==    CR)    {    if  (c  <  LF  ||  in.read()  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	add
607	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  If  (c  <  LF  ||  in.read()  ==  CR)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  If  (c  <  LF  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.read()    ==    CR)    {    If  (c  <  LF  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
608	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  if  (c  >=  LF  ||  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  if  (c  >=  LF  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.read()    ==    CR)    {    if  (c  >=  LF  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	add
609	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  if  (c  <  LB  ||  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  if  (c  <  LB  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.read()    ==    CR)    {    if  (c  <  LB  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	add
610	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  <  =  CR)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  <  =  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  <  =  CR)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    	non-compiled	[CE]  illegal  start  of  expression	262	None	replace
611	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >=  CR)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	262	48	replace
612	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >=  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >=  CR)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	262	48	replace
613	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  CR)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	262	48	replace
614	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  CR)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	262	48	replace
615	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  LF)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	262	48	replace
616	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  LF)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	262	48	replace
617	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    	non-compiled	[CE]  illegal  start  of  expression	262	None	replace
618	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	add
619	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	add
620	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  >=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  >=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	add
621	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	add
622	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  RF)  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  RF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  RF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	add
623	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  If  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  If  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    If  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
624	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  FR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  FR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  FR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	add
625	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  -1)  {	  if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	234	14	replace
626	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  -1)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  -1)  {	  if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	234	14	replace
627	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  -1  ||  in.read()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  ==  -1  ||  in.read()  ==  -1)  {	  if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    	compilable	  [FE]  AssertionError  	234	50	replace
628	[BUG]  [BUGGY]  if  (in.read()  ==  -1  ||  in.read()  ==  -1)  {  [FE]  AssertionError  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  -1  ||  in.read()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  -1  ||  in.read()  ==  -1)  {	  if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    	compilable	  [FE]  AssertionError  	234	50	replace
629	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  -1  &&  in.lookAhead()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  ==  -1  &&  in.lookAhead()  ==  -1)  {	  if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	234	14	replace
630	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  -1  &&  in.lookAhead()  ==  -1)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  -1  &&  in.lookAhead()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  ==  -1  &&  in.lookAhead()  ==  -1)  {	  if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	234	14	replace
631	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]          Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  0)  {	  if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	234	14	replace
632	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  0)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]          Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  0)  {	  if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	234	14	replace
633	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	271	None	add
634	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()!=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	271	None	add
635	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  ||  c!=  DISABLED  &&  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  ||  c!=  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c  ==  DISABLED  ||  c!=  DISABLED  &&  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	271	None	add
636	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	271	None	add
637	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	271	None	add
638	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  >=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	271	None	add
639	[BUG]  [BUGGY]  if(in!=  null)  {  if(c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(c  ==  DISABLED)  {	  if(in!=    null)    {    if(c    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
640	[BUG]  [BUGGY]  if(in!=  null)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(in!=    null)    {    if(c    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
641	[BUG]  [BUGGY]  if(in!=  null)  {  if(c  ==  'n'  ||  c  ==  'r')  {  [CE]  class,  interface,  or  enum  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(c  ==  'n'  ||  c  ==  'r')  {	  if(in!=    null)    {    if(c    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
642	[BUG]  [BUGGY]  if(in!=  null)  {  if(c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(c  ==  'n'  ||  c  ==  DISABLED)  {	  if(in!=    null)    {    if(c    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
643	[BUG]  [BUGGY]  if(in!=  null)  {  if(c  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(c  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(c  ==  LF)  {	  if(in!=    null)    {    if(c    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
644	[BUG]  [BUGGY]  if(in!=  null)  {  if(c  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(c  ==  CR)  {	  if(in!=    null)    {    if(c    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
645	[BUG]  [BUGGY]  if(!in.read())  {  if(Integer.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(!in.read())  {  if(Integer.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(!in.read())  {  if(Integer.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    if(Integer.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	200	None	replace
646	[BUG]  [BUGGY]  if(in.next()  ==  c)  {  if(Integer.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]          IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.next()  ==  c)  {  if(Integer.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.next()  ==  c)  {  if(Integer.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    if(Integer.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	200	None	replace
647	[BUG]  [BUGGY]  if(c  ==  in.lookAhead())  {  if(Integer.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]            IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead())  {  if(Integer.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  in.lookAhead())  {  if(Integer.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    if(Integer.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	200	None	replace
648	[BUG]  [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  commmentStart);  [CE]  illegal  start  of  type  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  commmentStart);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  getFormat().readEndOfLine(c,  commmentStart);	  Integer    in    =    getFormat().readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	201	None	replace
649	[BUG]  [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  DISABLED);  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  DISABLED);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  getFormat().readEndOfLine(c,  DISABLED);	  Integer    in    =    getFormat().readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	201	None	replace
650	[BUG]  [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  0);  [CE]  illegal  start  of  type  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  0);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  getFormat().readEndOfLine(c,  0);	  Integer    in    =    getFormat().readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	201	None	replace
651	[BUG]  [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  LF);  [CE]  illegal  start  of  type  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  LF);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  getFormat().readEndOfLine(c,  LF);	  Integer    in    =    getFormat().readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	201	None	replace
652	[BUG]  [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  -1);  [CE]  illegal  start  of  type  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  -1);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  getFormat().readEndOfLine(c,  -1);	  Integer    in    =    getFormat().readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	201	None	replace
653	[BUG]  [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  CR);  [CE]  illegal  start  of  type  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  CR);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  getFormat().readEndOfLine(c,  CR);	  Integer    in    =    getFormat().readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	201	None	replace
654	[BUG]  [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c  +  1);  [CE]  illegal  start  of  type  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c  +  1);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  getFormat().readEndOfLine(c  +  1);	  Integer    in    =    getFormat().readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	201	None	replace
655	[BUG]  [BUGGY]  Integer  in  =  readEndOfLine(c,  commmentStart);  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  readEndOfLine(c,  commmentStart);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  readEndOfLine(c,  commmentStart);	  Integer    in    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
656	[BUG]  [BUGGY]  Integer  in  =  readEndOfLine(c,  0);  [CE]  illegal  start  of  type  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  readEndOfLine(c,  0);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  readEndOfLine(c,  0);	  Integer    in    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
657	[BUG]  [BUGGY]  Integer  in  =  readEndOfLine(c,  DISABLED);  [CE]  illegal  start  of  type  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  readEndOfLine(c,  DISABLED);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  readEndOfLine(c,  DISABLED);	  Integer    in    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
658	[BUG]  [BUGGY]  Integer  in  =  readEndOfLine(c,  LF);  [CE]  illegal  start  of  type  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  readEndOfLine(c,  LF);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  readEndOfLine(c,  LF);	  Integer    in    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
659	[BUG]  [BUGGY]  Integer  in  =  readEndOfLine(c,  -1);  [CE]  illegal  start  of  type  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  readEndOfLine(c,  -1);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  readEndOfLine(c,  -1);	  Integer    in    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
660	[BUG]  [BUGGY]  Integer  in  =  readEndOfLine(c,  CR);  [CE]  illegal  start  of  type  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  readEndOfLine(c,  CR);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  readEndOfLine(c,  CR);	  Integer    in    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
661	[BUG]  [BUGGY]  Integer  in  =  readEndOfLine(c,  COMMENT_START);  [CE]  illegal  start  of  type  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  readEndOfLine(c,  COMMENT_START);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  readEndOfLine(c,  COMMENT_START);	  Integer    in    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
662	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  in.read()  ==  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	64	7	replace
663	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  in.read()  ==  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	64	7	replace
664	[BUG]  [BUGGY]  if(in  ==  null  &&  in.isEmptyLine())  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  &&  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  &&  in.isEmptyLine())  {	  if(in!=    null    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
665	[BUG]  [BUGGY]  if(in!=  null  &&  Integer.toHexString(c)).isEmptyLine())  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  Integer.toHexString(c)).isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  Integer.toHexString(c)).isEmptyLine())  {	  if(in!=    null    &&    in.isEmptyLine())    {    	non-compiled	[CE]  illegal  start  of  expression	255	None	replace
666	[BUG]  [BUGGY]  if(in!=  null  &&  in.isEmptyLine()  ||  in.isEmptyLine())  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.isEmptyLine()  ||  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.isEmptyLine()  ||  in.isEmptyLine())  {	  if(in!=    null    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
667	[BUG]  [BUGGY]  if(in!=  null  &&  Integer.toString(c)).isEmptyLine())  {  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  Integer.toString(c)).isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  Integer.toString(c)).isEmptyLine())  {	  if(in!=    null    &&    in.isEmptyLine())    {    	non-compiled	[CE]  illegal  start  of  expression	255	None	replace
668	[BUG]  [BUGGY]  if(in!=  null  &&  isEmptyLine())  {  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  isEmptyLine())  {	  if(in!=    null    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
669	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  CR)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	48	replace
670	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  CR)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	48	replace
671	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  CR)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	48	replace
672	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  CR)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	48	replace
673	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	48	replace
674	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	48	replace
675	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	48	replace
676	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	48	replace
677	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	48	replace
678	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  in.lookAhead()  ==  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	48	replace
679	[BUG]  [BUGGY]  if(c  ==  ';')  {  If(in!=  null)  {  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  ';')  {  If(in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  ';')  {  If(in!=  null)  {	  if(in!=    null)    {    If(in!=    null)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
680	[BUG]  [BUGGY]  if(c  ==  ':')  {  If(in!=  null)  {  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  ':')  {  If(in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  ':')  {  If(in!=  null)  {	  if(in!=    null)    {    If(in!=    null)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
681	[BUG]  [BUGGY]  if(c  ==  DISABLED)  {  If(in!=  null)  {  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED)  {  If(in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED)  {  If(in!=  null)  {	  if(in!=    null)    {    If(in!=    null)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
682	[BUG]  [BUGGY]  if(c  ==  '+')  {  If(in!=  null)  {  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  '+')  {  If(in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  '+')  {  If(in!=  null)  {	  if(in!=    null)    {    If(in!=    null)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
683	[BUG]  [BUGGY]  if(c  =='<  ')  {  If(in!=  null)  {  [CE]  unclosed  character  literal  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  =='<  ')  {  If(in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  =='<  ')  {  If(in!=  null)  {	  if(in!=    null)    {    If(in!=    null)    {    	non-compiled	[CE]  unclosed  character  literal	99	None	replace
684	[BUG]  [BUGGY]  if(in!=  null)  {  If(in  ==  null)  {  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  If(in  ==  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  If(in  ==  null)  {	  if(in!=    null)    {    If(in!=    null)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
685	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  LF  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  LF  ||  in.read()  ==  CR)  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	174	50	replace
686	[BUG]  [BUGGY]  if(in.read()  ==  LF  ||  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  LF  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  LF  ||  in.read()  ==  CR)  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	174	50	replace
687	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  LF  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()!=  LF  ||  in.read()  ==  CR)  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	174	48	replace
688	[BUG]  [BUGGY]  if(in.read()!=  LF  ||  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  LF  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()!=  LF  ||  in.read()  ==  CR)  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	174	48	replace
689	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  c  &&  in.read()  ==  CR)  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	174	48	replace
690	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  &&  in.read()  ==  CR)  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	174	48	replace
691	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  CR  ||  in.read()  ==  c)  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	174	49	replace
692	[BUG]  [BUGGY]  if(in.read()  ==  CR  ||  in.read()  ==  c)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  CR  ||  in.read()  ==  c)  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	174	49	replace
693	[BUG]  [BUGGY]  if(in.read()  ==  LC  ||  in.read()  ==  CR)  {  [CE]  cannot  find  symbol  LC  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  LC  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  LC  ||  in.read()  ==  CR)  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	non-compiled	[CE]  cannot  find  symbol  LC	174	None	replace
694	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  0  ||  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()!=  0  ||  in.read()  ==  0)  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	174	49	replace
695	[BUG]  [BUGGY]  if(in.read()!=  0  ||  in.read()  ==  0)  {  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  0  ||  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()!=  0  ||  in.read()  ==  0)  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	174	49	replace
696	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	add
697	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (in.lookAhead()!=  CR  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (in.lookAhead()!=  CR  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    if  (in.lookAhead()!=  CR  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	add
698	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    if  (in.lookAhead()  ==  CR  &&  in.lookAhead()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	add
699	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  >=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  >=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	add
700	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (in.lookAhead()  ==  CR  ||  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (in.lookAhead()  ==  CR  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    if  (in.lookAhead()  ==  CR  ||  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	add
701	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	add
702	[BUG]  [BUGGY]  String  commmentStart  =  getCommentStart();  [CE]  illegal  start  of  type  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  String  commmentStart  =  getCommentStart();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	String  commmentStart  =  getCommentStart();	  char    commmentStart    =    getCommentStart();    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
703	[BUG]  [BUGGY]  int  commmentStart  =  getCommentStart();  [CE]  illegal  start  of  type  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  int  commmentStart  =  getCommentStart();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	int  commmentStart  =  getCommentStart();	  char    commmentStart    =    getCommentStart();    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
704	[BUG]  [BUGGY]  Integer  commmentStart  =  getCommentStart();  [CE]  illegal  start  of  type  [FE]                                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  commmentStart  =  getCommentStart();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  commmentStart  =  getCommentStart();	  char    commmentStart    =    getCommentStart();    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
705	[BUG]  [BUGGY]  Char  commmentStart  =  getCommentStart();  [CE]  illegal  start  of  type  [FE]                                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Char  commmentStart  =  getCommentStart();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Char  commmentStart  =  getCommentStart();	  char    commmentStart    =    getCommentStart();    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
706	[BUG]  [BUGGY]  Character  commmentStart  =  getCommentStart();  [CE]  illegal  start  of  type  [FE]                                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Character  commmentStart  =  getCommentStart();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Character  commmentStart  =  getCommentStart();	  char    commmentStart    =    getCommentStart();    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
707	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    ||    in.read()    ==    CR)    {    if(in.read()  ==  c  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	add
708	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.read()  ==  c  ||  in.read()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.read()  ==  c  ||  in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    ||    in.read()    ==    CR)    {    if(in.read()  ==  c  ||  in.read()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	add
709	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.read()!=  c  ||  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.read()!=  c  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    ||    in.read()    ==    CR)    {    if(in.read()!=  c  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	add
710	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.read()  ==  c  ||  in.read()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.read()  ==  c  ||  in.read()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    ||    in.read()    ==    CR)    {    if(in.read()  ==  c  ||  in.read()  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	add
711	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(c  ==  LF  ||  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(c  ==  LF  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    ||    in.read()    ==    CR)    {    if(c  ==  LF  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	add
712	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.read()  >=  c  ||  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.read()  >=  c  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    ||    in.read()    ==    CR)    {    if(in.read()  >=  c  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	add
713	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED)  {  If  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED)  {  If  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  ||  c  >  DISABLED)  {  If  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    If    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  ';'  expected	78	None	replace
714	[BUG]  [BUGGY]  If  (c  <  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  If  (c  <  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	If  (c  <  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    If    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  ';'  expected	78	None	replace
715	[BUG]  [BUGGY]  If  (c  <  0  ||  in.lookAhead()  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  If  (c  <  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	If  (c  <  0  ||  in.lookAhead()  ==  0)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    If    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  ';'  expected	78	None	replace
716	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(in!=  null  &&  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(in!=  null  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    ==    c)    {    if(in!=  null  &&  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	add
717	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(c!=  null  &&  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(c!=  null  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    ==    c)    {    if(c!=  null  &&  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	add
718	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(in  ==  null  &&  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(in  ==  null  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    ==    c)    {    if(in  ==  null  &&  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	add
719	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(c  ==  null  &&  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(c  ==  null  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    ==    c)    {    if(c  ==  null  &&  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	add
720	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(in!=  null  &&  in.read()  >=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(in!=  null  &&  in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    ==    c)    {    if(in!=  null  &&  in.read()  >=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	add
721	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(in  >=  null  &&  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(in  >=  null  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    ==    c)    {    if(in  >=  null  &&  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	add
722	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  If(in!=  null  &&  in.read()  ==  c)  {  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  If(in!=  null  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    ==    c)    {    If(in!=  null  &&  in.read()  ==  c)  {	  	non-compiled	[CE]  ';'  expected	190	None	add
723	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  commmentStart)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    >=    LF    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	138	48	replace
724	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    >=    LF    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	138	48	replace
725	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  IOException  	107	11	replace
726	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  commmentStart)  {  [FE]  IOException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  IOException  	107	11	replace
727	[BUG]  [BUGGY]  if(in.read()  ==  CC)  {  [CE]  cannot  find  symbol  CC  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CC)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  CC)  {	  if(in.read()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  CC	172	None	replace
728	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(in!=  null  &&  in.read()  >  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(in!=  null  &&  in.read()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    c)    {    if(in!=  null  &&  in.read()  >  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	253	None	add
729	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(in  ==  null  &&  in.read()  >  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(in  ==  null  &&  in.read()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    c)    {    if(in  ==  null  &&  in.read()  >  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	253	None	add
730	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(c!=  null  &&  in.read()  >  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(c!=  null  &&  in.read()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    c)    {    if(c!=  null  &&  in.read()  >  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	253	None	add
731	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(in  >=  null  &&  in.read()  >  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(in  >=  null  &&  in.read()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    c)    {    if(in  >=  null  &&  in.read()  >  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	253	None	add
732	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(c  ==  null  &&  in.read()  >  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(c  ==  null  &&  in.read()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    c)    {    if(c  ==  null  &&  in.read()  >  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	253	None	add
733	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  If(in!=  null  &&  in.read()  >  c)  {  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  If(in!=  null  &&  in.read()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    c)    {    If(in!=  null  &&  in.read()  >  c)  {	  	non-compiled	[CE]  ';'  expected	253	None	add
734	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(in!=  null  ||  in.read()  >  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(in!=  null  ||  in.read()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    c)    {    if(in!=  null  ||  in.read()  >  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	253	None	add
735	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  >  DISABLED)  {	  if    (c    <    =    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	180	7	replace
736	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  >  DISABLED)  {  [FE]  AssertionError  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  >  DISABLED)  {	  if    (c    <    =    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	180	7	replace
737	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  ||  c  >=  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  ||  c  >=  DISABLED)  {	  if    (c    <    =    DISABLED    ||    c    >    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
738	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  <  =  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ==  c  &&  in.read()  <  =  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
739	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead()  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  in.lookAhead()  &&  in.read()  >  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	55	20	replace
740	[BUG]  [BUGGY]  if(c  ==  in.lookAhead()  &&  in.read()  >  0)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead()  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  in.lookAhead()  &&  in.read()  >  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	55	20	replace
741	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  CR  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()  ==  CR  &&  in.read()  >  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	55	17	replace
742	[BUG]  [BUGGY]  if(in.lookAhead()  ==  CR  &&  in.read()  >  0)  {  [FE]  AssertionError  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  CR  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ==  CR  &&  in.read()  >  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	55	17	replace
743	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]          Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()  ==  c  &&  in.read()!=  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	55	20	replace
744	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()!=  0)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]          Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ==  c  &&  in.read()!=  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	55	20	replace
745	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()  ==  0  &&  in.read()  >  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	55	7	replace
746	[BUG]  [BUGGY]  if(in.lookAhead()  ==  0  &&  in.read()  >  0)  {  [FE]  AssertionError  [FE]            Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ==  0  &&  in.read()  >  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	55	7	replace
747	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  in.read()  ==  commmentStart)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	197	48	replace
748	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.read()  ==  commmentStart)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  in.read()  ==  commmentStart)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	197	48	replace
749	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  in.read()  ==  commmentStart)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	197	48	replace
750	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.read()  ==  commmentStart)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  in.read()  ==  commmentStart)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	197	48	replace
751	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  ==  in.lookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  ||  c  ==  in.lookAhead())  {	  if(c    ==    in.lookAhead())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	53	48	replace
752	[BUG]  [BUGGY]  if(in!=  null  ||  c  ==  in.lookAhead())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  ==  in.lookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  c  ==  in.lookAhead())  {	  if(c    ==    in.lookAhead())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	53	48	replace
753	[BUG]  [BUGGY]  if(in.lookAhead()  ||  c  ==  CR)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ||  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ||  c  ==  CR)  {	  if(c    ==    in.lookAhead())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	53	None	replace
754	[BUG]  [BUGGY]  if(in.lookAhead()  ||  c  ==  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ||  c  ==  DISABLED)  {	  if(c    ==    in.lookAhead())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	53	None	replace
755	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  >=  in.read())  {	  if(c    ==    in.lookAhead())    {    	compilable	  [FE]  AssertionError  	53	47	replace
756	[BUG]  [BUGGY]  if(c  >=  in.read())  {  [FE]  AssertionError  [FE]          IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  >=  in.read())  {	  if(c    ==    in.lookAhead())    {    	compilable	  [FE]  AssertionError  	53	47	replace
757	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
758	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	210	48	replace
759	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	210	48	replace
760	[BUG]  [BUGGY]  if(in.read()  ==  CR  &&  in.hasNext())  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR  &&  in.hasNext())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  CR  &&  in.hasNext())  {	  if(in.read()    ==    c    &&    in.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
761	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart  &&  in.hasNext())  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart  &&  in.hasNext())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart  &&  in.hasNext())  {	  if(in.read()    ==    c    &&    in.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
762	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.hasNext())  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.hasNext())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  ||  in.hasNext())  {	  if(in.read()    ==    c    &&    in.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
763	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.isEmptyLines())  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.isEmptyLines())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  &&  in.isEmptyLines())  {	  if(in.read()    ==    c    &&    in.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
764	[BUG]  [BUGGY]  if(c.read()  ==  in  &&  in.hasNext())  {  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c.read()  ==  in  &&  in.hasNext())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c.read()  ==  in  &&  in.hasNext())  {	  if(in.read()    ==    c    &&    in.hasNext())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	194	None	replace
765	[BUG]  [BUGGY]  if(in.read()  ==  CR  ||  in.hasNext())  {  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR  ||  in.hasNext())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  CR  ||  in.hasNext())  {	  if(in.read()    ==    c    &&    in.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
766	[BUG]  [BUGGY]  if(in  ==  null  &&  in.isEmpty())  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  &&  in.isEmpty())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  &&  in.isEmpty())  {	  if(in!=    null    &&    in.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
767	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.equals(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.equals(c))  {	  if(in!=    null    &&    in.isEmpty())    {    	compilable	  [FE]  AssertionError  	215	7	replace
768	[BUG]  [BUGGY]  if(in!=  null  &&  in.equals(c))  {  [FE]  AssertionError  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.equals(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.equals(c))  {	  if(in!=    null    &&    in.isEmpty())    {    	compilable	  [FE]  AssertionError  	215	7	replace
769	[BUG]  [BUGGY]  if(in  >=  null  &&  in.isEmpty())  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  >=  null  &&  in.isEmpty())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  >=  null  &&  in.isEmpty())  {	  if(in!=    null    &&    in.isEmpty())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	215	None	replace
770	[BUG]  [BUGGY]  if(in!=  null  &&  isEmptyLines())  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  isEmptyLines())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  isEmptyLines())  {	  if(in!=    null    &&    in.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
771	[BUG]  [BUGGY]  if(in!=  null  &&  in.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.length()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.length()  >  0)  {	  if(in!=    null    &&    in.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
772	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	add
773	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  ||  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  ||  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  <  DISABLED  ||  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	add
774	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  ||  in.lookAhead()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  ||  in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  <  DISABLED  ||  in.lookAhead()  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	add
775	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	add
776	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  ||  out.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  <  DISABLED  ||  out.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  <  DISABLED  ||  out.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	add
777	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  If  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  If  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    in.lookAhead()    ==    CR)    {    If  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
778	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()!=  0  &&  in.lookAhead()  ==  0)  {	  if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	86	7	replace
779	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0  &&  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()!=  0  &&  in.lookAhead()  ==  0)  {	  if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	86	7	replace
780	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0)  {	  if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	47	replace
781	[BUG]  [BUGGY]  if  (in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0)  {	  if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	47	replace
782	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in  ==  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(in  ==  null)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
783	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(in!=  null)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
784	[BUG]  [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(c))  throw  new  IllegalArgumentException( " ");  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(c))  throw  new  IllegalArgumentException( " ");  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(Integer.parseInt(c))  throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
785	[BUG]  [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(Integer.parseInt(c))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
786	[BUG]  [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(c))  throw  new  IOException( " ");  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(c))  throw  new  IOException( " ");  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(Integer.parseInt(c))  throw  new  IOException( " ");	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
787	[BUG]  [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(c))  throw  new  IllegalStateException( " ");  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(c))  throw  new  IllegalStateException( " ");  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(Integer.parseInt(c))  throw  new  IllegalStateException( " ");	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
788	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(in  ==  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
789	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in.read()!=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in.read()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(in  ==  null  ||  in.read()!=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
790	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	add
791	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	add
792	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >>  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >>  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >>  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	add
793	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	add
794	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  in.lookAhead()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >=  DISABLED  &&  in.lookAhead()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	add
795	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  [Delete]  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  [Delete]  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  [Delete]  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  ')'  expected	57	None	add
796	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentStart  +  1)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentStart  +  1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentStart  +  1)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    commmentStart)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	183	None	replace
797	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED  ||  commmentStart)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED  ||  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >=  DISABLED  ||  commmentStart)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    commmentStart)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	183	None	replace
798	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED  ||  commmentStart)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED  ||  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  ==  DISABLED  ||  commmentStart)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    commmentStart)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	183	None	replace
799	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  CR  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  CR  >  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    commmentStart)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	183	48	replace
800	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  CR  >  DISABLED)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  CR  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  CR  >  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    commmentStart)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	183	48	replace
801	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentStart  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentStart  >  LF)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    commmentStart)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	183	48	replace
802	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentStart  >  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentStart  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentStart  >  LF)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    commmentStart)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	183	48	replace
803	[BUG]  [BUGGY]  if(in.read()  ==  CR)  {  if(in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR)  {  if(in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    CR)    {    if(in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	167	None	add
804	[BUG]  [BUGGY]  if(in.read()  ==  CR)  {  if(in.read()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR)  {  if(in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    CR)    {    if(in.read()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	167	None	add
805	[BUG]  [BUGGY]  if(in.read()  ==  CR)  {  if(in.read()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR)  {  if(in.read()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    CR)    {    if(in.read()  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	167	None	add
806	[BUG]  [BUGGY]  if(in.read()  ==  CR)  {  if(in.read()  ==  RC)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR)  {  if(in.read()  ==  RC)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    CR)    {    if(in.read()  ==  RC)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	167	None	add
807	[BUG]  [BUGGY]  if(in.read()  ==  CR)  {  If(in.read()  ==  CR)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR)  {  If(in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    CR)    {    If(in.read()  ==  CR)  {	  	non-compiled	[CE]  ';'  expected	167	None	add
808	[BUG]  [BUGGY]  if(in.read()  ==  CR)  {  if(in.read()  ==  FR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR)  {  if(in.read()  ==  FR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    CR)    {    if(in.read()  ==  FR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	167	None	add
809	[BUG]  [BUGGY]  if(in  ==  null  ||  in.isEmpty())  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.isEmpty())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  ||  in.isEmpty())  {	  if(in!=    null    ||    in.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
810	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.equals(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  ||  in.equals(c))  {	  if(in!=    null    ||    in.isEmpty())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	48	replace
811	[BUG]  [BUGGY]  if(in!=  null  ||  in.equals(c))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.equals(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.equals(c))  {	  if(in!=    null    ||    in.isEmpty())    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	158	48	replace
812	[BUG]  [BUGGY]  if(c!=  null  ||  in.isEmpty())  {  [CE]  incomparable  types:  int  and  <null>  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  null  ||  in.isEmpty())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c!=  null  ||  in.isEmpty())  {	  if(in!=    null    ||    in.isEmpty())    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	158	None	replace
813	[BUG]  [BUGGY]  if(in  >=  null  ||  in.isEmpty())  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  >=  null  ||  in.isEmpty())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  >=  null  ||  in.isEmpty())  {	  if(in!=    null    ||    in.isEmpty())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	158	None	replace
814	[BUG]  [BUGGY]  if(in!=  null  ||  in.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.length()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.length()  ==  0)  {	  if(in!=    null    ||    in.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
815	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
816	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c!=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c!=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    if  (c  ==  DISABLED  ||  c!=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
817	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()!=  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()!=  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()!=  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
818	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  >=  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  >=  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  >=  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
819	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
820	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
821	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n')  {  [BUGGY]    null)  {  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  'n')  {	  if(in!=    null)    {    if(in    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	98	14	replace
822	[BUG]  [BUGGY]  if(c  ==  'n')  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n')  {  [BUGGY]    null)  {  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'n')  {	  if(in!=    null)    {    if(in    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	98	14	replace
823	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  '-')  {  [BUGGY]    null)  {  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  '-')  {	  if(in!=    null)    {    if(in    	compilable	  [FE]  AssertionError  	98	9	replace
824	[BUG]  [BUGGY]  if(c  ==  '-')  {  [FE]  AssertionError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  '-')  {  [BUGGY]    null)  {  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  '-')  {	  if(in!=    null)    {    if(in    	compilable	  [FE]  AssertionError  	98	9	replace
825	[BUG]  [BUGGY]  if(c  ==  ')'  {  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  ')'  {  [BUGGY]    null)  {  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  ')'  {	  if(in!=    null)    {    if(in    	non-compiled	[CE]  ')'  expected	98	None	replace
826	[BUG]  [BUGGY]  if(in!=  null)  {  If  (c  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  If  (c  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  If  (c  <  DISABLED  ||  c  >  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED)    {    If    (c    <    DISABLED    ||    c    >    DISABLED)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
827	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  If  (c  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  If  (c  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  If  (c  <  DISABLED  ||  c  >  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED)    {    If    (c    <    DISABLED    ||    c    >    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
828	[BUG]  [BUGGY]  if(in  ==  null)  {  If  (c  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  If  (c  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  If  (c  <  DISABLED  ||  c  >  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED)    {    If    (c    <    DISABLED    ||    c    >    DISABLED)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
829	[BUG]  [BUGGY]  if(c  ==  DISABLED)  {  If  (c  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED)  {  If  (c  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED)  {  If  (c  <  DISABLED  ||  c  >  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED)    {    If    (c    <    DISABLED    ||    c    >    DISABLED)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
830	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  commmentStart  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  ==  commmentStart  ||  in.read()  ==  LF)  {	  if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	82	50	replace
831	[BUG]  [BUGGY]  if  (in.read()  ==  commmentStart  ||  in.read()  ==  LF)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  commmentStart  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  commmentStart  ||  in.read()  ==  LF)  {	  if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	82	50	replace
832	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  ==  CR  &&  in.read()  ==  LF)  {	  if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	82	49	replace
833	[BUG]  [BUGGY]  if  (in.read()  ==  CR  &&  in.read()  ==  LF)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  CR  &&  in.read()  ==  LF)  {	  if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	82	49	replace
834	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  DISABLED  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  ==  DISABLED  ||  in.read()  ==  LF)  {	  if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	82	50	replace
835	[BUG]  [BUGGY]  if  (in.read()  ==  DISABLED  ||  in.read()  ==  LF)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  DISABLED  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  DISABLED  ||  in.read()  ==  LF)  {	  if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	82	50	replace
836	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  ==  CR  ||  in.read()  ==  DISABLED)  {	  if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	82	49	replace
837	[BUG]  [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  DISABLED)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  CR  ||  in.read()  ==  DISABLED)  {	  if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	82	49	replace
838	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.read()  >  CR)  {	  if(in!=    null    &&    in.read()    >    c)    {    	compilable	  [FE]  AssertionError  	254	49	replace
839	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  >  CR)  {	  if(in!=    null    &&    in.read()    >    c)    {    	compilable	  [FE]  AssertionError  	254	49	replace
840	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  ||  in.read()  >  c)  {	  if(in!=    null    &&    in.read()    >    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	254	48	replace
841	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  >  c)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.read()  >  c)  {	  if(in!=    null    &&    in.read()    >    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	254	48	replace
842	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	124	48	replace
843	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	124	48	replace
844	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  c  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    CR)    {    	compilable	  [FE]  AssertionError  	124	7	replace
845	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  CR)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    CR)    {    	compilable	  [FE]  AssertionError  	124	7	replace
846	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  ||  c  ==  CR)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  ||  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  ||  c  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    CR)    {    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
847	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR)    {    	compilable	  [FE]  AssertionError  	124	33	replace
848	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR)    {    	compilable	  [FE]  AssertionError  	124	33	replace
849	[BUG]  [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(in!=  null  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(in!=  null  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    c    ==    DISABLED)    {    if(in!=  null  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	add
850	[BUG]  [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(in  ==  null  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(in  ==  null  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    c    ==    DISABLED)    {    if(in  ==  null  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	add
851	[BUG]  [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    c    ==    DISABLED)    {    if(c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	add
852	[BUG]  [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(in  >=  null  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(in  >=  null  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    c    ==    DISABLED)    {    if(in  >=  null  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	add
853	[BUG]  [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(c  ==  null  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(c  ==  null  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    c    ==    DISABLED)    {    if(c  ==  null  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	add
854	[BUG]  [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(in!=  null  ||  c  >=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(in!=  null  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    c    ==    DISABLED)    {    if(in!=  null  ||  c  >=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	add
855	[BUG]  [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  If(in!=  null  ||  c  ==  DISABLED)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  If(in!=  null  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    c    ==    DISABLED)    {    If(in!=  null  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  ';'  expected	159	None	add
856	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(in.read()  ==  c  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(in.read()  ==  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    &&    in.read()    >    0)    {    if(in.read()  ==  c  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	242	None	add
857	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(in.read()!=  c  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(in.read()!=  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    &&    in.read()    >    0)    {    if(in.read()!=  c  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	242	None	add
858	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(c  ==  c  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(c  ==  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    &&    in.read()    >    0)    {    if(c  ==  c  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	242	None	add
859	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(in.read()  >=  c  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(in.read()  >=  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    &&    in.read()    >    0)    {    if(in.read()  >=  c  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	242	None	add
860	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  If(in.read()  ==  c  &&  in.read()  >  0)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  If(in.read()  ==  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    &&    in.read()    >    0)    {    If(in.read()  ==  c  &&  in.read()  >  0)  {	  	non-compiled	[CE]  ';'  expected	242	None	add
861	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(c!=  c  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(c!=  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    &&    in.read()    >    0)    {    if(c!=  c  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	242	None	add
862	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(c  >=  c  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(c  >=  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    &&    in.read()    >    0)    {    if(c  >=  c  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	242	None	add
863	[BUG]  [BUGGY]  if(in!=  null)  {  if(c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(c  ==  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    ||    in.lookAhead()!=    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
864	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  in.lookAhead()  ==  c)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	48	replace
865	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  c)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  in.lookAhead()  ==  c)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	48	replace
866	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]      (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
867	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  in.lookAhead()!=  c)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	48	replace
868	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()!=  c)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  in.lookAhead()!=  c)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	48	replace
869	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  Float.MIN_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  in.lookAhead()  ==  Float.MIN_VALUE)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	48	replace
870	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  Float.MIN_VALUE)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  Float.MIN_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  in.lookAhead()  ==  Float.MIN_VALUE)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	48	replace
871	[BUG]  [BUGGY]  String  commmentStart  =  in.read();  [CE]  illegal  start  of  type  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  String  commmentStart  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	String  commmentStart  =  in.read();	  char    commmentStart    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
872	[BUG]  [BUGGY]  int  commmentStart  =  in.read();  [CE]  illegal  start  of  type  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  int  commmentStart  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	int  commmentStart  =  in.read();	  char    commmentStart    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
873	[BUG]  [BUGGY]  Char  commmentStart  =  in.read();  [CE]  illegal  start  of  type  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Char  commmentStart  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Char  commmentStart  =  in.read();	  char    commmentStart    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
874	[BUG]  [BUGGY]  Character  commmentStart  =  in.read();  [CE]  illegal  start  of  type  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Character  commmentStart  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Character  commmentStart  =  in.read();	  char    commmentStart    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
875	[BUG]  [BUGGY]  Integer  commmentStart  =  in.read();  [CE]  illegal  start  of  type  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  commmentStart  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  commmentStart  =  in.read();	  char    commmentStart    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
876	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	50	replace
877	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	50	replace
878	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  DISABLED  &&  in.read()  ==  CR)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	48	replace
879	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  &&  in.read()  ==  CR)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	48	replace
880	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	48	replace
881	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	48	replace
882	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  DISABLED  &&  in.read()  ==  commmentStart)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	48	replace
883	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  &&  in.read()  ==  commmentStart)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	48	replace
884	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  commmentStart  &&  in.lookAhead()  ==  CR)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	48	replace
885	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart  &&  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart  &&  in.lookAhead()  ==  CR)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	48	replace
886	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()!=  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	49	replace
887	[BUG]  [BUGGY]  if(in.read()!=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()!=  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	49	replace
888	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  DISABLED  &&  in.read()  ==  c)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	48	replace
889	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  ==  c)  {  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  &&  in.read()  ==  c)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	48	replace
890	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	add
891	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	add
892	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  c!=  DISABLED  &&  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  c!=  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c  ==  DISABLED  ||  c!=  DISABLED  &&  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	add
893	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	add
894	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	add
895	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	add
896	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  >=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  >=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	add
897	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  ||  c  ==  in.read())  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    in.lookAhead()!=    CR)    {    	compilable	  [FE]  AssertionError  	136	47	replace
898	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  in.read())  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  ||  c  ==  in.read())  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    in.lookAhead()!=    CR)    {    	compilable	  [FE]  AssertionError  	136	47	replace
899	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  <  =  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c  <  =  DISABLED)  {	  if    (c    ==    DISABLED    &&    c    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
900	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	196	None	add
901	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  &&  in.read()  >=  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  &&  in.read()  >=  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c  ==  DISABLED  &&  in.read()  >=  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	196	None	add
902	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  &&  in.read()!=  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  &&  in.read()!=  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c  ==  DISABLED  &&  in.read()!=  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	196	None	add
903	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c!=  DISABLED  &&  in.read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c!=  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c!=  DISABLED  &&  in.read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	196	None	add
904	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  >=  DISABLED  &&  in.read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  >=  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c  >=  DISABLED  &&  in.read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	196	None	add
905	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  in.read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c  ==  DISABLED  ||  in.read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	196	None	add
906	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  If  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  If  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    If  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {	  	non-compiled	[CE]  ';'  expected	196	None	add
907	[BUG]  [BUGGY]  char  CR  =  in.skipChildren();  [CE]  illegal  start  of  type  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  char  CR  =  in.skipChildren();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	char  CR  =  in.skipChildren();	  in.skipChildren();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
908	[BUG]  [BUGGY]  in.skipChildren(c);  [CE]  illegal  start  of  type  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.skipChildren(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.skipChildren(c);	  in.skipChildren();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
909	[BUG]  [BUGGY]  reader.skipChildren();  [CE]  illegal  start  of  type  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  reader.skipChildren();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	reader.skipChildren();	  in.skipChildren();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
910	[BUG]  [BUGGY]  in.skipChar();  [CE]  illegal  start  of  type  [FE]                                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.skipChar();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.skipChar();	  in.skipChildren();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
911	[BUG]  [BUGGY]  if  (c  <  =  LF  ||  in.read()  ==  CR)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  LF  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  LF  ||  in.read()  ==  CR)  {	  if    (c    <    =    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
912	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  LF)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	225	49	replace
913	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  LF)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  LF)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	225	49	replace
914	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  0)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	225	48	replace
915	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  0)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	225	48	replace
916	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  delimiter)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  delimiter)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	225	47	replace
917	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  delimiter)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  delimiter)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  delimiter)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	225	47	replace
918	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	add
919	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	add
920	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	add
921	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >>  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >>  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >>  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	add
922	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  in.lookAhead()  >=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c!=  DISABLED  &&  in.lookAhead()  >=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	add
923	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  |&  in.lookAhead()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  |&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c!=  DISABLED  |&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
924	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  <  =  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  c  <  =  DISABLED)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	236	None	replace
925	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  REA  &&  in.lookAhead()  ==  LF)  {  [CE]  cannot  find  symbol  REA  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  REA  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  ||  c  ==  REA  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    REA    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  REA	39	None	replace
926	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  REA  &&  in.lookAhead()  ==  LF)  {  [CE]  cannot  find  symbol  REA  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  REA  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  REA  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    REA    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  REA	39	None	replace
927	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  <  =  10)  {  [CE]  illegal  start  of  expression  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  <  =  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ==  c  &&  in.read()  <  =  10)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	non-compiled	[CE]  illegal  start  of  expression	259	None	replace
928	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead()  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  in.lookAhead()  &&  in.read()  >  10)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	259	19	replace
929	[BUG]  [BUGGY]  if(c  ==  in.lookAhead()  &&  in.read()  >  10)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead()  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  in.lookAhead()  &&  in.read()  >  10)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	259	19	replace
930	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  3)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()  ==  c  &&  in.read()  >  3)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	259	20	replace
931	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  3)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  3)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ==  c  &&  in.read()  >  3)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	259	20	replace
932	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]          Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  5)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()  ==  c  &&  in.read()  >  5)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	259	20	replace
933	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  5)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]          Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  5)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ==  c  &&  in.read()  >  5)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	259	20	replace
934	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  CR  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()  ==  CR  &&  in.read()  >  10)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  AssertionError  	259	17	replace
935	[BUG]  [BUGGY]  if(in.lookAhead()  ==  CR  &&  in.read()  >  10)  {  [FE]  AssertionError  [FE]            Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  CR  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ==  CR  &&  in.read()  >  10)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  AssertionError  	259	17	replace
936	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c!=  DISABLED  &&  in.read()  ==  CR)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	66	48	replace
937	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c!=  DISABLED  &&  in.read()  ==  CR)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	66	48	replace
938	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in!=  null  &&  in.read()  >=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in!=  null  &&  in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >=    c)    {    if(in!=  null  &&  in.read()  >=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	250	None	add
939	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in!=  null  &&  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in!=  null  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >=    c)    {    if(in!=  null  &&  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	250	None	add
940	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in!=  null  &&  in.read()  >>  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in!=  null  &&  in.read()  >>  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >=    c)    {    if(in!=  null  &&  in.read()  >>  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	250	None	add
941	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in!=  null  &&  in.read()  <  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in!=  null  &&  in.read()  <  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >=    c)    {    if(in!=  null  &&  in.read()  <  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	250	None	add
942	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in  ==  null  &&  in.read()  >=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in  ==  null  &&  in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >=    c)    {    if(in  ==  null  &&  in.read()  >=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	250	None	add
943	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(c!=  null  &&  in.read()  >=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(c!=  null  &&  in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >=    c)    {    if(c!=  null  &&  in.read()  >=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	250	None	add
944	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in!=  null  &&  in.read()  [Delete]  c)  {  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in!=  null  &&  in.read()  [Delete]  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >=    c)    {    if(in!=  null  &&  in.read()  [Delete]  c)  {	  	non-compiled	[CE]  ')'  expected	250	None	add
945	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in!=  null  &&  in.read()!=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in!=  null  &&  in.read()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >=    c)    {    if(in!=  null  &&  in.read()!=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	250	None	add
946	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	add
947	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  in.lookAhead()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  in.lookAhead()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	add
948	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	add
949	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  in.lookAhead()  >=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  in.lookAhead()  >=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	add
950	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  RF)  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  RF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  in.lookAhead()  ==  RF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	add
951	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  FR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  in.lookAhead()  ==  FR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  in.lookAhead()  ==  FR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	add
952	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	add
953	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  in.lookAhead()!=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  in.lookAhead()!=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    if  (c  ==  DISABLED  &&  in.lookAhead()!=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	add
954	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c!=  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c!=  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    if  (c!=  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	add
955	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    if  (c  >=  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	add
956	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  >=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  >=  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	add
957	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	198	None	add
958	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  &&  in.lookAhead()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  &&  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c  ==  DISABLED  &&  in.lookAhead()!=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	198	None	add
959	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c!=  DISABLED  &&  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c!=  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c!=  DISABLED  &&  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	198	None	add
960	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c  ==  DISABLED  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	198	None	add
961	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c  >=  DISABLED  &&  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	198	None	add
962	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  >=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	198	None	add
963	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	add
964	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c!=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c!=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c!=  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	add
965	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	add
966	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  >>  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  >>  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  >>  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	add
967	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  ||  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  ||  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  >=  DISABLED  ||  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	add
968	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  [Delete]  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  [Delete]  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  [Delete]  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  ')'  expected	142	None	add
969	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED)  {  If  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED)  {  If  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  ||  c  >  DISABLED)  {  If  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    If    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  ';'  expected	237	None	replace
970	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  CR  &&  in.read()  >  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	49	replace
971	[BUG]  [BUGGY]  if(in.read()  ==  CR  &&  in.read()  >  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  CR  &&  in.read()  >  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	49	replace
972	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  c  ||  in.read()  >  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	50	replace
973	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  >  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  ||  in.read()  >  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	50	replace
974	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  c  &&  in.read()!=  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	47	replace
975	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()!=  0)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  &&  in.read()!=  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	47	replace
976	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  c  &&  in.read()  >=  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	47	replace
977	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  >=  0)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  &&  in.read()  >=  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	47	replace
978	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  0  &&  in.read()  >  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	48	replace
979	[BUG]  [BUGGY]  if(in.read()  ==  0  &&  in.read()  >  0)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  0  &&  in.read()  >  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	48	replace
980	[BUG]  [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(in  ==  null  ||  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(in  ==  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null    ||    in.read()    ==    c)    {    if(in  ==  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	192	None	add
981	[BUG]  [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(c  ==  null  ||  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(c  ==  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null    ||    in.read()    ==    c)    {    if(c  ==  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	192	None	add
982	[BUG]  [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(in!=  null  ||  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(in!=  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null    ||    in.read()    ==    c)    {    if(in!=  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	192	None	add
983	[BUG]  [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(in  ==  null  ||  in.read()!=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(in  ==  null  ||  in.read()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null    ||    in.read()    ==    c)    {    if(in  ==  null  ||  in.read()!=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	192	None	add
984	[BUG]  [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(in  ==  null  ||  in.read()  >=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(in  ==  null  ||  in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null    ||    in.read()    ==    c)    {    if(in  ==  null  ||  in.read()  >=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	192	None	add
985	[BUG]  [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  If(in  ==  null  ||  in.read()  ==  c)  {  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  If(in  ==  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null    ||    in.read()    ==    c)    {    If(in  ==  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  ';'  expected	192	None	add
986	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  in.lookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  in.lookAhead())  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c!=    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	48	replace
987	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  in.lookAhead())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  in.lookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  in.lookAhead())  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c!=    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	48	replace
988	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	4	7	replace
989	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	4	7	replace
990	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	48	replace
991	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	48	replace
992	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	4	7	replace
993	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	4	7	replace
994	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	4	7	replace
995	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  CR)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	4	7	replace
996	[BUG]  [BUGGY]  if(c  ==  'ufffd')  {  if(Integer.MAX_VALUE!=  null)  {  [CE]  unclosed  character  literal  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'ufffd')  {  if(Integer.MAX_VALUE!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'ufffd')  {  if(Integer.MAX_VALUE!=  null)  {	  if(in!=    null)    {    if(Integer.MAX_VALUE!=    null)    {    	non-compiled	[CE]  unclosed  character  literal	229	None	replace
997	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	add
998	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  >=  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  >=  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  >=  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	add
999	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	add
1000	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c!=  DISABLED  &&  in.read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c!=  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c  ==  DISABLED  ||  c!=  DISABLED  &&  in.read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	add
1001	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c!=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	add
1002	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	add
1003	[BUG]  [BUGGY]  in.readFully(c);  [CE]  illegal  start  of  type  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.readFully(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.readFully(c);	  in.read();    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
1004	[BUG]  [BUGGY]  in.defaultReader();  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader();	  in.read();    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
1005	[BUG]  [BUGGY]  in.read(c);  [CE]  illegal  start  of  type  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.read(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.read(c);	  in.read();    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
1006	[BUG]  [BUGGY]  in.readFully();  [CE]  illegal  start  of  type  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.readFully();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.readFully();	  in.read();    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
1007	[BUG]  [BUGGY]  if(in.read()  ==  LF)  {  if(in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  LF)  {  if(in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    LF)    {    if(in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	171	None	add
1008	[BUG]  [BUGGY]  if(in.read()  ==  LF)  {  if(in.read()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  LF)  {  if(in.read()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    LF)    {    if(in.read()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	171	None	add
1009	[BUG]  [BUGGY]  if(in.read()  ==  LF)  {  if(in.read()  >=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  LF)  {  if(in.read()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    LF)    {    if(in.read()  >=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	171	None	add
1010	[BUG]  [BUGGY]  if(in.read()  ==  LF)  {  if(in.read()  ==  FT)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  LF)  {  if(in.read()  ==  FT)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    LF)    {    if(in.read()  ==  FT)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	171	None	add
1011	[BUG]  [BUGGY]  if(in.read()  ==  LF)  {  if(in.read()  ==  LP)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  LF)  {  if(in.read()  ==  LP)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    LF)    {    if(in.read()  ==  LP)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	171	None	add
1012	[BUG]  [BUGGY]  if(in.read()  ==  LF)  {  If(in.read()  ==  LF)  {  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  LF)  {  If(in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    LF)    {    If(in.read()  ==  LF)  {	  	non-compiled	[CE]  ';'  expected	171	None	add
1013	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	add
1014	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (c  <  in.read()  ||  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (c  <  in.read()  ||  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    if  (c  <  in.read()  ||  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	add
1015	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (c  <  in.read()  ||  in.lookAhead()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (c  <  in.read()  ||  in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    if  (c  <  in.read()  ||  in.lookAhead()  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	add
1016	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (c  <  in.read()  ||  in.lookAhead()  ==  FR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (c  <  in.read()  ||  in.lookAhead()  ==  FR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    if  (c  <  in.read()  ||  in.lookAhead()  ==  FR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	add
1017	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (c  >=  in.read()  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (c  >=  in.read()  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    if  (c  >=  in.read()  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	add
1018	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  If  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  If  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    If  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
1019	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  >  c)  {	  if(in.read()    ==    c)    {    if(in.read()    >=    c)    {    	compilable	  [FE]  AssertionError  	43	50	replace
1020	[BUG]  [BUGGY]  if(in.read()  >  c)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  >  c)  {	  if(in.read()    ==    c)    {    if(in.read()    >=    c)    {    	compilable	  [FE]  AssertionError  	43	50	replace
1021	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  0)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    	compilable	  [FE]  AssertionError  	223	49	replace
1022	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  0)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    	compilable	  [FE]  AssertionError  	223	49	replace
1023	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  LF)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    	compilable	  [FE]  AssertionError  	223	49	replace
1024	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  LF)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  LF)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    	compilable	  [FE]  AssertionError  	223	49	replace
1025	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&(c  <  =  DISABLED))  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&(c  <  =  DISABLED))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&(c  <  =  DISABLED))  {	  if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
1026	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  >=  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    	compilable	  [FE]  AssertionError  	177	7	replace
1027	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  >=  DISABLED)  {  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  >=  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    	compilable	  [FE]  AssertionError  	177	7	replace
1028	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&(c  <  commmentStart))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&(c  <  commmentStart))  {	  if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    	compilable	  [FE]  AssertionError  	177	48	replace
1029	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&(c  <  commmentStart))  {  [FE]  AssertionError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&(c  <  commmentStart))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&(c  <  commmentStart))  {	  if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    	compilable	  [FE]  AssertionError  	177	48	replace
1030	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	add
1031	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  (in.lookAhead()  ==  LF  ||  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	add
1032	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (Integer.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (Integer.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  (Integer.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	add
1033	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	add
1034	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	add
1035	[BUG]  [BUGGY]  if(c  ==  in.read())  {  if(in.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.read())  {  if(in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  in.read())  {  if(in.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()    {    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	249	None	replace
1036	[BUG]  [BUGGY]  if(c!=  in.read())  {  if(in.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]          IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  in.read())  {  if(in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c!=  in.read())  {  if(in.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()    {    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	249	None	replace
1037	[BUG]  [BUGGY]  if(c  <  in.read())  {  if(in.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]            IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  in.read())  {  if(in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  in.read())  {  if(in.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()    {    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	249	None	replace
1038	[BUG]  [BUGGY]  if(c  >=  in.read())  {  if(in.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]              IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  in.read())  {  if(in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  >=  in.read())  {  if(in.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()    {    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	249	None	replace
1039	[BUG]  [BUGGY]  if(c  ==  in.read())  {  if(in.lookAhead()  {  c)  {  [CE]  ')'  expected  [FE]                IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.read())  {  if(in.lookAhead()  {  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  in.read())  {  if(in.lookAhead()  {  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()    {    c)    {    	non-compiled	[CE]  ')'  expected	249	None	replace
1040	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  <  =  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  <  =  DISABLED)  {	  if    (c    <    =    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1041	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  &&  c  ==  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  &&  c  ==  DISABLED)  {	  if    (c    <    =    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1042	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	70	7	replace
1043	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	70	7	replace
1044	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.read()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	70	48	replace
1045	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.read()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	70	48	replace
1046	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	70	14	replace
1047	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	70	14	replace
1048	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  c  ==  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	70	14	replace
1049	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c  ==  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	70	14	replace
1050	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	48	replace
1051	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	48	replace
1052	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	48	replace
1053	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  LF  ||  in.lookAhead()  ==  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	48	replace
1054	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	211	None	add
1055	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	211	None	add
1056	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >>  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >>  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >>  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	211	None	add
1057	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	211	None	add
1058	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >=  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	211	None	add
1059	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	211	None	add
1060	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  out.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	211	None	add
1061	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	272	7	replace
1062	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	272	7	replace
1063	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	272	48	replace
1064	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	272	48	replace
1065	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	272	7	replace
1066	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  0)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	272	7	replace
1067	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	272	7	replace
1068	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  0)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	272	7	replace
1069	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if  (c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if  (c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if  (c  ==  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
1070	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
1071	[BUG]  [BUGGY]  if(in  ==  null)  {  if(c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  if(c  ==  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	140	None	replace
1072	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  LF  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  ==  LF  &&  in.lookAhead()  ==  CR)  {	  if    (in.lookAhead()!=    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	187	7	replace
1073	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  LF  &&  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  LF  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  ==  LF  &&  in.lookAhead()  ==  CR)  {	  if    (in.lookAhead()!=    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	187	7	replace
1074	[BUG]  [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	add
1075	[BUG]  [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (in.read()  ==  CR  ||  in.read()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (in.read()  ==  CR  ||  in.read()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    if  (in.read()  ==  CR  ||  in.read()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	add
1076	[BUG]  [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (in.read()!=  CR  ||  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (in.read()!=  CR  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    if  (in.read()!=  CR  ||  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	add
1077	[BUG]  [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (in.read()  ==  CR  ||  in.read()  >=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (in.read()  ==  CR  ||  in.read()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    if  (in.read()  ==  CR  ||  in.read()  >=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	add
1078	[BUG]  [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (in.read()  >=  CR  ||  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (in.read()  >=  CR  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    if  (in.read()  >=  CR  ||  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	add
1079	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  &&  in.read()  ==  commmentStart)  {	  if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	117	48	replace
1080	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  commmentStart)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  &&  in.read()  ==  commmentStart)  {	  if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	117	48	replace
1081	[BUG]  [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()  >=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    c)    {    if(in.lookAhead()  >=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	256	None	add
1082	[BUG]  [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()!=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    c)    {    if(in.lookAhead()!=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	256	None	add
1083	[BUG]  [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()  >>  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()  >>  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    c)    {    if(in.lookAhead()  >>  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	256	None	add
1084	[BUG]  [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    c)    {    if(in.lookAhead()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	256	None	add
1085	[BUG]  [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()  [Delete]  c)  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()  [Delete]  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    c)    {    if(in.lookAhead()  [Delete]  c)  {	  	non-compiled	[CE]  ')'  expected	256	None	add
1086	[BUG]  [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()  >=  in.read())  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()  >=  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    c)    {    if(in.lookAhead()  >=  in.read())  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	256	None	add
1087	[BUG]  [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()  [BUGGY]  c)  {  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  c)  {  if(in.lookAhead()  [BUGGY]  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    c)    {    if(in.lookAhead()  [BUGGY]  c)  {	  	non-compiled	[CE]  ')'  expected	256	None	add
1088	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  LF  ||  in.read()  ==  DISABLED)  {	  if    (c    <    LF    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	20	48	replace
1089	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.read()  ==  DISABLED)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  LF  ||  in.read()  ==  DISABLED)  {	  if    (c    <    LF    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	20	48	replace
1090	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  0  ||  in.read()  ==  CR)  {	  if    (c    <    LF    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	20	48	replace
1091	[BUG]  [BUGGY]  if  (c  <  0  ||  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  0  ||  in.read()  ==  CR)  {	  if    (c    <    LF    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	20	48	replace
1092	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	add
1093	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(in.lookAhead()!=  c  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(in.lookAhead()!=  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    if(in.lookAhead()!=  c  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	add
1094	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(in.lookAhead()  >=  c  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(in.lookAhead()  >=  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    if(in.lookAhead()  >=  c  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	add
1095	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  If(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  [CE]  ';'  expected  [FE]          Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  If(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    If(in.lookAhead()  ==  c  &&  in.read()  >  0)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
1096	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(in.lookAhead()  ==  c  ||  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]            Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(in.lookAhead()  ==  c  ||  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    if(in.lookAhead()  ==  c  ||  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	add
1097	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  ||  in.read()  ==  CR)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	111	48	replace
1098	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  ||  in.read()  ==  CR)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	111	48	replace
1099	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	224	None	add
1100	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  >=  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  >=  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  >=  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	224	None	add
1101	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	224	None	add
1102	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  If  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  If  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    If  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {	  	non-compiled	[CE]  ';'  expected	224	None	add
1103	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  out.read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  out.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  out.read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	224	None	add
1104	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentEnd)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentEnd)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentEnd)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	224	None	add
1105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  LF  ||  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  LF  ||  c  ==  CR)  {	  if    (in.lookAhead()    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	88	33	replace
1106	[BUG]  [BUGGY]  if  (c  ==  LF  ||  c  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  LF  ||  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  LF  ||  c  ==  CR)  {	  if    (in.lookAhead()    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	88	33	replace
1107	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	add
1108	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	add
1109	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  ==  0  ||  in.lookAhead()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  ==  0  ||  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    if  (in.lookAhead()  ==  0  ||  in.lookAhead()!=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	add
1110	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    if  (in.lookAhead()  >=  0  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	add
1111	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    if  (in.lookAhead()  ==  0  ||  in.lookAhead()  >=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	add
1112	[BUG]  [BUGGY]  if(c  ==  DISABLED)  {  if(Integer.parseInt(in))  {  [CE]  class,  interface,  or  enum  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED)  {  if(Integer.parseInt(in))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED)  {  if(Integer.parseInt(in))  {	  if(in!=    null)    {    if(Integer.parseInt(in))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	232	None	replace
1113	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(Integer.parseInt(in))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(Integer.parseInt(in))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  if(Integer.parseInt(in))  {	  if(in!=    null)    {    if(Integer.parseInt(in))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	232	None	replace
1114	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(Integer.parseInt(in))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n')  {  if(Integer.parseInt(in))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'n')  {  if(Integer.parseInt(in))  {	  if(in!=    null)    {    if(Integer.parseInt(in))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	232	None	replace
1115	[BUG]  [BUGGY]  if(c  ==  CR)  {  if(Integer.parseInt(in))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  CR)  {  if(Integer.parseInt(in))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  CR)  {  if(Integer.parseInt(in))  {	  if(in!=    null)    {    if(Integer.parseInt(in))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	232	None	replace
1116	[BUG]  [BUGGY]  If(in.lookAhead()  ==  c)  {  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  If(in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	If(in.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    If(in.lookAhead()    ==    c)    {    	non-compiled	[CE]  ';'  expected	32	None	replace
1117	[BUG]  [BUGGY]  if(c  ==  in.read())  {  If(in.lookAhead()  ==  c)  {  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.read())  {  If(in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  in.read())  {  If(in.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    If(in.lookAhead()    ==    c)    {    	non-compiled	[CE]  ';'  expected	32	None	replace
1118	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	add
1119	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  ||  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	add
1120	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c!=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c!=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c!=  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	add
1121	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  >=  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	add
1122	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  ||  in.lookAhead()  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	add
1123	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  If  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  If  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    CR)    {    If  (c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  ';'  expected	67	None	add
1124	[BUG]  [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    CR)    {    if(in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	add
1125	[BUG]  [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    CR)    {    if(in.lookAhead()  >=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	add
1126	[BUG]  [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    CR)    {    if(in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	add
1127	[BUG]  [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()  >>  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()  >>  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    CR)    {    if(in.lookAhead()  >>  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	add
1128	[BUG]  [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()!=  FR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()!=  FR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    CR)    {    if(in.lookAhead()!=  FR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	add
1129	[BUG]  [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    CR)    {    if(in.lookAhead()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	add
1130	[BUG]  [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()!=  RC)  {  [CE]  class,  interface,  or  enum  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  CR)  {  if(in.lookAhead()!=  RC)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    CR)    {    if(in.lookAhead()!=  RC)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	add
1131	[BUG]  [BUGGY]  in.defaultReader().endOfLine(c);  [CE]  illegal  start  of  type  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader().endOfLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader().endOfLine(c);	  in.defaultReader().endOfLine();    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1132	[BUG]  [BUGGY]  in.read().endOfLine();  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.read().endOfLine();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.read().endOfLine();	  in.defaultReader().endOfLine();    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1133	[BUG]  [BUGGY]  in.defaultReader().startOfLine();  [CE]  illegal  start  of  type  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader().startOfLine();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader().startOfLine();	  in.defaultReader().endOfLine();    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1134	[BUG]  [BUGGY]  in.defaultReader().writeEndOfLine(c);  [CE]  illegal  start  of  type  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader().writeEndOfLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader().writeEndOfLine(c);	  in.defaultReader().endOfLine();    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1135	[BUG]  [BUGGY]  in.defaultReader().readEndOfLine(c);  [CE]  illegal  start  of  type  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader().readEndOfLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader().readEndOfLine(c);	  in.defaultReader().endOfLine();    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1136	[BUG]  [BUGGY]  in.defaultReader().startOfLine(c);  [CE]  illegal  start  of  type  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader().startOfLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader().startOfLine(c);	  in.defaultReader().endOfLine();    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1137	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    if  (c  <  DISABLED  &&  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	add
1138	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  &&  in.read()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  &&  in.read()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    if  (c  <  DISABLED  &&  in.read()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	add
1139	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  &&  in.read()  >=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  &&  in.read()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    if  (c  <  DISABLED  &&  in.read()  >=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	add
1140	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  ||  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    if  (c  <  DISABLED  ||  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	add
1141	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  &&  in.read()  ==  RF)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  &&  in.read()  ==  RF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    if  (c  <  DISABLED  &&  in.read()  ==  RF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	add
1142	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  &&  in.read()  ==  FR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  &&  in.read()  ==  FR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    if  (c  <  DISABLED  &&  in.read()  ==  FR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	add
1143	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  If  (c  <  DISABLED  &&  in.read()  ==  LF)  {  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  If  (c  <  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    If  (c  <  DISABLED  &&  in.read()  ==  LF)  {	  	non-compiled	[CE]  ';'  expected	116	None	add
1144	[BUG]  [BUGGY]  If  (in.lookAhead()  ==  CR  ||  in.lookAhead()  ==  LF)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  If  (in.lookAhead()  ==  CR  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	If  (in.lookAhead()  ==  CR  ||  in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    If    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  ';'  expected	241	None	replace
1145	[BUG]  [BUGGY]  If  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  If  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	If  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    If    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  ';'  expected	241	None	replace
1146	[BUG]  [BUGGY]  if(in.read()  ==  CR  &&  in.read()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR  &&  in.read()  <  =  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  CR  &&  in.read()  <  =  0)  {	  if(in.read()    ==    c    &&    in.read()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	245	None	replace
1147	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  <  =  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  ||  in.read()  <  =  0)  {	  if(in.read()    ==    c    &&    in.read()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	245	None	replace
1148	[BUG]  [BUGGY]  if(in.read()  ==  0  &&  in.read()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0  &&  in.read()  <  =  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  0  &&  in.read()  <  =  0)  {	  if(in.read()    ==    c    &&    in.read()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	245	None	replace
1149	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  c  &&  in.read()  ==  0)  {	  if(in.read()    ==    c    &&    in.read()    <    =    0)    {    	compilable	  [FE]  AssertionError  	245	48	replace
1150	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  ==  0)  {  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  &&  in.read()  ==  0)  {	  if(in.read()    ==    c    &&    in.read()    <    =    0)    {    	compilable	  [FE]  AssertionError  	245	48	replace
1151	[BUG]  [BUGGY]  in.defaultReader().writeLine(c,  DISABLED);  [CE]  illegal  start  of  type  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader().writeLine(c,  DISABLED);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader().writeLine(c,  DISABLED);	  in.defaultReader().writeLine(c);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1152	[BUG]  [BUGGY]  in.defaultReader().writeLine(c  +  1);  [CE]  illegal  start  of  type  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader().writeLine(c  +  1);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader().writeLine(c  +  1);	  in.defaultReader().writeLine(c);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1153	[BUG]  [BUGGY]  in.defaultReader().writeLine(c  -  1);  [CE]  illegal  start  of  type  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader().writeLine(c  -  1);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader().writeLine(c  -  1);	  in.defaultReader().writeLine(c);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1154	[BUG]  [BUGGY]  in.defaultReader().writeLine(c,  commmentStart);  [CE]  illegal  start  of  type  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader().writeLine(c,  commmentStart);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader().writeLine(c,  commmentStart);	  in.defaultReader().writeLine(c);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1155	[BUG]  [BUGGY]  in.defaultReader().writeLine(c,  LF);  [CE]  illegal  start  of  type  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader().writeLine(c,  LF);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader().writeLine(c,  LF);	  in.defaultReader().writeLine(c);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1156	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(in!=  null  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(in!=  null  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    0)    {    if(in!=  null  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	216	None	add
1157	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(in  ==  null  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(in  ==  null  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    0)    {    if(in  ==  null  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	216	None	add
1158	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(c!=  DISABLED  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(c!=  DISABLED  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    0)    {    if(c!=  DISABLED  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	216	None	add
1159	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(in  >=  null  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(in  >=  null  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    0)    {    if(in  >=  null  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	216	None	add
1160	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(c!=  null  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(c!=  null  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    0)    {    if(c!=  null  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	216	None	add
1161	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(in!=  null  &&  in.available()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(in!=  null  &&  in.available()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    0)    {    if(in!=  null  &&  in.available()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	216	None	add
1162	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(in!=  null  &&  in.Read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(in!=  null  &&  in.Read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    0)    {    if(in!=  null  &&  in.Read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	216	None	add
1163	[BUG]  [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  in.lookAhead())  {  [CE]  class,  interface,  or  enum  expected  [FE]    IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  in.lookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    in.lookAhead())    {    if(c  ==  in.lookAhead())  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	add
1164	[BUG]  [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  Integer.MIN_VALUE  ||  c  ==  Integer.MAX_VALUE)  {  [CE]  class,  interface,  or  enum  expected  [FE]      IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  Integer.MIN_VALUE  ||  c  ==  Integer.MAX_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    in.lookAhead())    {    if(c  ==  Integer.MIN_VALUE  ||  c  ==  Integer.MAX_VALUE)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	add
1165	[BUG]  [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  >=  in.lookAhead())  {  [CE]  class,  interface,  or  enum  expected  [FE]        IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  >=  in.lookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    in.lookAhead())    {    if(c  >=  in.lookAhead())  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	add
1166	[BUG]  [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  Integer.MIN_VALUE)  {  [CE]  class,  interface,  or  enum  expected  [FE]          IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  Integer.MIN_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    in.lookAhead())    {    if(c  ==  Integer.MIN_VALUE)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	add
1167	[BUG]  [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  Integer.MIN_VALUE  ||  c  ==  Integer.MIN_VALUE)  {  [CE]  class,  interface,  or  enum  expected  [FE]            IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  Integer.MIN_VALUE  ||  c  ==  Integer.MIN_VALUE)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    in.lookAhead())    {    if(c  ==  Integer.MIN_VALUE  ||  c  ==  Integer.MIN_VALUE)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	add
1168	[BUG]  [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  in.lookAhead()  ||  c  ==  in.lookAhead())  {  [CE]  class,  interface,  or  enum  expected  [FE]              IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  in.lookAhead()  ||  c  ==  in.lookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    in.lookAhead())    {    if(c  ==  in.lookAhead()  ||  c  ==  in.lookAhead())  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	add
1169	[BUG]  [BUGGY]  if(c  ==  in.lookAhead())  {  if(c!=  in.lookAhead())  {  [CE]  class,  interface,  or  enum  expected  [FE]                IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead())  {  if(c!=  in.lookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    in.lookAhead())    {    if(c!=  in.lookAhead())  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	add
1170	[BUG]  [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  in.lookAhead()  ||  c  ==  in.read())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  in.lookAhead()  ||  c  ==  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    in.lookAhead())    {    if(c  ==  in.lookAhead()  ||  c  ==  in.read())  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	add
1171	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	222	None	add
1172	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  >=  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  >=  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  >=  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	222	None	add
1173	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	222	None	add
1174	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  >>  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  >>  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  >>  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	222	None	add
1175	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  [Delete]  commmentStart)  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  [Delete]  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  [Delete]  commmentStart)  {	  	non-compiled	[CE]  ')'  expected	222	None	add
1176	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  [BUGGY]  commmentStart)  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  [BUGGY]  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  [BUGGY]  commmentStart)  {	  	non-compiled	[CE]  ')'  expected	222	None	add
1177	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  If  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  If  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    If  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {	  	non-compiled	[CE]  ';'  expected	222	None	add
1178	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	261	None	add
1179	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  If  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  If  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    If  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {	  	non-compiled	[CE]  ';'  expected	261	None	add
1180	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  if  (c  <  =  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  if  (c  <  =  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    if  (c  <  =  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {	  	non-compiled	[CE]  illegal  start  of  expression	261	None	add
1181	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  RC)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  RC)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  RC)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	261	None	add
1182	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  if  (c  >=  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  if  (c  >=  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    if  (c  >=  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	261	None	add
1183	[BUG]  [BUGGY]  if(in  ==  null  ||  in.isEmptyLine())  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  ||  in.isEmptyLine())  {	  if(in!=    null    ||    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1184	[BUG]  [BUGGY]  if(in  >=  null  ||  in.isEmptyLine())  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  >=  null  ||  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  >=  null  ||  in.isEmptyLine())  {	  if(in!=    null    ||    in.isEmptyLine())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	155	None	replace
1185	[BUG]  [BUGGY]  if(c!=  null  ||  in.isEmptyLine())  {  [CE]  incomparable  types:  int  and  <null>  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  null  ||  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c!=  null  ||  in.isEmptyLine())  {	  if(in!=    null    ||    in.isEmptyLine())    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	155	None	replace
1186	[BUG]  [BUGGY]  if(in!=  null  ||  in.read())  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.read())  {	  if(in!=    null    ||    in.isEmptyLine())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	155	None	replace
1187	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  <  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	26	7	replace
1188	[BUG]  [BUGGY]  if(c  <  DISABLED  &&  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	26	7	replace
1189	[BUG]  [BUGGY]  if(in.readFully()  ==  c)  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.readFully()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.readFully()  ==  c)  {	  if(in.read()    ==    c)    {    if(in.read()    >=    c)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
1190	[BUG]  [BUGGY]  if(in.readLine()  ==  c)  {  [CE]  incomparable  types:  String  and  int  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.readLine()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.readLine()  ==  c)  {	  if(in.read()    ==    c)    {    if(in.read()    >=    c)    {    	non-compiled	[CE]  incomparable  types:  String  and  int	43	None	replace
1191	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c!=  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	62	7	replace
1192	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c!=  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	62	7	replace
1193	[BUG]  [BUGGY]  [FE]  IOException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c!=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  IOException  	62	11	replace
1194	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [FE]  IOException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c!=  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  IOException  	62	11	replace
1195	[BUG]  [BUGGY]  if(in!=  null  ||  in.readLine()  ==  c)  {  [CE]  incomparable  types:  String  and  int  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.readLine()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.readLine()  ==  c)  {	  if(in!=    null    ||    in.read()    ==    c)    {    	non-compiled	[CE]  incomparable  types:  String  and  int	154	None	replace
1196	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  'n'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c!=  'n'  ||  c  ==  DISABLED)  {	  if(in!=    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	154	48	replace
1197	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  DISABLED)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  'n'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c!=  'n'  ||  c  ==  DISABLED)  {	  if(in!=    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	154	48	replace
1198	[BUG]  [BUGGY]  Integer  in  =  readEndOfLine(c  -  1);  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  readEndOfLine(c  -  1);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  readEndOfLine(c  -  1);	  Integer    in    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
1199	[BUG]  [BUGGY]  Integer  in  =  readEndOfLine(c  +  1);  [CE]  illegal  start  of  type  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  readEndOfLine(c  +  1);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  readEndOfLine(c  +  1);	  Integer    in    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
1200	[BUG]  [BUGGY]  Integer  in  =  readStartOfLine(c);  [CE]  illegal  start  of  type  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  readStartOfLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  readStartOfLine(c);	  Integer    in    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
1201	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  &&  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  <  DISABLED  &&  in.lookAhead()!=  0)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	48	replace
1202	[BUG]  [BUGGY]  if(c  <  DISABLED  &&  in.lookAhead()!=  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  &&  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  &&  in.lookAhead()!=  0)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	48	replace
1203	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()!=  0)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    in.lookAhead()!=    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
1204	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    in.lookAhead()!=    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
1205	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    in.lookAhead()!=    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
1206	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  CR)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	212	7	replace
1207	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  CR)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	212	7	replace
1208	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  LF)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	212	7	replace
1209	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  LF)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  c!=  DISABLED  &&  in.read()  ==  LF)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	212	7	replace
1210	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  DISABLED  &&  in.read()  >  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	48	replace
1211	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  >  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  &&  in.read()  >  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	48	replace
1212	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(Integer.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if(Integer.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if(Integer.read()  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	266	None	add
1213	[BUG]  [BUGGY]  if(in!=  null)  {  if  (in.lookAhead()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if  (in.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if  (in.lookAhead()  >=  0)  {	  if    (in.lookAhead()    ==    CR)    {    if    (in.lookAhead()    >=    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
1214	[BUG]  [BUGGY]  if(in!=  null)  {  if  (in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if  (in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if  (in.lookAhead()  ==  0)  {	  if    (in.lookAhead()    ==    CR)    {    if    (in.lookAhead()    >=    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
1215	[BUG]  [BUGGY]  if(in!=  null)  {  if  (in.lookAhead()  >=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if  (in.lookAhead()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if  (in.lookAhead()  >=  CR)  {	  if    (in.lookAhead()    ==    CR)    {    if    (in.lookAhead()    >=    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
1216	[BUG]  [BUGGY]  if(in.readLine()!=  c)  {  [CE]  incomparable  types:  String  and  int  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.readLine()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.readLine()!=  c)  {	  if(in.read()    ==    c)    {    if(in.read()!=    c)    {    	non-compiled	[CE]  incomparable  types:  String  and  int	42	None	replace
1217	[BUG]  [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(out  ==  null  ||  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(out  ==  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null    ||    in.read()    ==    c)    {    if(out  ==  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	192	None	add
1218	[BUG]  [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(in  ==  null  ||  in.Read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()  ==  c)  {  if(in  ==  null  ||  in.Read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null    ||    in.read()    ==    c)    {    if(in  ==  null  ||  in.Read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	192	None	add
1219	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  >=  DISABLED  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  >=  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(c  >=  DISABLED  ||  c  ==  DISABLED)  {	  if    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if    (c    >=    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
1220	[BUG]  [BUGGY]  if(in.lookAhead()!=  CR)  {  if(Integer.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  CR)  {  if(Integer.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    CR)    {    if(Integer.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	add
1221	[BUG]  [BUGGY]  if(in.lookAhead()!=  CR)  {  If(in.lookAhead()!=  CR)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  CR)  {  If(in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    CR)    {    If(in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
1222	[BUG]  [BUGGY]  if(in  ==  null)  {  If(in!=  null)  {  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  If(in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  If(in!=  null)  {	  if(in!=    null)    {    If(in!=    null)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
1223	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  If(in!=  null)  {  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  If(in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  If(in!=  null)  {	  if(in!=    null)    {    If(in!=    null)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
1224	[BUG]  [BUGGY]  if(c  ==  '>')  {  If(in!=  null)  {  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  '>')  {  If(in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  '>')  {  If(in!=  null)  {	  if(in!=    null)    {    If(in!=    null)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
1225	[BUG]  [BUGGY]  if(c  =='{  ')  {  If(in!=  null)  {  [CE]  unclosed  character  literal  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  =='{  ')  {  If(in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  =='{  ')  {  If(in!=  null)  {	  if(in!=    null)    {    If(in!=    null)    {    	non-compiled	[CE]  unclosed  character  literal	99	None	replace
1226	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  9)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()  ==  c  &&  in.read()  >  9)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	259	20	replace
1227	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  9)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  9)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ==  c  &&  in.read()  >  9)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	259	20	replace
1228	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()  ==  0  &&  in.read()  >  10)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  AssertionError  	259	7	replace
1229	[BUG]  [BUGGY]  if(in.lookAhead()  ==  0  &&  in.read()  >  10)  {  [FE]  AssertionError  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ==  0  &&  in.read()  >  10)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  AssertionError  	259	7	replace
1230	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  6)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()  ==  c  &&  in.read()  >  6)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	259	20	replace
1231	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  6)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  6)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ==  c  &&  in.read()  >  6)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	259	20	replace
1232	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  ==  1)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	198	None	add
1233	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.read()  >=  CR)  {	  if(in!=    null    &&    in.read()    >=    c)    {    	compilable	  [FE]  AssertionError  	251	49	replace
1234	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >=  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  >=  CR)  {	  if(in!=    null    &&    in.read()    >=    c)    {    	compilable	  [FE]  AssertionError  	251	49	replace
1235	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  &&  in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in  ==  null  &&  in.read()  >=  c)  {	  if(in!=    null    &&    in.read()    >=    c)    {    	compilable	  [FE]  AssertionError  	251	7	replace
1236	[BUG]  [BUGGY]  if(in  ==  null  &&  in.read()  >=  c)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  &&  in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  &&  in.read()  >=  c)  {	  if(in!=    null    &&    in.read()    >=    c)    {    	compilable	  [FE]  AssertionError  	251	7	replace
1237	[BUG]  [BUGGY]  if(in.lookAhead()  ==  0)  {  if(out.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0)  {  if(out.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    0)    {    if(out.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	add
1238	[BUG]  [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  ==  0  ||  Integer.isLetter(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0)  {  if(in.lookAhead()  ==  0  ||  Integer.isLetter(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    0)    {    if(in.lookAhead()  ==  0  ||  Integer.isLetter(c))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	add
1239	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  If(in!=  null  ||  in.read()  ==  c)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  If(in!=  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    in.read()    ==    c)    {    If(in!=  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  ';'  expected	153	None	add
1240	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(out!=  null  ||  in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(out!=  null  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    in.read()    ==    c)    {    if(out!=  null  ||  in.read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	add
1241	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(out.read()  ==  c  ||  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(out.read()  ==  c  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    ||    in.read()    ==    CR)    {    if(out.read()  ==  c  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	add
1242	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(c  ==  DISABLED  ||  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(c  ==  DISABLED  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    ||    in.read()    ==    CR)    {    if(c  ==  DISABLED  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	add
1243	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  0  ||  in.lookAhead()  >=  0)  {	  if    (c    <    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	47	replace
1244	[BUG]  [BUGGY]  if  (c  <  0  ||  in.lookAhead()  >=  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  0  ||  in.lookAhead()  >=  0)  {	  if    (c    <    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	47	replace
1245	[BUG]  [BUGGY]  if(in!=  null)  {  if(in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(in.read()  ==  c)  {	  if(in.read()    ==    c)    {    if(in.read()    {    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	268	None	replace
1246	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  if(in.read()  ==  c)  {	  if(in.read()    ==    c)    {    if(in.read()    {    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	268	None	replace
1247	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if  (c  <  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if  (c  <  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if  (c  <  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
1248	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(c  <  DISABLED  ||  c  >  DISABLED)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
1249	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(c  <  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
1250	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  &&  in.lookAhead()!=  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  AssertionError  	131	7	replace
1251	[BUG]  [BUGGY]  if(c  ==  DISABLED  &&  in.lookAhead()!=  0)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  &&  in.lookAhead()!=  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  AssertionError  	131	7	replace
1252	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  >=  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  AssertionError  	131	7	replace
1253	[BUG]  [BUGGY]  if(c  >=  DISABLED  &&  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  >=  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  AssertionError  	131	7	replace
1254	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in!=  null  &&  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in!=  null  &&  in.lookAhead()  ==  DISABLED)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	66	7	replace
1255	[BUG]  [BUGGY]  if  (in!=  null  &&  in.lookAhead()  ==  DISABLED)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in!=  null  &&  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in!=  null  &&  in.lookAhead()  ==  DISABLED)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	66	7	replace
1256	[BUG]  [BUGGY]  if(in.read()  ==  LINE  &&  in.isEmptyLine())  {  [CE]  cannot  find  symbol  LINE  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  LINE  &&  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  LINE  &&  in.isEmptyLine())  {	  if(in.read()    ==    c    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol  LINE	244	None	replace
1257	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (Integer.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (Integer.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF    ||    in.lookAhead()    ==    CR)    {    if  (Integer.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	add
1258	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  ((  in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  ((  in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF    ||    in.lookAhead()    ==    CR)    {    if  ((  in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  ')'  expected	186	None	add
1259	[BUG]  [BUGGY]  double  CR  =  in.read();  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  double  CR  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	double  CR  =  in.read();	  char    CR    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
1260	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  out.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  out.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  out.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	271	None	add
1261	[BUG]  [BUGGY]  if(in.readLine()  ==  0)  {  [CE]  incomparable  types:  String  and  int  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.readLine()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.readLine()  ==  0)  {	  if(in.read()    ==    c)    {    if(in.read()    ==    c)    {    	non-compiled	[CE]  incomparable  types:  String  and  int	41	None	replace
1262	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    if(Integer.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	200	None	replace
1263	[BUG]  [BUGGY]  if(in.read()  ==  c)  {  if(Integer.lookAhead(c)  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c)  {  if(Integer.lookAhead(c)  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c)  {  if(Integer.lookAhead(c)  ==  0)  {	  if(in.lookAhead()    ==    c)    {    if(Integer.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	200	None	replace
1264	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.lookAhead(c)  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]            IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.lookAhead(c)  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.lookAhead(c)  ==  0)  {	  if(in.lookAhead()    ==    c)    {    if(Integer.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	200	None	replace
1265	[BUG]  [BUGGY]  if(in.read()  ==  c)  {  if(Integer.parseInt(c)  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c)  {  if(Integer.parseInt(c)  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c)  {  if(Integer.parseInt(c)  ==  0)  {	  if(in.lookAhead()    ==    c)    {    if(Integer.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	200	None	replace
1266	[BUG]  [BUGGY]  if(in.read()  ==  c)  {  if(Integer.lookAhead(c)  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]                IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c)  {  if(Integer.lookAhead(c)  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c)  {  if(Integer.lookAhead(c)  ==  commmentStart)  {	  if(in.lookAhead()    ==    c)    {    if(Integer.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	200	None	replace
1267	[BUG]  [BUGGY]  if(c  ==  in.read())  {  if(Integer.lookAhead(c)  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.read())  {  if(Integer.lookAhead(c)  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  in.read())  {  if(Integer.lookAhead(c)  ==  0)  {	  if(in.lookAhead()    ==    c)    {    if(Integer.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	200	None	replace
1268	[BUG]  [BUGGY]  if(in.read()  ==  c)  {  if(Integer.lookAhead(c)!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c)  {  if(Integer.lookAhead(c)!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c)  {  if(Integer.lookAhead(c)!=  0)  {	  if(in.lookAhead()    ==    c)    {    if(Integer.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	200	None	replace
1269	[BUG]  [BUGGY]  if(in.lookAhead()  >=  0)  {  if(out.lookAhead()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  0)  {  if(out.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    0)    {    if(out.lookAhead()  >=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	203	None	add
1270	[BUG]  [BUGGY]  if(in.lookAhead()  >=  0)  {  If(in.lookAhead()  >=  0)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  0)  {  If(in.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    0)    {    If(in.lookAhead()  >=  0)  {	  	non-compiled	[CE]  ';'  expected	203	None	add
1271	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  if(Integer.parseInt(c)  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  if(Integer.parseInt(c)  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    0)    {    if(Integer.parseInt(c)  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	add
1272	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  if(in.read()  ==  0  ||  in.read()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  if(in.read()  ==  0  ||  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    0)    {    if(in.read()  ==  0  ||  in.read()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	add
1273	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  if(Integer.parseInt(c)  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  if(Integer.parseInt(c)  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    0)    {    if(Integer.parseInt(c)  >=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	add
1274	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  if(Integer.parseInt(c)!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  if(Integer.parseInt(c)!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    0)    {    if(Integer.parseInt(c)!=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	add
1275	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  if(Integer.parseInt(c)  <  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  if(Integer.parseInt(c)  <  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    0)    {    if(Integer.parseInt(c)  <  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	add
1276	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  if(Integer.parseInt(c)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  if(Integer.parseInt(c)  <  =  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    0)    {    if(Integer.parseInt(c)  <  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	169	None	add
1277	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  c  ==  RF  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  ||  c  ==  RF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  ||  c  ==  RF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	add
1278	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  If  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  If  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    If  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  ';'  expected	61	None	add
1279	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  FR  &&  in.lookAhead()  ==  LF)  {  [CE]  cannot  find  symbol  FR  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  FR  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  FR  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    FR    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  FR	269	None	replace
1280	[BUG]  [BUGGY]  if(in.lookAhead()!=  c)  {  If(in.lookAhead()!=  c)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  c)  {  If(in.lookAhead()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    c)    {    If(in.lookAhead()!=  c)  {	  	non-compiled	[CE]  ';'  expected	205	None	add
1281	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  Integer.read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  Integer.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  Integer.read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	224	None	add
1282	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
1283	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
1284	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if  (c  ==  LF  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if  (c  ==  LF  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if  (c  ==  LF  &&  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
1285	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    if  (c  ==  DISABLED  ||  in.lookAhead()  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	add
1286	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  If  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  If  (c  ==  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    LF)    {    If  (c  ==  DISABLED  &&  in.read()  ==  LF)  {	  	non-compiled	[CE]  ';'  expected	108	None	add
1287	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(in!=  null  &&  in.Read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(in!=  null  &&  in.Read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    ==    c)    {    if(in!=  null  &&  in.Read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	add
1288	[BUG]  [BUGGY]  in.close();  [CE]  illegal  start  of  type  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.close();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.close();	  in.read();    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
1289	[BUG]  [BUGGY]  in.mark(c);  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.mark(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.mark(c);	  in.read();    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
1290	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (Integer.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  (Integer.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    if  (Integer.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	add
1291	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  ((  in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  ((  in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    if  ((  in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  ')'  expected	83	None	add
1292	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (Integer.lookAhead()!=  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF)  {  if  (Integer.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF)    {    if  (Integer.lookAhead()!=  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	add
1293	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF)  {  If  (in.lookAhead()!=  LF)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF)  {  If  (in.lookAhead()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF)    {    If  (in.lookAhead()!=  LF)  {	  	non-compiled	[CE]  ';'  expected	184	None	add
1294	[BUG]  [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  out.lookAhead())  {  [CE]  class,  interface,  or  enum  expected  [FE]    IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  out.lookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    in.lookAhead())    {    if(c  ==  out.lookAhead())  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	add
1295	[BUG]  [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  in.LookAhead())  {  [CE]  class,  interface,  or  enum  expected  [FE]      IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.lookAhead())  {  if(c  ==  in.LookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c    ==    in.lookAhead())    {    if(c  ==  in.LookAhead())  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	add
1296	[BUG]  [BUGGY]  if(in!=  null  ||  in.length())  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.length())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.length())  {	  if(in!=    null    ||    in.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1297	[BUG]  [BUGGY]  if(in!=  null  ||  in.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.length()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.length()  >  0)  {	  if(in!=    null    ||    in.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1298	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.MIN_VALUE  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.MIN_VALUE  ==  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.MIN_VALUE  ==  null)  {	  if(in!=    null)    {    if(Integer.MAX_VALUE    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
1299	[BUG]  [BUGGY]  if(in  ==  null)  {  if(Integer.MAX_VALUE  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(Integer.MAX_VALUE  ==  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  if(Integer.MAX_VALUE  ==  null)  {	  if(in!=    null)    {    if(Integer.MAX_VALUE    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
1300	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(Integer.MAX_VALUE  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n')  {  if(Integer.MAX_VALUE  ==  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'n')  {  if(Integer.MAX_VALUE  ==  null)  {	  if(in!=    null)    {    if(Integer.MAX_VALUE    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
1301	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.MAX_VALUE  >=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.MAX_VALUE  >=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.MAX_VALUE  >=  null)  {	  if(in!=    null)    {    if(Integer.MAX_VALUE    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
1302	[BUG]  [BUGGY]  if(c  <  =  DISABLED)  {  if  (C  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  DISABLED)  {  if  (C  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  DISABLED)  {  if  (C  <  DISABLED  ||  c  >  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED)    {    if    (C    <    DISABLED    ||    c    >    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1303	[BUG]  [BUGGY]  If  (c  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  If  (c  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	If  (c  <  DISABLED  ||  c  >  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED)    {    If    (c    <    DISABLED    ||    c    >    DISABLED)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
1304	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  ((  in.lookAhead()!=  0  ||  in.lookAhead()  ==  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  ((  in.lookAhead()!=  0  ||  in.lookAhead()  ==  0))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    if  ((  in.lookAhead()!=  0  ||  in.lookAhead()  ==  0))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	add
1305	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  ((  in.lookAhead()!=  0)||(in.lookAhead()  ==  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  ((  in.lookAhead()!=  0)||(in.lookAhead()  ==  0))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    if  ((  in.lookAhead()!=  0)||(in.lookAhead()  ==  0))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	add
1306	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  ==  0  ||  in.lookAhead()  ==  0)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	48	replace
1307	[BUG]  [BUGGY]  if  (in.read()  ==  0  ||  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  0  ||  in.lookAhead()  ==  0)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	48	replace
1308	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  in.read()  ||  in.lookAhead()!=  0)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	49	replace
1309	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()!=  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  in.read()  ||  in.lookAhead()!=  0)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	49	replace
1310	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >  DETERMINATED)  {  [CE]  cannot  find  symbol  DETERMINATED  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  c  >  DETERMINATED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  ||  c  >  DETERMINATED)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED)    {    if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    	non-compiled	[CE]  cannot  find  symbol  DETERMINATED	73	None	replace
1311	[BUG]  [BUGGY]  if(in!=  null  &&  in.getChars()  >  0)  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.getChars()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.getChars()  >  0)  {	  if(in!=    null    &&    in.read()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
1312	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  DISABLED  &&  in.lookAhead()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  >=  DISABLED  &&  in.lookAhead()  >  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	134	7	replace
1313	[BUG]  [BUGGY]  if(c  >=  DISABLED  &&  in.lookAhead()  >  LF)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  DISABLED  &&  in.lookAhead()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  >=  DISABLED  &&  in.lookAhead()  >  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	134	7	replace
1314	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  in.read()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  &&  in.read()  >  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	134	7	replace
1315	[BUG]  [BUGGY]  if(c  ==  DISABLED  &&  in.read()  >  LF)  {  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  in.read()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  &&  in.read()  >  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()    >=    LF)    {    	compilable	  [FE]  AssertionError  	134	7	replace
1316	[BUG]  [BUGGY]  Delimiter  commmentStart  =  in.read(c);  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Delimiter  commmentStart  =  in.read(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Delimiter  commmentStart  =  in.read(c);	  char    commmentStart    =    in.read(c);    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
1317	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  If  (c  <  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  If  (c  <  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  If  (c  <  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    If    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  ';'  expected	78	None	replace
1318	[BUG]  [BUGGY]  if(in!=  null)  {  If(in.read()  ==  c)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  If(in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  If(in.read()  ==  c)  {	  if(in.read()    ==    c)    {    If(in.read()    ==    c)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
1319	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    ((    in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	128	22	replace
1320	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    ((    in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	128	22	replace
1321	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  <  =  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  &&  in.read()  <  =  0)  {	  if(in.read()    ==    c    &&    in.read()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	245	None	replace
1322	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  >=  DISABLED  &&  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  >=  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    if  (c  >=  DISABLED  &&  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	add
1323	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  &&  out.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  LF)  {  if  (c  <  DISABLED  &&  out.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    if  (c  <  DISABLED  &&  out.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	add
1324	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  &&  in.read()  ==  commmentEnd)  {  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  &&  in.read()  ==  commmentEnd)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  &&  in.read()  ==  commmentEnd)  {	  if    (c    <    =    DISABLED    &&    in.read()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
1325	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c!=  DISABLED  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c!=  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(c!=  DISABLED  ||  c  ==  DISABLED)  {	  if    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if    (c!=    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
1326	[BUG]  [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (Integer.read()  ==  CR  ||  in.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  (Integer.read()  ==  CR  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    if  (Integer.read()  ==  CR  ||  in.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	add
1327	[BUG]  [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  ((  in.read()  ==  CR  ||  in.read()  ==  LF)  {  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.read()  ==  LF)  {  if  ((  in.read()  ==  CR  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    if  ((  in.read()  ==  CR  ||  in.read()  ==  LF)  {	  	non-compiled	[CE]  ')'  expected	81	None	add
1328	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  &&  c  >  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  &&  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  &&  c  >  DISABLED)  {	  if    (c    <    =    DISABLED    ||    c    >    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
1329	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED)||(c  >  DISABLED))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  ((  c  <  DISABLED)||(c  >  DISABLED))  {	  if    (c    <    =    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	180	48	replace
1330	[BUG]  [BUGGY]  if  ((  c  <  DISABLED)||(c  >  DISABLED))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED)||(c  >  DISABLED))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  ((  c  <  DISABLED)||(c  >  DISABLED))  {	  if    (c    <    =    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	180	48	replace
1331	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  out.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  out.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  <  DISABLED  ||  c  >  DISABLED  &&  out.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	add
1332	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(c  ==  DISABLED  &&  in.lookAhead()  >=  0)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    in.lookAhead()    >=    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
1333	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  ((  in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  ((  in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    if  ((  in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	add
1334	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  (Integer.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  (Integer.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    if  (Integer.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	add
1335	[BUG]  [BUGGY]  if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  in.available()  >  0)  {  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  in.available()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  in.available()  >  0)  {	  if(in!=    null    &&    in.available()    >    0)    {    	non-compiled	[CE]  ')'  expected	252	None	replace
1336	[BUG]  [BUGGY]  if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)&&  in.available()  >  0)  {  [CE]  cannot  find  symbol  Feature  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)&&  in.available()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)&&  in.available()  >  0)  {	  if(in!=    null    &&    in.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	252	None	replace
1337	[BUG]  [BUGGY]  if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  Integer.MAX_VALUE))  {  [CE]  cannot  find  symbol  Feature  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  Integer.MAX_VALUE))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  Integer.MAX_VALUE))  {	  if(in!=    null    &&    in.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	252	None	replace
1338	[BUG]  [BUGGY]  if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  c))  {  [CE]  cannot  find  symbol  Feature  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  c))  {	  if(in!=    null    &&    in.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	252	None	replace
1339	[BUG]  [BUGGY]  if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES).available()  >  0)  {  [CE]  cannot  find  symbol  Feature  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES).available()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES).available()  >  0)  {	  if(in!=    null    &&    in.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	252	None	replace
1340	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    If    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1341	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    If    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1342	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    If    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1343	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  <  =  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  <  =  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  &&  c  <  =  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
1344	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  >=  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  &&  c  >=  DISABLED  &&  in.read()  ==  CR)  {	  if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	210	7	replace
1345	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  >=  DISABLED  &&  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  >=  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  &&  c  >=  DISABLED  &&  in.read()  ==  CR)  {	  if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	210	7	replace
1346	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  ||  c  ==  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1347	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	70	7	replace
1348	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	70	7	replace
1349	[BUG]  [BUGGY]  [FE]  Failed  to  parse  with  comments  (entry  0)  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  Failed  to  parse  with  comments  (entry  0)  	70	17	replace
1350	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  in.lookAhead()  ==  CR)  {  [FE]  Failed  to  parse  with  comments  (entry  0)  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  Failed  to  parse  with  comments  (entry  0)  	70	17	replace
1351	[BUG]  [BUGGY]  if((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentEnd)  {  [CE]  cannot  find  symbol  commmentEnd  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentEnd)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentEnd)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    	non-compiled	[CE]  cannot  find  symbol  commmentEnd	225	None	replace
1352	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if((  c  >=  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if((  c  >=  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	225	7	replace
1353	[BUG]  [BUGGY]  if((  c  >=  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if((  c  >=  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if((  c  >=  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	225	7	replace
1354	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in  ==  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(in  ==  null  ||  in  ==  null)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
1355	[BUG]  [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(c)>  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(c)>  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(Integer.parseInt(c)>  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
1356	[BUG]  [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(c)  <  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(c)  <  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(Integer.parseInt(c)  <  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
1357	[BUG]  [BUGGY]  if(in  ==  null)  {  if(Integer.isLetter(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(Integer.isLetter(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(Integer.isLetter(c))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
1358	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(in  ==  null  ||  in!=  null)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
1359	[BUG]  [BUGGY]  if(in.lookAhead()  >=  c)  {  If(in.lookAhead()  >=  c)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  c)  {  If(in.lookAhead()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    c)    {    If(in.lookAhead()  >=  c)  {	  	non-compiled	[CE]  ';'  expected	256	None	add
1360	[BUG]  [BUGGY]  if(in.read()  ==  CR)  {  if(Integer.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  CR)  {  if(Integer.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    CR)    {    if(Integer.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	167	None	add
1361	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.read()  ==  c)  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	208	None	replace
1362	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.readInt()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.readInt()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.readInt()  ==  0)  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	208	None	replace
1363	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.readInt()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.readInt()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.readInt()  ==  c)  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	208	None	replace
1364	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.read(c)  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.read(c)  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.read(c)  ==  0)  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	208	None	replace
1365	[BUG]  [BUGGY]  if(in  ==  null)  {  if(Integer.readInt()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(Integer.readInt()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  if(Integer.readInt()  ==  0)  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	208	None	replace
1366	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.read()  ==  -1)  {	  if(in!=    null    &&    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	191	48	replace
1367	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  -1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  ==  -1)  {	  if(in!=    null    &&    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	191	48	replace
1368	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  c  &&  isEndOfLine(c))  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  c  &&  isEndOfLine(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  ==  c  &&  isEndOfLine(c))  {	  if(in.read()    ==    c    &&    isEndOfLine(c))    {    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
1369	[BUG]  [BUGGY]  if(in  ==  null  &&  in.read()  ==  c  &&  isEndOfLine(c))  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  &&  in.read()  ==  c  &&  isEndOfLine(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  &&  in.read()  ==  c  &&  isEndOfLine(c))  {	  if(in.read()    ==    c    &&    isEndOfLine(c))    {    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
1370	[BUG]  [BUGGY]  if(in.read()  ==  0  &&  isEndOfLine(c))  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0  &&  isEndOfLine(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  0  &&  isEndOfLine(c))  {	  if(in.read()    ==    c    &&    isEndOfLine(c))    {    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
1371	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  ||  c  >=  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    	compilable	  [FE]  AssertionError  	177	7	replace
1372	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  c  >=  DISABLED)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  ||  c  >=  DISABLED)  {	  if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    	compilable	  [FE]  AssertionError  	177	7	replace
1373	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  If  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  If  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    If  (c  ==  DISABLED  &&  in.lookAhead()!=  CR)  {	  	non-compiled	[CE]  ';'  expected	114	None	add
1374	[BUG]  [BUGGY]  if  (in  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [CE]  incomparable  types:  ExtendedBufferedReader  and  char  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in  ==  DISABLED  &&  in.read()  ==  commmentStart)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	non-compiled	[CE]  incomparable  types:  ExtendedBufferedReader  and  char	197	None	replace
1375	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in  >=  null  &&  in.read()  >=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  if(in  >=  null  &&  in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >=    c)    {    if(in  >=  null  &&  in.read()  >=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	250	None	add
1376	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  If(in!=  null  &&  in.read()  >=  c)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >=  c)  {  If(in!=  null  &&  in.read()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >=    c)    {    If(in!=  null  &&  in.read()  >=  c)  {	  	non-compiled	[CE]  ';'  expected	250	None	add
1377	[BUG]  [BUGGY]  if(c  ==  DISABLED  &&  out.lookAhead()  >  LF)  {  [CE]  cannot  find  symbol  out  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  out.lookAhead()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  &&  out.lookAhead()  >  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    out.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  out	247	None	replace
1378	[BUG]  [BUGGY]  if(c  >=  DISABLED  &&  out.lookAhead()  >  LF)  {  [CE]  cannot  find  symbol  out  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  DISABLED  &&  out.lookAhead()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  >=  DISABLED  &&  out.lookAhead()  >  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    out.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  out	247	None	replace
1379	[BUG]  [BUGGY]  if(c  ==  DISABLED  &&  out.lookAhead()  ==  0)  {  [CE]  cannot  find  symbol  out  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  out.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  &&  out.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    out.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  out	247	None	replace
1380	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  If  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  If  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    If  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  ';'  expected	209	None	add
1381	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	6	7	replace
1382	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	6	7	replace
1383	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	6	7	replace
1384	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	6	7	replace
1385	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  If(c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  If(c  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  If(c  ==  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    If    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  ';'  expected	237	None	replace
1386	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  If(c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  If(c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  If(c  ==  DISABLED  ||  in.lookAhead()  ==  CR)  {	  if    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    If    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  ';'  expected	237	None	replace
1387	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentEnd)  {  [CE]  cannot  find  symbol  commmentEnd  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentEnd)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentEnd)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    commmentStart)    {    	non-compiled	[CE]  cannot  find  symbol  commmentEnd	183	None	replace
1388	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentStart  +  2)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentStart  +  2)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  ||  commmentStart  +  2)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    ||    commmentStart)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	183	None	replace
1389	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()!=  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()!=  DISABLED  ||  c  >  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	49	replace
1390	[BUG]  [BUGGY]  if  (in.read()!=  DISABLED  ||  c  >  DISABLED)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()!=  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()!=  DISABLED  ||  c  >  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	49	replace
1391	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in  ==  null  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in  ==  null  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	64	7	replace
1392	[BUG]  [BUGGY]  if  (in  ==  null  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in  ==  null  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in  ==  null  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	64	7	replace
1393	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)&&  in.lookAhead()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)&&  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0)    {    if  ((  in.lookAhead()  >=  0)&&  in.lookAhead()!=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	add
1394	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)||(in.lookAhead()  ==  0))  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)||(in.lookAhead()  ==  0))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0)    {    if  ((  in.lookAhead()  >=  0)||(in.lookAhead()  ==  0))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	add
1395	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0)  {  if  (in.lookAhead()!=  0  ||  in.lookAhead()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0)  {  if  (in.lookAhead()!=  0  ||  in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0)    {    if  (in.lookAhead()!=  0  ||  in.lookAhead()!=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	add
1396	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(c  ==  LF  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(c  ==  LF  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    &&    in.read()    >    0)    {    if(c  ==  LF  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	242	None	add
1397	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(c  ==  DISABLED  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(c  ==  DISABLED  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    &&    in.read()    >    0)    {    if(c  ==  DISABLED  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	242	None	add
1398	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  c  >=  DISABLED)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	236	7	replace
1399	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c  >=  DISABLED)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c  >=  DISABLED)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	236	7	replace
1400	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >  DISABLED  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >  DISABLED  &&  c  ==  DISABLED)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	236	7	replace
1401	[BUG]  [BUGGY]  if  (c  >  DISABLED  &&  c  ==  DISABLED)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >  DISABLED  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >  DISABLED  &&  c  ==  DISABLED)  {	  if    (c    >=    DISABLED    &&    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	236	7	replace
1402	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  c  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    CR)    {    	compilable	  [FE]  AssertionError  	124	7	replace
1403	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  c  ==  CR)  {	  if    (c    ==    DISABLED    ||    c    ==    CR)    {    	compilable	  [FE]  AssertionError  	124	7	replace
1404	[BUG]  [BUGGY]  if(in!=  null)  {  if(c  >=  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(c  >=  DISABLED)  {	  if(in!=    null)    {    if(c    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
1405	[BUG]  [BUGGY]  if(in!=  null)  {  if(c  ==  'n'  ||  c  >=  'r')  {  [CE]  class,  interface,  or  enum  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(c  ==  'n'  ||  c  >=  'r')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(c  ==  'n'  ||  c  >=  'r')  {	  if(in!=    null)    {    if(c    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
1406	[BUG]  [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  ||  c  >  DISABLED)  {  if  (c  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    if  (c  <  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	226	None	add
1407	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  c  >  DISABLED)  {	  if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	227	7	replace
1408	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  >  DISABLED)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  c  >  DISABLED)  {	  if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	227	7	replace
1409	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  ==  -1)  {	  if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	234	14	replace
1410	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  -1)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  ==  -1)  {	  if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	234	14	replace
1411	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r')  {  if(in  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  'n'  ||  c  >  'r')  {  if(in  ==  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  'n'  ||  c  >  'r')  {  if(in  ==  null)  {	  if(in!=    null)    {    if(in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1412	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r')  {  if(in  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r')  {  if(in  ==  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  'n'  ||  c  >=  'r')  {  if(in  ==  null)  {	  if(in!=    null)    {    if(in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1413	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  't')  {  if(in  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  'n'  ||  c  >  't')  {  if(in  ==  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  'n'  ||  c  >  't')  {  if(in  ==  null)  {	  if(in!=    null)    {    if(in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1414	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  ((  in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  ((  in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  ((  in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  ')'  expected	87	None	add
1415	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  out.lookAhead()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  out.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  out.lookAhead()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
1416	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (c  >=  LF  ||  in.lookAhead()  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (c  >=  LF  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    if  (c  >=  LF  ||  in.lookAhead()  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
1417	[BUG]  [BUGGY]  if(c  <  0  ||  c  >  DISABLED)  {  if(Integer.parseInt(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  0  ||  c  >  DISABLED)  {  if(Integer.parseInt(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  0  ||  c  >  DISABLED)  {  if(Integer.parseInt(c))  {	  if(in!=    null)    {    if(Integer.parseInt(c))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
1418	[BUG]  [BUGGY]  if(c  >=  DISABLED)  {  if(Integer.parseInt(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  DISABLED)  {  if(Integer.parseInt(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  >=  DISABLED)  {  if(Integer.parseInt(c))  {	  if(in!=    null)    {    if(Integer.parseInt(c))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
1419	[BUG]  [BUGGY]  if(c!=  DISABLED)  {  if(Integer.parseInt(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  DISABLED)  {  if(Integer.parseInt(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c!=  DISABLED)  {  if(Integer.parseInt(c))  {	  if(in!=    null)    {    if(Integer.parseInt(c))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
1420	[BUG]  [BUGGY]  if(c  <  DISABLED)  {  if(Integer.parseInt(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED)  {  if(Integer.parseInt(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED)  {  if(Integer.parseInt(c))  {	  if(in!=    null)    {    if(Integer.parseInt(c))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
1421	[BUG]  [BUGGY]  [FE]  IOException  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  <  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  IOException  	24	11	replace
1422	[BUG]  [BUGGY]  if(c  <  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [FE]  IOException  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  IOException  	24	11	replace
1423	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.hasNext())  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.hasNext())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  &&  in.hasNext())  {	  if(in.read()    ==    c    &&    in.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
1424	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  c  &&  in.hasNext())  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  c  &&  in.hasNext())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  ==  c  &&  in.hasNext())  {	  if(in.read()    ==    c    &&    in.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
1425	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  in.read()  ||  in.read()  ==  CR)  {	  if    (c    <    LF    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	20	49	replace
1426	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  in.read()  ||  in.read()  ==  CR)  {	  if    (c    <    LF    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	20	49	replace
1427	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  DISABLED  ||  in.read()  ==  CR)  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	174	50	replace
1428	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  ||  in.read()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  ||  in.read()  ==  CR)  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	174	50	replace
1429	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  'n'  ||  in.read()  ==  'r')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  'n'  ||  in.read()  ==  'r')  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	174	50	replace
1430	[BUG]  [BUGGY]  if(in.read()  ==  'n'  ||  in.read()  ==  'r')  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  'n'  ||  in.read()  ==  'r')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  'n'  ||  in.read()  ==  'r')  {	  if(in.read()    ==    c    ||    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	174	50	replace
1431	[BUG]  [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  ((  in.read()  <  DISABLED  ||  c  >  DISABLED))  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  ((  in.read()  <  DISABLED  ||  c  >  DISABLED))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    if  ((  in.read()  <  DISABLED  ||  c  >  DISABLED))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	181	None	add
1432	[BUG]  [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  (in.read()  >  DISABLED  ||  c  >  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  (in.read()  >  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    if  (in.read()  >  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	181	None	add
1433	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  &&  in.read()  ==  0)  {	  if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	117	48	replace
1434	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  &&  in.read()  ==  0)  {	  if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	117	48	replace
1435	[BUG]  [BUGGY]  if(in!=  null  &&  in.read())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read())  {	  if(in!=    null    &&    in.isEmpty())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	215	None	replace
1436	[BUG]  [BUGGY]  if(in!=  null  &&  in.length())  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.length())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.length())  {	  if(in!=    null    &&    in.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
1437	[BUG]  [BUGGY]  if(in!=  null  &&  in.shouldEmpty())  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.shouldEmpty())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.shouldEmpty())  {	  if(in!=    null    &&    in.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
1438	[BUG]  [BUGGY]  if(in!=  null  ||  in  ==  null)  {  if(c  ==  LF  &&  out.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in  ==  null)  {  if(c  ==  LF  &&  out.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in  ==  null)  {  if(c  ==  LF  &&  out.lookAhead()  ==  CR)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	248	None	replace
1439	[BUG]  [BUGGY]  if(in!=  null  ||  in  ==  null)  {  if(c  ==  LF  &&  out.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in  ==  null)  {  if(c  ==  LF  &&  out.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in  ==  null)  {  if(c  ==  LF  &&  out.lookAhead()  ==  0)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	248	None	replace
1440	[BUG]  [BUGGY]  if(in!=  null)  {  if  (c  ==  LF  &&  out.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if  (c  ==  LF  &&  out.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if  (c  ==  LF  &&  out.lookAhead()  ==  0)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	248	None	replace
1441	[BUG]  [BUGGY]  if(in!=  null)  {  if(c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	248	None	replace
1442	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	10	7	replace
1443	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	10	7	replace
1444	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  c  <  =  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  c  <  =  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c!=  DISABLED  &&  c  <  =  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1445	[BUG]  [BUGGY]  if(in!=  null)  {  if  (in.lookAhead()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if  (in.lookAhead()!=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if  (in.lookAhead()!=  0)  {	  if    (in.lookAhead()    ==    CR)    {    if    (in.lookAhead()!=    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
1446	[BUG]  [BUGGY]  if(c  ==  DISABLED)  {  if  (in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED)  {  if  (in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED)  {  if  (in.lookAhead()!=  CR)  {	  if    (in.lookAhead()    ==    CR)    {    if    (in.lookAhead()!=    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
1447	[BUG]  [BUGGY]  if(in!=  null)  {  if  (in.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if  (in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if  (in.lookAhead()!=  CR)  {	  if    (in.lookAhead()    ==    CR)    {    if    (in.lookAhead()!=    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
1448	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	272	7	replace
1449	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	272	7	replace
1450	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	272	7	replace
1451	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	272	7	replace
1452	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	272	None	replace
1453	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r')  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  'n'  ||  c  >=  'r')  {	  if(in!=    null)    {    if(in    >=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1454	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	4	7	replace
1455	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	4	7	replace
1456	[BUG]  [BUGGY]  if  (c  <  =  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  =  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  =  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1457	[BUG]  [BUGGY]  if(in.read()  ==  commmentEnd)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentEnd)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentEnd)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if    (c    ==    LF    ||    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    ||    in.lookAhead()    >=    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
1458	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  DISABLED  &&  in.read()  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	60	7	replace
1459	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  in.read()  ==  DISABLED)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  DISABLED  &&  in.read()  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	60	7	replace
1460	[BUG]  [BUGGY]  If  (c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  If  (c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	If  (c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    If    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  ';'  expected	166	None	replace
1461	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (c  >=  DISABLED  ||  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	add
1462	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(Integer.lookAhead()  ==  c  &&  in.read()  >  10)  {  [CE]  class,  interface,  or  enum  expected  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(Integer.lookAhead()  ==  c  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    if(Integer.lookAhead()  ==  c  &&  in.read()  >  10)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	258	None	add
1463	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(in.lookAhead()  ==  c  ||  in.read()  >  10)  {  [CE]  class,  interface,  or  enum  expected  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(in.lookAhead()  ==  c  ||  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    if(in.lookAhead()  ==  c  ||  in.read()  >  10)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	258	None	add
1464	[BUG]  [BUGGY]  if(in.lookAhead())  {  [CE]  incompatible  types  [FE]    IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead())  {	  if(c    ==    in.lookAhead())    {    	non-compiled	[CE]  incompatible  types	53	None	replace
1465	[BUG]  [BUGGY]  if(in.read())  {  [CE]  incompatible  types  [FE]      IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read())  {	  if(c    ==    in.lookAhead())    {    	non-compiled	[CE]  incompatible  types	53	None	replace
1466	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  if  (C  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  if  (C  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    if  (C  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	261	None	add
1467	[BUG]  [BUGGY]  in.skipChild(c);  [CE]  illegal  start  of  type  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.skipChild(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.skipChild(c);	  in.skipChildren();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
1468	[BUG]  [BUGGY]  in.skipLines();  [CE]  illegal  start  of  type  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.skipLines();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.skipLines();	  in.skipChildren();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
1469	[BUG]  [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(in))  {  [CE]  class,  interface,  or  enum  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(Integer.parseInt(in))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  if(Integer.parseInt(in))  {	  if(in!=    null)    {    if(Integer.parseInt(in))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	232	None	replace
1470	[BUG]  [BUGGY]  if(in!=  null)  {  if(!Integer.parseInt(in))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(!Integer.parseInt(in))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(!Integer.parseInt(in))  {	  if(in!=    null)    {    if(Integer.parseInt(in))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	232	None	replace
1471	[BUG]  [BUGGY]  if(c  >=  DISABLED)  {  if(Integer.parseInt(in))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  DISABLED)  {  if(Integer.parseInt(in))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  >=  DISABLED)  {  if(Integer.parseInt(in))  {	  if(in!=    null)    {    if(Integer.parseInt(in))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	232	None	replace
1472	[BUG]  [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(out!=  null  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(out!=  null  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    c    ==    DISABLED)    {    if(out!=  null  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	add
1473	[BUG]  [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(Integer.parseInt(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(Integer.parseInt(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    c    ==    DISABLED)    {    if(Integer.parseInt(c))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	add
1474	[BUG]  [BUGGY]  if(in!=  null)  {  if(in.lookAhead()!=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]          IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(in.lookAhead()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(in.lookAhead()!=  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()!=    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
1475	[BUG]  [BUGGY]  if(c  ==  in.read())  {  if(in.lookAhead()!=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]            IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.read())  {  if(in.lookAhead()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  in.read())  {  if(in.lookAhead()!=  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()!=    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
1476	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in.lookAhead()!=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]              IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in.lookAhead()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  if(in.lookAhead()!=  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()!=    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
1477	[BUG]  [BUGGY]  if(in!=  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	152	None	replace
1478	[BUG]  [BUGGY]  if(in!=  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(in    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	152	None	replace
1479	[BUG]  [BUGGY]  if(in!=  null  ||  in.isEnabled(Feature.QUOTE_FIELD_EXTENDS))  {  [CE]  cannot  find  symbol  Feature  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.isEnabled(Feature.QUOTE_FIELD_EXTENDS))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.isEnabled(Feature.QUOTE_FIELD_EXTENDS))  {	  if(in    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	152	None	replace
1480	[BUG]  [BUGGY]  if(in!=  null  ||  in.isEnabled(Feature.QUOTE_FIELD_EXPR_RESULT))  {  [CE]  cannot  find  symbol  Feature  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.isEnabled(Feature.QUOTE_FIELD_EXPR_RESULT))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.isEnabled(Feature.QUOTE_FIELD_EXPR_RESULT))  {	  if(in    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	152	None	replace
1481	[BUG]  [BUGGY]  if  (in.lookAhead()  <  =  CR)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  <  =  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  <  =  CR)  {	  if    (in.lookAhead()    >    CR)    {    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
1482	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    =    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	48	replace
1483	[BUG]  [BUGGY]  if  (c  >=  LF  ||  in.lookAhead()  ==  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  LF  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  LF  ||  in.lookAhead()  ==  CR)  {	  if    (c    <    =    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	48	replace
1484	[BUG]  [BUGGY]  in.defaultReader().setEndOfLine(c);  [CE]  illegal  start  of  type  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader().setEndOfLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader().setEndOfLine(c);	  in.defaultReader().endOfLine();    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1485	[BUG]  [BUGGY]  Delimiter  commmentStart  =  getCommentStart();  [CE]  illegal  start  of  type  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Delimiter  commmentStart  =  getCommentStart();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Delimiter  commmentStart  =  getCommentStart();	  char    commmentStart    =    getCommentStart();    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
1486	[BUG]  [BUGGY]  Boolean  commmentStart  =  readEndOfLine(c);  [CE]  illegal  start  of  type  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Boolean  commmentStart  =  readEndOfLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Boolean  commmentStart  =  readEndOfLine(c);	  char    commmentStart    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1487	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in  ==  null  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in  ==  null  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	199	7	replace
1488	[BUG]  [BUGGY]  if  (in  ==  null  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in  ==  null  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in  ==  null  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	199	7	replace
1489	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r')  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  'n'  ||  c  >  'r')  {  [BUGGY]    null)  {  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  'n'  ||  c  >  'r')  {	  if(in!=    null)    {    if(in    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1490	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  if(in.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
1491	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.lookAhead()  ==  0)  {	  if(in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	47	7	replace
1492	[BUG]  [BUGGY]  if(in!=  null  &&  in.lookAhead()  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.lookAhead()  ==  0)  {	  if(in.lookAhead()    ==    0)    {    	compilable	  [FE]  AssertionError  	47	7	replace
1493	[BUG]  [BUGGY]  if(in.readEndOfLine()  ==  0)  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.readEndOfLine()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.readEndOfLine()  ==  0)  {	  if(in.lookAhead()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
1494	[BUG]  [BUGGY]  if  (in  ==  DISABLED  &&  in.read()  ==  CR)  {  [CE]  incomparable  types:  ExtendedBufferedReader  and  char  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in  ==  DISABLED  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in  ==  DISABLED  &&  in.read()  ==  CR)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    CR)    {    	non-compiled	[CE]  incomparable  types:  ExtendedBufferedReader  and  char	111	None	replace
1495	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in!=  null  &&  in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in!=  null  &&  in.read()  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	111	48	replace
1496	[BUG]  [BUGGY]  if  (in!=  null  &&  in.read()  ==  DISABLED)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in!=  null  &&  in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in!=  null  &&  in.read()  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.read()    ==    CR)    {    	compilable	  [FE]  AssertionError  	111	48	replace
1497	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  ||  in.read()  ==  DISABLED)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	48	replace
1498	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  ==  DISABLED)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.read()  ==  DISABLED)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	160	48	replace
1499	[BUG]  [BUGGY]  if(c  <  DISABLED  &&  out.lookAhead()  >  LF)  {  [CE]  cannot  find  symbol  out  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  &&  out.lookAhead()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  &&  out.lookAhead()  >  LF)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    out.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  out	218	None	replace
1500	[BUG]  [BUGGY]  if(c  <  DISABLED  &&  out.lookAhead()  ==  0)  {  [CE]  cannot  find  symbol  out  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  &&  out.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  &&  out.lookAhead()  ==  0)  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    out.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  out	218	None	replace
1501	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  SMALL_LINES)  {  [CE]  cannot  find  symbol  SMALL_LINES  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  SMALL_LINES)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  >  SMALL_LINES)  {	  if(in!=    null    &&    in.read()    >    c)    {    	non-compiled	[CE]  cannot  find  symbol  SMALL_LINES	254	None	replace
1502	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  DISABLED  &&  in.read()  ==  0)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	48	replace
1503	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  &&  in.read()  ==  0)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	267	48	replace
1504	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.getChars()  ==  0)  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.getChars()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  &&  in.getChars()  ==  0)  {	  if(in.read()    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  cannot  find  symbol	267	None	replace
1505	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  (in.lookAhead()  ==  -1)  {  [CE]  class,  interface,  or  enum  expected  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  (in.lookAhead()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    if  (in.lookAhead()  ==  -1)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	233	None	add
1506	[BUG]  [BUGGY]  double  commmentStart  =  in.read();  [CE]  illegal  start  of  type  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  double  commmentStart  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	double  commmentStart  =  in.read();	  char    commmentStart    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
1507	[BUG]  [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  If  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  If  (c  >=  DISABLED  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    >=    DISABLED    &&    c    ==    DISABLED)    {    If  (c  >=  DISABLED  &&  c  ==  DISABLED)  {	  	non-compiled	[CE]  ';'  expected	235	None	add
1508	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(Integer.lookAhead()  ==  c  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(Integer.lookAhead()  ==  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    if(Integer.lookAhead()  ==  c  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	add
1509	[BUG]  [BUGGY]  if(c  =='{  ')  {  [CE]  unclosed  character  literal  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  =='{  ')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  =='{  ')  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    If    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  unclosed  character  literal	239	None	replace
1510	[BUG]  [BUGGY]  if(c  =='<  ')  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  =='<  ')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  =='<  ')  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    If    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  unclosed  character  literal	239	None	replace
1511	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    If    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  illegal  start  of  expression	239	None	replace
1512	[BUG]  [BUGGY]  if(in.read()  ==  LF)  {  if(Integer.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  LF)  {  if(Integer.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    LF)    {    if(Integer.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	171	None	add
1513	[BUG]  [BUGGY]  if(in.read()  ==  c)  {  if(in.read()  ==  ')'  [CE]  ')'  expected  [FE]        IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c)  {  if(in.read()  ==  ')'  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c)  {  if(in.read()  ==  ')'	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()    {    c)    {    	non-compiled	[CE]  ')'  expected	249	None	replace
1514	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  >=  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  ((  c  >=  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    	compilable	  [FE]  AssertionError  	223	7	replace
1515	[BUG]  [BUGGY]  if  ((  c  >=  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  >=  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  ((  c  >=  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {	  if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    	compilable	  [FE]  AssertionError  	223	7	replace
1516	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  >=  LF)  {	  if    (in.lookAhead()!=    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	185	47	replace
1517	[BUG]  [BUGGY]  if  (in.lookAhead()  >=  LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  >=  LF)  {	  if    (in.lookAhead()!=    LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	185	47	replace
1518	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(in.lookAhead()  ==  CR  ||  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(in.lookAhead()  ==  CR  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(in.lookAhead()  ==  CR  ||  in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
1519	[BUG]  [BUGGY]  if(in.read()  ==  commmentStart)  {  if(in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  commmentStart)  {  if(in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  commmentStart)  {  if(in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
1520	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  out.read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  out.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  out.read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	add
1521	[BUG]  [BUGGY]  if(in!=  null)  {  If(in.lookAhead()  ==  c)  {  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  If(in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  If(in.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    If(in.lookAhead()    ==    c)    {    	non-compiled	[CE]  ';'  expected	32	None	replace
1522	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()!=  c  &&  in.read()  >  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	55	50	replace
1523	[BUG]  [BUGGY]  if(in.lookAhead()!=  c  &&  in.read()  >  0)  {  [FE]  AssertionError  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=  c  &&  in.read()  >  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	55	50	replace
1524	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()  ==  c  &&  in.read()  >=  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	55	20	replace
1525	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >=  0)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ==  c  &&  in.read()  >=  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	55	20	replace
1526	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  >=  DISABLED  &&  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	add
1527	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  out.read()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  LF)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  out.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    LF)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  out.read()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	add
1528	[BUG]  [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  (out.lookAhead()  >  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  (out.lookAhead()  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    >    CR)    {    if  (out.lookAhead()  >  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	213	None	add
1529	[BUG]  [BUGGY]  if  (in.lookAhead()  >  CR)  {  If  (in.lookAhead()  >  CR)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  CR)  {  If  (in.lookAhead()  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    >    CR)    {    If  (in.lookAhead()  >  CR)  {	  	non-compiled	[CE]  ';'  expected	213	None	add
1530	[BUG]  [BUGGY]  if(in!=  null  &&  in.shouldEmptyLine())  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.shouldEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.shouldEmptyLine())  {	  if(in!=    null    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
1531	[BUG]  [BUGGY]  if(in!=  null  &&  in.getChars())  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.getChars())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.getChars())  {	  if(in!=    null    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
1532	[BUG]  [BUGGY]  if(in!=  null  ||  in.shouldEmptyLine())  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.shouldEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  ||  in.shouldEmptyLine())  {	  if(in!=    null    ||    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1533	[BUG]  [BUGGY]  if(in  ==  null)  {  if  (in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if  (in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  if  (in.lookAhead()  ==  0)  {	  if    (in.lookAhead()    ==    CR)    {    if    (in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
1534	[BUG]  [BUGGY]  if(in!=  null)  {  if  (in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if  (in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if  (in.lookAhead()  ==  CR)  {	  if    (in.lookAhead()    ==    CR)    {    if    (in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
1535	[BUG]  [BUGGY]  if(in!=  null)  {  if(!Integer.isLetter(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(!Integer.isLetter(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(!Integer.isLetter(c))  {	  if(in!=    null)    {    if(Integer.isLetter(c))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	231	None	replace
1536	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.isLetter(c)||  Integer.isInfinite(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.isLetter(c)||  Integer.isInfinite(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.isLetter(c)||  Integer.isInfinite(c))  {	  if(in!=    null)    {    if(Integer.isLetter(c))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	231	None	replace
1537	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.isLetter(c)&&  Integer.isMoreEmpty(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.isLetter(c)&&  Integer.isMoreEmpty(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.isLetter(c)&&  Integer.isMoreEmpty(c))  {	  if(in!=    null)    {    if(Integer.isLetter(c))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	231	None	replace
1538	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.isLetter(c)||  Integer.isLetter(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.isLetter(c)||  Integer.isLetter(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.isLetter(c)||  Integer.isLetter(c))  {	  if(in!=    null)    {    if(Integer.isLetter(c))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	231	None	replace
1539	[BUG]  [BUGGY]  if(in!=  null)  {  if(Integer.isLetter(c)&&  in.read()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(Integer.isLetter(c)&&  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(Integer.isLetter(c)&&  in.read()  ==  0)  {	  if(in!=    null)    {    if(Integer.isLetter(c))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	231	None	replace
1540	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()!=  LF  &&  in.lookAhead()  ==  CR)  {	  if    (in.lookAhead()!=    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	187	14	replace
1541	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF  &&  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()!=  LF  &&  in.lookAhead()  ==  CR)  {	  if    (in.lookAhead()!=    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	187	14	replace
1542	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in!=  null  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  ==  DISABLED  &&  in!=  null  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	2	7	replace
1543	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in!=  null  &&  in.lookAhead()  ==  LF)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in!=  null  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  &&  in!=  null  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	2	7	replace
1544	[BUG]  [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c  -  1);  [CE]  illegal  start  of  type  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c  -  1);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  getFormat().readEndOfLine(c  -  1);	  Integer    in    =    getFormat().readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	201	None	replace
1545	[BUG]  [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  COMMENT_START);  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  COMMENT_START);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  getFormat().readEndOfLine(c,  COMMENT_START);	  Integer    in    =    getFormat().readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	201	None	replace
1546	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  if  (c  <  LF  ||  in.Read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.read()  ==  CR)  {  if  (c  <  LF  ||  in.Read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.read()    ==    CR)    {    if  (c  <  LF  ||  in.Read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	add
1547	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (C  <  in.read()  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (C  <  in.read()  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    if  (C  <  in.read()  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	add
1548	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (c  <  out.read()  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  in.lookAhead()  ==  CR)  {  if  (c  <  out.read()  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    if  (c  <  out.read()  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	add
1549	[BUG]  [BUGGY]  in.defaultReader().writeLine(c  +  DISABLED);  [CE]  illegal  start  of  type  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader().writeLine(c  +  DISABLED);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader().writeLine(c  +  DISABLED);	  in.defaultReader().writeLine(c);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1550	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  LF  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >=  LF  &&  in.lookAhead()  ==  CR)  {	  if    (c    <    =    LF    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	260	14	replace
1551	[BUG]  [BUGGY]  if  (c  >=  LF  &&  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >=  LF  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >=  LF  &&  in.lookAhead()  ==  CR)  {	  if    (c    <    =    LF    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	260	14	replace
1552	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  LF  &&  in.lookAhead()  ==  CR)  {	  if    (c    <    =    LF    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	260	7	replace
1553	[BUG]  [BUGGY]  if  (c  <  LF  &&  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  LF  &&  in.lookAhead()  ==  CR)  {	  if    (c    <    =    LF    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	260	7	replace
1554	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  If  (c  <  DISABLED  ||  c  >=  DISABLED)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >=  DISABLED)  {  If  (c  <  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >=    DISABLED)    {    If  (c  <  DISABLED  ||  c  >=  DISABLED)  {	  	non-compiled	[CE]  ';'  expected	176	None	add
1555	[BUG]  [BUGGY]  if(in  ==  null)  {  if(Integer.MAX_VALUE!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(Integer.MAX_VALUE!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  if(Integer.MAX_VALUE!=  null)  {	  if(in!=    null)    {    if(Integer.MAX_VALUE!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
1556	[BUG]  [BUGGY]  if(c  <  DISABLED)  {  if(Integer.MAX_VALUE!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED)  {  if(Integer.MAX_VALUE!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED)  {  if(Integer.MAX_VALUE!=  null)  {	  if(in!=    null)    {    if(Integer.MAX_VALUE!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
1557	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(Integer.MAX_VALUE!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n')  {  if(Integer.MAX_VALUE!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'n')  {  if(Integer.MAX_VALUE!=  null)  {	  if(in!=    null)    {    if(Integer.MAX_VALUE!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
1558	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	12	7	replace
1559	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  &&  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	compilable	  [FE]  AssertionError  	12	7	replace
1560	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  If(in!=  null  &&  in.read()  >  0)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  If(in!=  null  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    0)    {    If(in!=  null  &&  in.read()  >  0)  {	  	non-compiled	[CE]  ';'  expected	216	None	add
1561	[BUG]  [BUGGY]  if(in!=  null)  {  if(in.lookAhead()  >=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]            IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if(in.lookAhead()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if(in.lookAhead()  >=  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()    >=    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
1562	[BUG]  [BUGGY]  if(c  ==  in.read())  {  if(in.lookAhead()  >=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]              IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  in.read())  {  if(in.lookAhead()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  in.read())  {  if(in.lookAhead()  >=  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()    >=    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
1563	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in.lookAhead()  >=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]                IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in.lookAhead()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  if(in.lookAhead()  >=  c)  {	  if(in.lookAhead()    ==    c)    {    if(in.lookAhead()    >=    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
1564	[BUG]  [BUGGY]  if(c  ==  'ufffd'  ||  c  ==  'ufffd')  {  [CE]  unclosed  character  literal  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'ufffd'  ||  c  ==  'ufffd')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'ufffd'  ||  c  ==  'ufffd')  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  unclosed  character  literal	157	None	replace
1565	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  'n'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  >=  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	157	31	replace
1566	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  DISABLED)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  >=  'n'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  >=  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	157	31	replace
1567	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  'n'  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  <  'n'  ||  c  >  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	157	48	replace
1568	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  DISABLED)  {  [FE]  AssertionError  [FE]        Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  'n'  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  'n'  ||  c  >  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	157	48	replace
1569	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  If  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  If  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    If  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  ';'  expected	106	None	add
1570	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  DISABLED  &&  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	8	7	replace
1571	[BUG]  [BUGGY]  if  (c  <  DISABLED  &&  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  [FE]  AssertionError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  &&  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  &&  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	8	7	replace
1572	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  commmentEnd)  {  [CE]  cannot  find  symbol  commmentEnd  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  commmentEnd)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.read()  ==  commmentEnd)  {	  if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  commmentEnd	8	None	replace
1573	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  &&  out.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  if  (c  ==  DISABLED  &&  out.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    CR)    {    if  (c  ==  DISABLED  &&  out.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	add
1574	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(in!=  null  &&  in.Read()  >  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(in!=  null  &&  in.Read()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    c)    {    if(in!=  null  &&  in.Read()  >  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	253	None	add
1575	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(in  >>  null  &&  in.read()  >  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  c)  {  if(in  >>  null  &&  in.read()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    >    c)    {    if(in  >>  null  &&  in.read()  >  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	253	None	add
1576	[BUG]  [BUGGY]  if(in!=  null)  {  if  (Integer.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null)  {  if  (Integer.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null)  {  if  (Integer.lookAhead()  ==  0)  {	  if    (in.lookAhead()    ==    CR)    {    if    (Integer.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
1577	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  if(Integer.lookAhead(c)  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  if(Integer.lookAhead(c)  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  0)  {  if(Integer.lookAhead(c)  ==  0)  {	  if    (in.lookAhead()    ==    CR)    {    if    (Integer.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
1578	[BUG]  [BUGGY]  if(in  ==  null)  {  if  (Integer.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if  (Integer.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  if  (Integer.lookAhead()  ==  0)  {	  if    (in.lookAhead()    ==    CR)    {    if    (Integer.lookAhead()    ==    CR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
1579	[BUG]  [BUGGY]  if(in  ==  null)  {  if(c  ==  in.lookAhead())  {  [CE]  class,  interface,  or  enum  expected  [FE]                IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(c  ==  in.lookAhead())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null)  {  if(c  ==  in.lookAhead())  {	  if(in.lookAhead()    ==    c)    {    if(c    ==    in.lookAhead())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
1580	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.lookAhead()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.lookAhead()!=  c)  {	  if(in.lookAhead()!=    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	48	replace
1581	[BUG]  [BUGGY]  if(in!=  null  &&  in.lookAhead()!=  c)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.lookAhead()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.lookAhead()!=  c)  {	  if(in.lookAhead()!=    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	206	48	replace
1582	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  DISABLED)  {	  if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	117	48	replace
1583	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED)  {	  if    (c    <    DISABLED    &&    in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	117	48	replace
1584	[BUG]  [BUGGY]  if(c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  =  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  =  DISABLED)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    if    (c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1585	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    If    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	239	22	replace
1586	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    If    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	239	22	replace
1587	[BUG]  [BUGGY]  if(in  >=  null  &&  c  ==  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  >=  null  &&  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  >=  null  &&  c  ==  DISABLED)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	160	None	replace
1588	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  c  >=  DISABLED)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	160	7	replace
1589	[BUG]  [BUGGY]  if(in!=  null  &&  c  >=  DISABLED)  {  [FE]  AssertionError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  c  >=  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  c  >=  DISABLED)  {	  if(in!=    null    ||    c    ==    DISABLED)    {    	compilable	  [FE]  AssertionError  	160	7	replace
1590	[BUG]  [BUGGY]  if(in.lookAhead()!=  CR)  {  if(out.lookAhead()!=  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  CR)  {  if(out.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    CR)    {    if(out.lookAhead()!=  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	add
1591	[BUG]  [BUGGY]  if(in.readLine()  ==  c)  {  if(c  ==  in.readLine())  {  [CE]  class,  interface,  or  enum  expected  [FE]                IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.readLine()  ==  c)  {  if(c  ==  in.readLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.readLine()  ==  c)  {  if(c  ==  in.readLine())  {	  if(in.lookAhead()    ==    c)    {    if(c    ==    in.lookAhead())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
1592	[BUG]  [BUGGY]  if(in.read()  ==  c)  {  if(c  ==  in.read()  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c)  {  if(c  ==  in.read()  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c)  {  if(c  ==  in.read()  ||  c  ==  DISABLED)  {	  if(in.lookAhead()    ==    c)    {    if(c    ==    in.lookAhead())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
1593	[BUG]  [BUGGY]  if(in.lookAhead()  >=  c)  {  if(out.lookAhead()  >=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  c)  {  if(out.lookAhead()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    c)    {    if(out.lookAhead()  >=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	256	None	add
1594	[BUG]  [BUGGY]  in.read().writeLine(c);  [CE]  illegal  start  of  type  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.read().writeLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.read().writeLine(c);	  in.defaultReader().writeLine(c);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1595	[BUG]  [BUGGY]  in.defaultReader().writeLine(c  &  DISABLED);  [CE]  illegal  start  of  type  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.defaultReader().writeLine(c  &  DISABLED);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.defaultReader().writeLine(c  &  DISABLED);	  in.defaultReader().writeLine(c);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1596	[BUG]  [BUGGY]  if(in  >=  null  &&  in.isEmptyLine())  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  >=  null  &&  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  >=  null  &&  in.isEmptyLine())  {	  if(in!=    null    ||    in.isEmptyLine())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	155	None	replace
1597	[BUG]  [BUGGY]  if(in  >>  null  &&  in.isEmptyLine())  {  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  >>  null  &&  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  >>  null  &&  in.isEmptyLine())  {	  if(in!=    null    ||    in.isEmptyLine())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	155	None	replace
1598	[BUG]  [BUGGY]  if(in!=  null  &&  out.isEmptyLine())  {  [CE]  cannot  find  symbol  out  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  out.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  out.isEmptyLine())  {	  if(in!=    null    ||    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol  out	155	None	replace
1599	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    out.lookAhead()    ==    LF)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	218	22	replace
1600	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    out.lookAhead()    ==    LF)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	218	22	replace
1601	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    out.lookAhead()    ==    LF)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	218	22	replace
1602	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if    (c    <    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    <    DISABLED    &&    out.lookAhead()    ==    LF)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	218	22	replace
1603	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  >  LF)  {	  if(in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	172	49	replace
1604	[BUG]  [BUGGY]  if(in.read()  >  LF)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  >  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  >  LF)  {	  if(in.read()    ==    LF)    {    	compilable	  [FE]  AssertionError  	172	49	replace
1605	[BUG]  [BUGGY]  if(in.read()  ==  LC)  {  [CE]  cannot  find  symbol  LC  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  LC)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  LC)  {	  if(in.read()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  LC	172	None	replace
1606	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (c  <  DISABLED  ||  c  {  DISABLED)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (c  <  DISABLED  ||  c  {  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    ==    DISABLED)    {    if  (c  <  DISABLED  ||  c  {  DISABLED)  {	  	non-compiled	[CE]  ')'  expected	178	None	add
1607	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (C  <  DISABLED  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  ==  DISABLED)  {  if  (C  <  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    ==    DISABLED)    {    if  (C  <  DISABLED  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	178	None	add
1608	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  ||  in.isEmptyLine())  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  ||  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  ||  in.isEmptyLine())  {	  if(in.read()    ==    c    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
1609	[BUG]  [BUGGY]  if(in.read()  ==  c)  {  if(c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c)  {  if(c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c)  {  if(c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {	  if    (in.lookAhead()    ==    CR    ||    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
1610	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  in.read()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  &&  in.read()!=  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  AssertionError  	131	7	replace
1611	[BUG]  [BUGGY]  if(c  ==  DISABLED  &&  in.read()!=  LF)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  in.read()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  &&  in.read()!=  LF)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  AssertionError  	131	7	replace
1612	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  FR  &&  in.lookAhead()  ==  LF)  {  [CE]  cannot  find  symbol  FR  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  FR  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  FR  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    FR    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  FR	269	None	replace
1613	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  LF  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  ||  c  ==  LF  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    FR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	269	8	replace
1614	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  LF  &&  in.lookAhead()  ==  LF)  {  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  LF  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  ||  c  ==  LF  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    FR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	269	8	replace
1615	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  CR  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  ||  c  ==  CR  ||  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    FR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	269	29	replace
1616	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  CR  ||  in.lookAhead()  ==  LF)  {  [FE]  AssertionError  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  CR  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  ||  c  ==  CR  ||  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    FR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	269	29	replace
1617	[BUG]  [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(c!=  null  ||  c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  c  ==  DISABLED)  {  if(c!=  null  ||  c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    c    ==    DISABLED)    {    if(c!=  null  ||  c  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	add
1618	[BUG]  [BUGGY]  if(in.lookAhead()!=  c)  {  if(Integer.lookAhead()!=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  c)  {  if(Integer.lookAhead()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    c)    {    if(Integer.lookAhead()!=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	205	None	add
1619	[BUG]  [BUGGY]  if(in.lookAhead()!=  c)  {  if(out.lookAhead()!=  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  c)  {  if(out.lookAhead()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=    c)    {    if(out.lookAhead()!=  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	205	None	add
1620	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentEnd)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentEnd)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.lookAhead()    ==    commmentStart)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  commmentEnd)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
1621	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentEnd)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentEnd)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  commmentEnd)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	add
1622	[BUG]  [BUGGY]  if(in  >=  null  &&  in.read()  ==  c)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  >=  null  &&  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  >=  null  &&  in.read()  ==  c)  {	  if(in!=    null    ||    in.read()    ==    c)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	154	None	replace
1623	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  DISABLED  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c!=  DISABLED  ||  in.read()  ==  c)  {	  if(in!=    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	154	48	replace
1624	[BUG]  [BUGGY]  if(c!=  DISABLED  ||  in.read()  ==  c)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c!=  DISABLED  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c!=  DISABLED  ||  in.read()  ==  c)  {	  if(in!=    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	154	48	replace
1625	[BUG]  [BUGGY]  in.seek(c).endOfLine();  [CE]  illegal  start  of  type  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.seek(c).endOfLine();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.seek(c).endOfLine();	  in.defaultReader().endOfLine();    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1626	[BUG]  [BUGGY]  in.next().endOfLine();  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.next().endOfLine();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.next().endOfLine();	  in.defaultReader().endOfLine();    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1627	[BUG]  [BUGGY]  if  (in.read()  ==  LC  ||  in.read()  ==  LF)  {  [CE]  cannot  find  symbol  LC  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  LC  ||  in.read()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  LC  ||  in.read()  ==  LF)  {	  if    (in.read()    ==    CR    ||    in.read()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  LC	82	None	replace
1628	[BUG]  [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  '-');  [CE]  illegal  start  of  type  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  getFormat().readEndOfLine(c,  '-');  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  getFormat().readEndOfLine(c,  '-');	  Integer    in    =    getFormat().readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	201	None	replace
1629	[BUG]  [BUGGY]  Integer  in  =  getFormat().readLine(c);  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  getFormat().readLine(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  getFormat().readLine(c);	  Integer    in    =    getFormat().readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	201	None	replace
1630	[BUG]  [BUGGY]  Boolean  CR  =  in.read();  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Boolean  CR  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Boolean  CR  =  in.read();	  char    CR    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
1631	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (C  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  if  (C  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    ||    in.lookAhead()    ==    LF)    {    if  (C  ==  DISABLED  ||  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	add
1632	[BUG]  [BUGGY]  if(in!=  null  &&  Integer.parseInt(c))  {  [CE]  no  suitable  method  found  for  parseInt(int)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  Integer.parseInt(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  Integer.parseInt(c))  {	  if(in!=    null)    {    if(Integer.parseInt(c))    {    	non-compiled	[CE]  no  suitable  method  found  for  parseInt(int)	228	None	replace
1633	[BUG]  [BUGGY]  if(in!=  null  &&  in.isEmpty())  {  if(Integer.parseInt(c))  {  [CE]  class,  interface,  or  enum  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.isEmpty())  {  if(Integer.parseInt(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.isEmpty())  {  if(Integer.parseInt(c))  {	  if(in!=    null)    {    if(Integer.parseInt(c))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
1634	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  Integer.parseInt(c))  {  [CE]  no  suitable  method  found  for  parseInt(int)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  Integer.parseInt(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  Integer.parseInt(c))  {	  if(in!=    null)    {    if(Integer.parseInt(c))    {    	non-compiled	[CE]  no  suitable  method  found  for  parseInt(int)	228	None	replace
1635	[BUG]  [BUGGY]  ComponentStart  commmentStart  =  getCommentStart();  [CE]  illegal  start  of  type  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  ComponentStart  commmentStart  =  getCommentStart();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	ComponentStart  commmentStart  =  getCommentStart();	  char    commmentStart    =    getCommentStart();    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
1636	[BUG]  [BUGGY]  if(in!=  null  &&  in.available()  >  c)  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.available()  >  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.available()  >  c)  {	  if(in!=    null    &&    in.read()    >=    c)    {    	non-compiled	[CE]  cannot  find  symbol	251	None	replace
1637	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  ((  in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR))  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  ((  in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF    ||    in.lookAhead()    ==    CR)    {    if  ((  in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	add
1638	[BUG]  [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (c!=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  LF  ||  in.lookAhead()  ==  CR)  {  if  (c!=  DISABLED  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    LF    ||    in.lookAhead()    ==    CR)    {    if  (c!=  DISABLED  ||  in.lookAhead()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	add
1639	[BUG]  [BUGGY]  if(in!=  null  &&  in.getChars().length  >  0)  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.getChars().length  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.getChars().length  >  0)  {	  if(in!=    null    &&    in.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
1640	[BUG]  [BUGGY]  if(in!=  null  &&  in.isBound())  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.isBound())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.isBound())  {	  if(in!=    null    &&    in.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
1641	[BUG]  [BUGGY]  If  (c  ==  ';')  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  If  (c  ==  ';')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	If  (c  ==  ';')  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    If    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    	non-compiled	[CE]  ';'  expected	141	None	replace
1642	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  ==  0  ||  in.lookAhead()  >  0)  {	  if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	47	replace
1643	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  ==  0  ||  in.lookAhead()  >  0)  {	  if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	47	replace
1644	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  0  ||  in.lookAhead()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  >  0  ||  in.lookAhead()  >  0)  {	  if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	47	replace
1645	[BUG]  [BUGGY]  if  (in.lookAhead()  >  0  ||  in.lookAhead()  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  0  ||  in.lookAhead()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  >  0  ||  in.lookAhead()  >  0)  {	  if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	47	replace
1646	[BUG]  [BUGGY]  If  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  If  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	If  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    If    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
1647	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  READ  &&  in.lookAhead()  ==  LF)  {  [CE]  cannot  find  symbol  READ  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  READ  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  READ  &&  in.lookAhead()  ==  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    READ    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  READ	221	None	replace
1648	[BUG]  [BUGGY]  if(in.read()  <  =  c)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  <  =  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  <  =  c)  {	  if(in.read()    ==    c)    {    if(in.read()    >=    c)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1649	[BUG]  [BUGGY]  if(in.readLine()  >=  c)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.readLine()  >=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.readLine()  >=  c)  {	  if(in.read()    ==    c)    {    if(in.read()    >=    c)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	43	None	replace
1650	[BUG]  [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  ((  in.lookAhead()  >  CR)||(c  <  DISABLED  ||  c  >  DISABLED))  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  ((  in.lookAhead()  >  CR)||(c  <  DISABLED  ||  c  >  DISABLED))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    >    CR)    {    if  ((  in.lookAhead()  >  CR)||(c  <  DISABLED  ||  c  >  DISABLED))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	213	None	add
1651	[BUG]  [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  ((  in.lookAhead()  >  CR)||(c  ==  DISABLED  ||  c  ==  DISABLED))  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  ((  in.lookAhead()  >  CR)||(c  ==  DISABLED  ||  c  ==  DISABLED))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    >    CR)    {    if  ((  in.lookAhead()  >  CR)||(c  ==  DISABLED  ||  c  ==  DISABLED))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	213	None	add
1652	[BUG]  [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  ((  in.lookAhead()  >  CR)||(in.lookAhead()  >  CR))  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  >  CR)  {  if  ((  in.lookAhead()  >  CR)||(in.lookAhead()  >  CR))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    >    CR)    {    if  ((  in.lookAhead()  >  CR)||(in.lookAhead()  >  CR))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	213	None	add
1653	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  c  ||  in.read()  ==  c)  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	208	50	replace
1654	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  c)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  ||  in.read()  ==  c)  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	208	50	replace
1655	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]          AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	208	None	replace
1656	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	208	None	replace
1657	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  Integer.read()  ==  c)  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  Integer.read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  ||  Integer.read()  ==  c)  {	  if(in.read()    ==    c)    {    if(Integer.read()    ==    c)    {    	non-compiled	[CE]  cannot  find  symbol	208	None	replace
1658	[BUG]  [BUGGY]  if(in!=  null  &&  Integer.isLetter(c))  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  Integer.isLetter(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  Integer.isLetter(c))  {	  if(in!=    null)    {    if(Integer.isLetter(c))    {    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
1659	[BUG]  [BUGGY]  if(in!=  null  &&  in.isEmpty())  {  If(in!=  null)  {  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.isEmpty())  {  If(in!=  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.isEmpty())  {  If(in!=  null)  {	  if(in!=    null)    {    If(in!=    null)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
1660	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  isEndOfFile(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  c  &&  isEndOfFile(c))  {	  if(in.read()    ==    c    &&    isEndOfLine(c))    {    	compilable	  [FE]  AssertionError  	175	48	replace
1661	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  isEndOfFile(c))  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  isEndOfFile(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  &&  isEndOfFile(c))  {	  if(in.read()    ==    c    &&    isEndOfLine(c))    {    	compilable	  [FE]  AssertionError  	175	48	replace
1662	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  isEndOfSurroundingSpace(c))  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  isEndOfSurroundingSpace(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  &&  isEndOfSurroundingSpace(c))  {	  if(in.read()    ==    c    &&    isEndOfLine(c))    {    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
1663	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  isEndOfLine(c))  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  isEndOfLine(c))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  &&  isEndOfLine(c))  {	  if(in.read()    ==    c    &&    isEndOfLine(c))    {    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
1664	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  ((  in.lookAhead()!=  0)||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0  ||  in.lookAhead()  ==  0)  {  if  ((  in.lookAhead()!=  0)||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0    ||    in.lookAhead()    ==    0)    {    if  ((  in.lookAhead()!=  0)||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	add
1665	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  >  DISABLED  ||  in.read()  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  >  DISABLED  ||  in.read()  >  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	50	replace
1666	[BUG]  [BUGGY]  if  (in.read()  >  DISABLED  ||  in.read()  >  DISABLED)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  >  DISABLED  ||  in.read()  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  >  DISABLED  ||  in.read()  >  DISABLED)  {	  if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	182	50	replace
1667	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  AssertionError  	35	7	replace
1668	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  LF)  {  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()!=  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()!=    LF)    {    	compilable	  [FE]  AssertionError  	35	7	replace
1669	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in  ==  null  ||  in.read()!=  c)  {	  if(in    ==    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	193	50	replace
1670	[BUG]  [BUGGY]  if(in  ==  null  ||  in.read()!=  c)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null  ||  in.read()!=  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  ==  null  ||  in.read()!=  c)  {	  if(in    ==    null    ||    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	193	50	replace
1671	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(in!=  null  &&  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  c)  {  if(in!=  null  &&  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    &&    in.read()    ==    c)    {    if(in!=  null  &&  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	add
1672	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  (Integer.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  [CE]  class,  interface,  or  enum  expected  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  if  (Integer.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    -1    ||    in.lookAhead()    ==    -1)    {    if  (Integer.lookAhead()  ==  -1  ||  in.lookAhead()  ==  -1)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	233	None	add
1673	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  ((  in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF))  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF)  {  if  ((  in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    CR    &&    in.lookAhead()    ==    LF)    {    if  ((  in.lookAhead()  ==  CR  &&  in.lookAhead()  ==  LF))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	add
1674	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  0  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  <  0  ||  c  >  DISABLED)  {	  if(c    ==    in.lookAhead())    {    	compilable	  [FE]  AssertionError  	53	7	replace
1675	[BUG]  [BUGGY]  if(c  <  0  ||  c  >  DISABLED)  {  [FE]  AssertionError  [FE]    IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  0  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  0  ||  c  >  DISABLED)  {	  if(c    ==    in.lookAhead())    {    	compilable	  [FE]  AssertionError  	53	7	replace
1676	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  >  0)  {	  if(c    ==    in.lookAhead())    {    	compilable	  [FE]  AssertionError  	53	49	replace
1677	[BUG]  [BUGGY]  if(in.read()  >  0)  {  [FE]  AssertionError  [FE]      IOException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  >  0)  {	  if(c    ==    in.lookAhead())    {    	compilable	  [FE]  AssertionError  	53	49	replace
1678	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(in.lookAhead()  ==  c)&&  in.read()  >  10)  {  [CE]  illegal  start  of  expression  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(in.lookAhead()  ==  c)&&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    if(in.lookAhead()  ==  c)&&  in.read()  >  10)  {	  	non-compiled	[CE]  illegal  start  of  expression	258	None	add
1679	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(in.lookAhead()  ==  CR  &&  in.read()  >  10)  {  [CE]  class,  interface,  or  enum  expected  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  10)  {  if(in.lookAhead()  ==  CR  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    if(in.lookAhead()  ==  CR  &&  in.read()  >  10)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	258	None	add
1680	[BUG]  [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (C  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    (entry  1)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  if  (C  <  LF  ||  in.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    LF    ||    in.lookAhead()    ==    DISABLED)    {    if  (C  <  LF  ||  in.lookAhead()  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
1681	[BUG]  [BUGGY]  if(in.isLineBreak())  {  if(Integer.lookAhead()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]        IOException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.isLineBreak())  {  if(Integer.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.isLineBreak())  {  if(Integer.lookAhead()  ==  c)  {	  if(in.lookAhead()    ==    c)    {    if(Integer.lookAhead()    ==    c)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	200	None	replace
1682	[BUG]  [BUGGY]  if(in.lookAhead()  ==  0)  {  if(Integer.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  0)  {  if(Integer.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    0)    {    if(Integer.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	add
1683	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  REA)  {  [CE]  cannot  find  symbol  REA  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  REA)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  ||  c  ==  REA)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    REA    &&    in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  REA	39	None	replace
1684	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.read()  ==  CR  ||  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.read()  ==  CR  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    ||    in.read()    ==    CR)    {    if(in.read()  ==  CR  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	add
1685	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.Read()  ==  c  ||  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  CR)  {  if(in.Read()  ==  c  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    ||    in.read()    ==    CR)    {    if(in.Read()  ==  c  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	add
1686	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  3)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()!=  3)  {	  if(in.lookAhead()!=    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	48	replace
1687	[BUG]  [BUGGY]  if(in.lookAhead()!=  3)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  3)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=  3)  {	  if(in.lookAhead()!=    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	48	replace
1688	[BUG]  [BUGGY]  double  c  =  in.read();  [CE]  illegal  start  of  type  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  double  c  =  in.read();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	double  c  =  in.read();	  char    c    =    in.read();    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
1689	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  LC)  {  [CE]  cannot  find  symbol  LC  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  LC)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  ==  LC)  {	  if(in!=    null    &&    in.read()    ==    c)    {    	non-compiled	[CE]  cannot  find  symbol  LC	191	None	replace
1690	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  'n')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.read()  ==  'n')  {	  if(in!=    null    &&    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	191	49	replace
1691	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  ==  'n')  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  ==  'n')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  ==  'n')  {	  if(in!=    null    &&    in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	191	49	replace
1692	[BUG]  [BUGGY]  double  commmentStart  =  in.read(c);  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  double  commmentStart  =  in.read(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	double  commmentStart  =  in.read(c);	  char    commmentStart    =    in.read(c);    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
1693	[BUG]  [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(in!=  null  ||  in.Read()  ==  c)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  ||  in.read()  ==  c)  {  if(in!=  null  ||  in.Read()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=    null    ||    in.read()    ==    c)    {    if(in!=  null  ||  in.Read()  ==  c)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	add
1694	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  LC)  {  [CE]  cannot  find  symbol  LC  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  LC)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  >  LC)  {	  if(in!=    null    &&    in.read()    >    c)    {    	non-compiled	[CE]  cannot  find  symbol  LC	254	None	replace
1695	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  in.read()  ||  c  >  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  <  in.read()  ||  c  >  in.read())  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	248	50	replace
1696	[BUG]  [BUGGY]  if(c  <  in.read()  ||  c  >  in.read())  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  in.read()  ||  c  >  in.read())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  in.read()  ||  c  >  in.read())  {	  if    (c    ==    LF    &&    in.lookAhead()    ==    CR)    {    if    (c    ==    LF    &&    out.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	248	50	replace
1697	[BUG]  [BUGGY]  if(in.lookAhead()  >=  0)  {  if(Integer.lookAhead()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  0)  {  if(Integer.lookAhead()  >=  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    >=    0)    {    if(Integer.lookAhead()  >=  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	203	None	add
1698	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  out.lookAhead()  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  DISABLED)  {  if  (c  ==  DISABLED  &&  out.lookAhead()  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    DISABLED)    {    if  (c  ==  DISABLED  &&  out.lookAhead()  ==  DISABLED)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	add
1699	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()  >=  c  &&  in.read()  >  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	55	49	replace
1700	[BUG]  [BUGGY]  if(in.lookAhead()  >=  c  &&  in.read()  >  0)  {  [FE]  AssertionError  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  >=  c  &&  in.read()  >  0)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	55	49	replace
1701	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  in.lookAhead()  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  <  DISABLED  ||  in.lookAhead()  >  CR)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    if    (c    <    LF    ||    in.lookAhead()    >=    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	48	replace
1702	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  in.lookAhead()  >  CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  <  DISABLED  ||  in.lookAhead()  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  <  DISABLED  ||  in.lookAhead()  >  CR)  {	  if    (c    <    LF    ||    in.lookAhead()    ==    CR)    {    if    (c    <    LF    ||    in.lookAhead()    >=    CR)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	48	replace
1703	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(in.read()  ==  CR  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(in.read()  ==  CR  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    &&    in.read()    >    0)    {    if(in.read()  ==  CR  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	242	None	add
1704	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(in.read()  ==  c  &&  in.Read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  >  0)  {  if(in.read()  ==  c  &&  in.Read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    c    &&    in.read()    >    0)    {    if(in.read()  ==  c  &&  in.Read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	242	None	add
1705	[BUG]  [BUGGY]  if(c  ==  DISABLED  &&  out.read()  ==  CR)  {  [CE]  cannot  find  symbol  out  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  &&  out.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  &&  out.read()  ==  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    &&    out.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  out	247	None	replace
1706	[BUG]  [BUGGY]  if(in!=  null  &&  Integer.MAX_VALUE  ==  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  Integer.MAX_VALUE  ==  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  Integer.MAX_VALUE  ==  null)  {	  if(in!=    null)    {    if(Integer.MAX_VALUE    ==    null)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	230	None	replace
1707	[BUG]  [BUGGY]  if(in!=  null  &&  Integer.MAX_VALUE  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  Integer.MAX_VALUE  <  =  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  Integer.MAX_VALUE  <  =  0)  {	  if(in!=    null)    {    if(Integer.MAX_VALUE    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	230	None	replace
1708	[BUG]  [BUGGY]  Integer  in  =  readEndOfLine(c,  LC);  [CE]  illegal  start  of  type  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  Integer  in  =  readEndOfLine(c,  LC);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	Integer  in  =  readEndOfLine(c,  LC);	  Integer    in    =    readEndOfLine(c);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
1709	[BUG]  [BUGGY]  [FE]  IOException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  c  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.lookAhead()  ==  c  ||  in.lookAhead()  ==  CR)  {	  if    (in.lookAhead()    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  IOException  	88	22	replace
1710	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  c  ||  in.lookAhead()  ==  CR)  {  [FE]  IOException  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  c  ||  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()  ==  c  ||  in.lookAhead()  ==  CR)  {	  if    (in.lookAhead()    ==    LF    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  IOException  	88	22	replace
1711	[BUG]  [BUGGY]  if  (in.lookAhead()!=  CC)  {  [CE]  cannot  find  symbol  CC  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  CC)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.lookAhead()!=  CC)  {	  if    (in.lookAhead()!=    LF)    {    	non-compiled	[CE]  cannot  find  symbol  CC	185	None	replace
1712	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c  >=  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c  >=  DISABLED  ||  c  >  DISABLED  &&  in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	add
1713	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (in.read()  ==  CR  ||  in.lookAhead()  ==  c)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	48	replace
1714	[BUG]  [BUGGY]  if  (in.read()  ==  CR  ||  in.lookAhead()  ==  c)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  ==  CR  ||  in.lookAhead()  ==  c)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (in.read()  ==  CR  ||  in.lookAhead()  ==  c)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	48	replace
1715	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  c  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  <  in.read()  ||  c  >  CR)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	49	replace
1716	[BUG]  [BUGGY]  if  (c  <  in.read()  ||  c  >  CR)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  in.read()  ||  c  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  <  in.read()  ||  c  >  CR)  {	  if    (c    <    in.read()    ||    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	23	49	replace
1717	[BUG]  [BUGGY]  if(in!=  null  &&  in.isEndOfLine())  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.isEndOfLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.isEndOfLine())  {	  if(in!=    null    &&    in.isEmptyLine())    {    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
1718	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)||(c  ==  DISABLED  ||  c  ==  DISABLED))  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)||(c  ==  DISABLED  ||  c  ==  DISABLED))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0)    {    if  ((  in.lookAhead()  >=  0)||(c  ==  DISABLED  ||  c  ==  DISABLED))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	add
1719	[BUG]  [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)||(c  <  DISABLED  ||  c  >  DISABLED))  {  [CE]  class,  interface,  or  enum  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()!=  0)  {  if  ((  in.lookAhead()  >=  0)||(c  <  DISABLED  ||  c  >  DISABLED))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()!=    0)    {    if  ((  in.lookAhead()  >=  0)||(c  <  DISABLED  ||  c  >  DISABLED))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	add
1720	[BUG]  [BUGGY]  if(in!=  null  &&  out.available()  >  0)  {  [CE]  cannot  find  symbol  out  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  out.available()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  out.available()  >  0)  {	  if(in!=    null    &&    in.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  out	252	None	replace
1721	[BUG]  [BUGGY]  if(in!=  null  &&  in.length  >  0)  {  [CE]  cannot  find  symbol  length  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.length  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.length  >  0)  {	  if(in!=    null    &&    in.available()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	252	None	replace
1722	[BUG]  [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  if  (C  <  0  ||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  0  ||  in.lookAhead()  ==  0)  {  if  (C  <  0  ||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    0    ||    in.lookAhead()    ==    0)    {    if  (C  <  0  ||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	add
1723	[BUG]  [BUGGY]  if(in.lookAhead()  ==  CC)  {  [CE]  cannot  find  symbol  CC  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  CC)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  ==  CC)  {	  if(in.lookAhead()    ==    LF)    {    	non-compiled	[CE]  cannot  find  symbol  CC	51	None	replace
1724	[BUG]  [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  if  (c  >  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  <  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  if  (c  >  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    <    DISABLED    ||    c    >    DISABLED    ||    c    >    CR)    {    if  (c  >  DISABLED  ||  c  >  DISABLED  ||  c  >  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	261	None	add
1725	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c  >  DISABLED  ||  c  >  DISABLED)  {	  if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	227	7	replace
1726	[BUG]  [BUGGY]  if  (c  >  DISABLED  ||  c  >  DISABLED)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  >  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  >  DISABLED  ||  c  >  DISABLED)  {	  if    (c    >=    DISABLED    ||    c    >    DISABLED)    {    	compilable	  [FE]  AssertionError  	227	7	replace
1727	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(in.lookAhead()  ==  c)&&  in.read()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(in.lookAhead()  ==  c)&&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    if(in.lookAhead()  ==  c)&&  in.read()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
1728	[BUG]  [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(in.lookAhead()  ==  CR  &&  in.read()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  c  &&  in.read()  >  0)  {  if(in.lookAhead()  ==  CR  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    c    &&    in.read()    >    0)    {    if(in.lookAhead()  ==  CR  &&  in.read()  >  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	add
1729	[BUG]  [BUGGY]  char  c  =  in.skipChildren();  [CE]  illegal  start  of  type  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  char  c  =  in.skipChildren();  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	char  c  =  in.skipChildren();	  in.skipChildren();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
1730	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  DISABLED  &&  in.lookAhead()!=  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    	compilable	  [FE]  AssertionError  	115	48	replace
1731	[BUG]  [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  DISABLED  &&  in.lookAhead()!=  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  DISABLED  &&  in.lookAhead()!=  CR)  {	  if    (c    ==    DISABLED    &&    in.lookAhead()!=    CR)    {    	compilable	  [FE]  AssertionError  	115	48	replace
1732	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  out.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  in.lookAhead()  ==  LF)  {  if  (c!=  DISABLED  &&  out.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c!=    DISABLED    &&    in.lookAhead()    ==    LF)    {    if  (c!=  DISABLED  &&  out.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	add
1733	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  c  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()!=  c  &&  in.read()  >  10)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  AssertionError  	259	49	replace
1734	[BUG]  [BUGGY]  if(in.lookAhead()!=  c  &&  in.read()  >  10)  {  [FE]  AssertionError  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()!=  c  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()!=  c  &&  in.read()  >  10)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  AssertionError  	259	49	replace
1735	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  c  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.lookAhead()  >=  c  &&  in.read()  >  10)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  AssertionError  	259	49	replace
1736	[BUG]  [BUGGY]  if(in.lookAhead()  >=  c  &&  in.read()  >  10)  {  [FE]  AssertionError  [FE]      Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  >=  c  &&  in.read()  >  10)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  >=  c  &&  in.read()  >  10)  {	  if(in.lookAhead()    ==    c    &&    in.read()    >    10)    {    	compilable	  [FE]  AssertionError  	259	49	replace
1737	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  ((  in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR))  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR)  {  if  ((  in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    LF    ||    in.lookAhead()    ==    CR)    {    if  ((  in.lookAhead()  ==  LF  ||  in.lookAhead()  ==  CR))  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	add
1738	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.Read()  ==  commmentStart)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()  ==  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.Read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()    ==    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.Read()  ==  commmentStart)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	224	None	add
1739	[BUG]  [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  ((  in.lookAhead()  ==  0)||  in.lookAhead()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.lookAhead()  ==  0  ||  in.lookAhead()  ==  0)  {  if  ((  in.lookAhead()  ==  0)||  in.lookAhead()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.lookAhead()    ==    0    ||    in.lookAhead()    ==    0)    {    if  ((  in.lookAhead()  ==  0)||  in.lookAhead()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	add
1740	[BUG]  [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  len)  {  [CE]  cannot  find  symbol  len  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  len)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.read()  ==  len)  {	  if    (c    ==    DISABLED    ||    c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    	non-compiled	[CE]  cannot  find  symbol  len	12	None	replace
1741	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  >=  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	34	7	replace
1742	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  >=  LF)  {  [FE]  AssertionError  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  >=  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  ||  c  ==  DISABLED  &&  in.lookAhead()  >=  LF)  {	  if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    if    (c    ==    DISABLED    ||    c    ==    CR    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	34	7	replace
1743	[BUG]  [BUGGY]  if(in.read()  ==  'n'  &&  in.hasNext())  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  'n'  &&  in.hasNext())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  'n'  &&  in.hasNext())  {	  if(in.read()    ==    c    &&    in.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
1744	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()!=  c  &&  in.read()  >  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	50	replace
1745	[BUG]  [BUGGY]  if(in.read()!=  c  &&  in.read()  >  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()!=  c  &&  in.read()  >  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()!=  c  &&  in.read()  >  0)  {	  if(in.read()    ==    c    &&    in.read()    >    0)    {    	compilable	  [FE]  AssertionError  	243	50	replace
1746	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in.isEmptyLine())  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in.isEmptyLine())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(in  ==  null  ||  in.isEmptyLine())  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
1747	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in.isEmpty())  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in.isEmpty())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(in  ==  null  ||  in.isEmpty())  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
1748	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in.read()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(in  ==  null  ||  in.read()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
1749	[BUG]  [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in.read()  ==  CR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  ==  null)  {  if(in  ==  null  ||  in.read()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in    ==    null)    {    if(in  ==  null  ||  in.read()  ==  CR)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	add
1750	[BUG]  [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(out.lookAhead()  ==  LF)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  LF)  {  if(out.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    LF)    {    if(out.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	add
1751	[BUG]  [BUGGY]  if(in.lookAhead()  ==  LF)  {  If(in.lookAhead()  ==  LF)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  ==  LF)  {  If(in.lookAhead()  ==  LF)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()    ==    LF)    {    If(in.lookAhead()  ==  LF)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
1752	[BUG]  [BUGGY]  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  'n')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(c  ==  DISABLED  ||  c  ==  'n')  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	157	14	replace
1753	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  'n')  {  [FE]  Failed  to  parse  without  comments  (entry  3)  [FE]    Failed  to  parse  without  comments  (entry  3)    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(c  ==  DISABLED  ||  c  ==  'n')  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(c  ==  DISABLED  ||  c  ==  'n')  {	  if(c    ==    'n'    ||    c    ==    DISABLED)    {    	compilable	  [FE]  Failed  to  parse  without  comments  (entry  3)  	157	14	replace
1754	[BUG]  [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(c  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.read()  >  0)  {  if(c  ==  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.read()  >  0)  {  if(c  ==  null)  {	  if(in!=    null)    {    if(c    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
1755	[BUG]  [BUGGY]  if(in!=  null  &&  in.isEmpty())  {  if(c  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.isEmpty())  {  if(c  ==  null)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.isEmpty())  {  if(c  ==  null)  {	  if(in!=    null)    {    if(c    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
1756	[BUG]  [BUGGY]  if(in!=  null  &&  in.isEmpty())  {  if(c  ==  DISABLED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.isEmpty())  {  if(c  ==  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.isEmpty())  {  if(c  ==  DISABLED)  {	  if(in!=    null)    {    if(c    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
1757	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	10	7	replace
1758	[BUG]  [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if  (c!=  DISABLED  &&  c  ==  DISABLED  &&  in.lookAhead()  ==  CR)  {	  if    (c!=    DISABLED    &&    c    ==    DISABLED    &&    in.lookAhead()    ==    LF)    {    	compilable	  [FE]  AssertionError  	10	7	replace
1759	[BUG]  [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  ((  in.read()  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (in.read()  <  DISABLED  ||  c  >  DISABLED)  {  if  ((  in.read()  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (in.read()    <    DISABLED    ||    c    >    DISABLED)    {    if  ((  in.read()  <  DISABLED  ||  c  >  DISABLED)  {	  	non-compiled	[CE]  ')'  expected	181	None	add
1760	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  c  ||  in.read()  ==  commmentStart)  {	  if(in.read()    ==    c)    {    if(in.Read()    ==    c)    {    	compilable	  [FE]  AssertionError  	45	50	replace
1761	[BUG]  [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  commmentStart)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  ||  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  ||  in.read()  ==  commmentStart)  {	  if(in.read()    ==    c)    {    if(in.Read()    ==    c)    {    	compilable	  [FE]  AssertionError  	45	50	replace
1762	[BUG]  [BUGGY]  if(in.lookAhead()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.lookAhead()  <  =  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.lookAhead()  <  =  0)  {	  if(in.lookAhead()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1763	[BUG]  [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentEnd)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentStart)  {  if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentEnd)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    ((    c    <    DISABLED    ||    c    >    DISABLED)&&    in.read()!=    commmentStart)    {    if  ((  c  <  DISABLED  ||  c  >  DISABLED)&&  in.read()!=  commmentEnd)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	222	None	add
1764	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in!=  null  &&  in.lookAhead()  ==  CR)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	66	14	replace
1765	[BUG]  [BUGGY]  if(in!=  null  &&  in.lookAhead()  ==  CR)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  in.lookAhead()  ==  CR)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  in.lookAhead()  ==  CR)  {	  if    (c    >=    DISABLED    &&    in.lookAhead()    ==    CR)    {    	compilable	  [FE]  AssertionError  	66	14	replace
1766	[BUG]  [BUGGY]  if(in!=  null  &&  Integer.parseInt(in))  {  [CE]  no  suitable  method  found  for  parseInt(ExtendedBufferedReader)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  Integer.parseInt(in))  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  Integer.parseInt(in))  {	  if(in!=    null)    {    if(Integer.parseInt(in))    {    	non-compiled	[CE]  no  suitable  method  found  for  parseInt(ExtendedBufferedReader)	232	None	replace
1767	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	add	if(in.read()  ==  c  &&  in.read()  ==  commmentStart)  {	  if(in.read()    ==    c)    {    if(in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	41	48	replace
1768	[BUG]  [BUGGY]  if(in.read()  ==  c  &&  in.read()  ==  commmentStart)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  c  &&  in.read()  ==  commmentStart)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()  ==  c  &&  in.read()  ==  commmentStart)  {	  if(in.read()    ==    c)    {    if(in.read()    ==    c)    {    	compilable	  [FE]  AssertionError  	41	48	replace
1769	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  if(Integer.read()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in.read()  ==  0)  {  if(Integer.read()  ==  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in.read()    ==    0)    {    if(Integer.read()  ==  0)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	add
1770	[BUG]  [BUGGY]  if(in!=  null  &&  out.isEmpty())  {  [CE]  cannot  find  symbol  out  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in!=  null  &&  out.isEmpty())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in!=  null  &&  out.isEmpty())  {	  if(in!=    null    ||    in.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  out	158	None	replace
1771	[BUG]  [BUGGY]  if(in  >>  null  &&  in.isEmpty())  {  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if(in  >>  null  &&  in.isEmpty())  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if(in  >>  null  &&  in.isEmpty())  {	  if(in!=    null    ||    in.isEmpty())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	158	None	replace
1772	[BUG]  [BUGGY]  in.setCharAt(c);  [CE]  illegal  start  of  type  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  in.setCharAt(c);  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	in.setCharAt(c);	  in.read();    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
1773	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  0)  {  if  (c  ==  DISABLED  &&  in.lookAhead()  ==  =  0)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.lookAhead()    ==    0)    {    if  (c  ==  DISABLED  &&  in.lookAhead()  ==  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	198	None	add
1774	[BUG]  [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  &&  in.read()  ==  commmentEnd)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      boolean  readEndOfLine(int  c)  throws  IOException  {        [BUGGY]  if  (c  ==  DISABLED  &&  in.read()  ==  commmentStart)  {  if  (c  ==  DISABLED  &&  in.read()  ==  commmentEnd)  {  [BUGGY]        c  =  in.read();  }  return  c  ==  LF  ||  c  ==  CR;  }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	133	133	3	replace	if    (c    ==    DISABLED    &&    in.read()    ==    commmentStart)    {    if  (c  ==  DISABLED  &&  in.read()  ==  commmentEnd)  {	  	non-compiled	[CE]  class,  interface,  or  enum  expected	196	None	add
