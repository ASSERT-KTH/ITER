projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(entry,DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(entry);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordEmptyLines(in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.readIn();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.parseInt(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=DISABLED;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.MAX_VALUE;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toHexString(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=format;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in{null?in:in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in};
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.read()&&in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=format.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.read(),in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.readInt();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.read(Character.START_INDEX);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.MAX_VALUE;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.getIntValue();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.MAX_VALUE-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.MAX_VALUE+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in==null){this.in=in;}else{recordEmptyLines(in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=format;}else{recordEmptyLines(in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=Integer.MAX_VALUE;}else{recordEmptyLines(in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordEmptyLines(Integer.MAX_VALUE);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordEmptyLines(in,format);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=format.in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toString(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toHexString(in.getInput());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toString(in.getChar());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toHexString(in,format);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toHexString(in,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toHexString(format,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toHexString(cSVFormat,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toHexString(Integer.toHexString(format,in));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toHexString(in,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toHexString(in,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=format;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=Integer.toString(Integer.toString(in));}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=Integer.MAX_VALUE;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=Integer.parseInt(in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=Integer.toString(in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in==null){this.in=in;}else{recordError(entry,DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=format;}else{recordError(entry,DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(format,DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(desc,DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(en,DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=DISABLED;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=DISABLED;}else{in.close();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in==null){this.in=DISABLED;}else{in.close();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=DISABLED;}else{in.skipChildren();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=DISABLED;}else{this.in=in;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in==null){this.in=DISABLED;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=format.readIn();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.readIn()&&Integer.parseInt(in.readIn());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.readIn()&&in.readIn();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.readIn()&&in.readEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.readIn()&&Integer.toHexString(in.readIn());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.readIn()&&Integer.parseInt(in.getCharIndex());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.parseInt(in,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.parseInt(in,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.parseInt(in,format);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.parseInt(in,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.parseInt(format,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.parseInt(in,out);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.commmentStart=mapNullToDisabled(format.getCommentStart());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.commmentStart=in.getCommentStart();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.commmentStart=format.getCommentStart();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.commmentStart=mapNullToDisabled(in.getCommentStart());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.commmentStart=mapNullToDisabled(format.getCommentEnd());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.commmentStart=in.getCommentStart();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59DISABLED=format.getDISABLED();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in==null){this.in=in;}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=format;}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException(".");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("".);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in};}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in==null){this.in=in};}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?in:in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in==null?in:in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in==null?DISABLED:in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in{null?DISABLED:in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in{null?Integer.MAX_VALUE:in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}if(in==null){this.in=in;}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}if(in!=null){this.delimiter=in;}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}if(in!=null){this.in=in;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}if(in!=null){this.commmentStart=in;}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}if(in!=null){this.delimiter=format.getDelimiter();}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}if(in!=null){this.out=in;}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=format;}else{recordError(entry);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in==null){this.in=in;}else{recordError(entry);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in==null){this.in=in;}else{recordError(in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(format);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=formatinstanceofString?(String)in:in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in==null?Integer.MIN_VALUE:in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in==null?Integer.MAX_VALUE:in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(reader);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(out);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toHexString(in,out);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toHexString(in,index);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=DISABLED;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in==DISABLED?1:in};
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.parseInt(in,index);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?CSVFormat.readIn(in):in.readIn();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?null:in.readIn();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?newCSVFormat(in):in.readIn();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?in.readIn():in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?CSVFormat.readIn():in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?CSVFormat.readIn():in.readIn();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59DISABLED=format.getDISABLED();this.commmentStart=format.getCommentStart();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.charAt(Integer.MAX_VALUE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}if(in!=null){this.commmentStart=in.getCommentStart();}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}if(in!=null){this.delimiter=format.getDelimiter();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}if(in!=null){thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59Preconditions.checkState(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59Preconditions.checkArgument(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(display,DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(reader,DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(displayStart,DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?null:in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.read()&&in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?in.read():in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.read(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in==null){this.in=DISABLED;}else{this.in=in;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=Integer.MIN_VALUE;}else{recordEmptyLines(in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=out;}else{recordEmptyLines(in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordEmptyLines(Integer.toString(in));}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=out;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toString(Integer.toString(in.getCharacterIndex()));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toString(Integer.toString(in.getChar()));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toString(Integer.toString(in));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toString(Integer.toString(in.getCharIndex()));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toString(Character.DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toString(Character.DEFAULT_INIT_CHAR);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.read(Character.DEFAULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.read(Character.DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.read(Character.TYPE_DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.read(Character.DEFAULT_OUTPUT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.intValue;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in.intValue();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=out;}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(this.in!=null){this.in=in;}else{recordEmptyLines(in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordEmptyLines(in,in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(this.in!=in){this.in=in;}else{recordEmptyLines(in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(this.in!=null){this.in=in;}else{recordError(format,DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=format;}else{recordError(DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(displayChar,DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(this.in!=in){this.in=in;}else{recordError(format,DISABLED);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=Integer.toHexString(Character.toUpperCase(in));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.commmentStart=mapNullToDisabled(format.getCommentStart());this.commmentStart=mapNullToDisabled(format.getCommentStart());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.commmentStart=mapNullToDisabled(format.getCommentStart());DISABLED=mapNullToDisabled(format.getDISABLED());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=CSVFormat.DISABLED){this.commmentStart=in.getCommentStart();this.commmentStart=mapNullToDisabled(format.getCommentStart());}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=CSVFormat.DISABLED){this.commmentStart=format.getCommentStart();this.commmentStart=mapNullToDisabled(format.getCommentStart());}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(this.in!=null){this.in=in;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=INVALID;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(this.in!=null){this.in=format;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?in.readIn():Integer.MAX_VALUE;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?in.readIn():Integer.parseInt(in.readIn());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?in.readIn():Integer.valueOf(in.readIn());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?newchar[in.readIn()]:in.readIn();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=null?in.readIn():Integer.toString(Character.DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=in!=';';
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("");}if(in!=null){this.in=in;}else{thrownewIllegalArgumentException("".);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=formatinstanceofchar[]?(char[])in:in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=formatinstanceofchar[]?(char)in:in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59this.in=format.getIn();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=format;}else{recordError(in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(in!=null){this.in=in;}else{recordError(format,in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java59if(this.in!=null){this.in=in;}else{recordError(format);}
