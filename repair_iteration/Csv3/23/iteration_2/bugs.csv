bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  TAB;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  TAB;	  return    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	2	8	replace
2	[BUG]  [BUGGY]  return  TAB;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  TAB;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB;	  return    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	2	8	replace
3	[BUG]  [BUGGY]  result  =  END_OF_STREAM;  [CE]  cannot  find  symbol  result  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  result  =  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	2	None	replace
4	[BUG]  [BUGGY]  return  CSV_STREAM;  [CE]  cannot  find  symbol  CSV_STREAM  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSV_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV_STREAM;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  CSV_STREAM	2	None	replace
5	[BUG]  [BUGGY]  return  CSV_SIZE;  [CE]  cannot  find  symbol  CSV_SIZE  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSV_SIZE;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV_SIZE;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  CSV_SIZE	2	None	replace
6	[BUG]  [BUGGY]  return  c  +  1;  int  c  +  1;  [CE]  ';'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  int  c  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    int  c  +  1;	  	non-compiled	[CE]  ';'  expected	9	None	add
7	[BUG]  [BUGGY]  return  c  +  1;  c  +  1;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  c  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    c  +  1;	  	non-compiled	[CE]  not  a  statement	9	None	add
8	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpaces();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	9	None	add
9	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	9	None	add
10	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpaces().size();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	9	None	add
11	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  Integer.MAX_VALUE;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  int  c  =  Integer.MAX_VALUE;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    int  c  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	9	None	add
12	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getEscapeSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  int  c  =  getEscapeSurroundingSpaces().size();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    int  c  =  getEscapeSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	9	None	add
13	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  Integer.parseInt(quoteChar);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  int  c  =  Integer.parseInt(quoteChar);  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    int  c  =  Integer.parseInt(quoteChar);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	9	None	add
14	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM!=  ignoreEmptyLines;  [CE]  incomparable  types:  int  and  boolean  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_STREAM!=  ignoreEmptyLines;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM!=  ignoreEmptyLines;	  return    END_OF_STREAM    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	19	None	replace
15	[BUG]  [BUGGY]  return  CR  ||  c!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CR  ||  c!=  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c!=  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	19	None	replace
16	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces!=  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_SURroundingSpaces!=  ignoreEmptyLines;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces!=  ignoreEmptyLines;	  return    END_OF_STREAM    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	19	None	replace
17	[BUG]  [BUGGY]  return  END_SPACE  ||  c!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SPACE  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_SPACE  ||  c!=  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SPACE  ||  c!=  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	19	None	replace
18	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;	  return    END_OF_STREAM    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	19	None	replace
19	[BUG]  [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpaces();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
20	[BUG]  [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpaces().size();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
21	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(c)  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Record  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	3	None	add
22	[BUG]  [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Document  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	3	None	add
23	[BUG]  [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpaces().length;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    int  c  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
24	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result  ()  ==  return  BACKSPACE;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result  ()  ==  return  BACKSPACE;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Record  do  not  match  expected  result  ()  ==  return  BACKSPACE;	  	non-compiled	[CE]  not  a  statement	3	None	add
25	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result  ()  ==  return  TAB;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result  ()  ==  return  TAB;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Record  do  not  match  expected  result  ()  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	3	None	add
26	[BUG]  [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpace();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    int  c  =  getSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
27	[BUG]  [BUGGY]  return  END_OF_STREAM;  END_OF_STREAM;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    END_OF_STREAM;	  	non-compiled	[CE]  not  a  statement	1	None	add
28	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpaces();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
29	[BUG]  [BUGGY]  return  END_OF_STREAM;  return  END_OF_STREAM;  [CE]  unreachable  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  return  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    return  END_OF_STREAM;	  	non-compiled	[CE]  unreachable  statement	1	None	add
30	[BUG]  [BUGGY]  return  END_OF_STREAM;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [CE]  unreachable  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
31	[BUG]  [BUGGY]  return  END_OF_STREAM;  if(c  ==  'n'  ||  c  ==  'r')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  if(c  ==  'n'  ||  c  ==  'r')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    if(c  ==  'n'  ||  c  ==  'r')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }	  	non-compiled	[CE]  not  a  statement	1	None	add
32	[BUG]  [BUGGY]  return  END_OF_STREAM;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [CE]  unreachable  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
33	[BUG]  [BUGGY]  return  END_OF_STREAM;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;	  	non-compiled	[CE]  orphaned  case	1	None	add
34	[BUG]  [BUGGY]  return  END_OF_STREAM;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;	  	non-compiled	[CE]  orphaned  case	1	None	add
35	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  BACKSPACE  +  1;	  return    c    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	10	8	replace
36	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  +  1;	  return    c    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	10	8	replace
37	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  2;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  c  +  2;	  return    c    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	10	9	replace
38	[BUG]  [BUGGY]  return  c  +  2;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  2;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  +  2;	  return    c    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	10	9	replace
39	[BUG]  [BUGGY]  return  CSVFormat.BACKSPACE  +  1;  [CE]  cannot  find  symbol  BACKSPACE  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.BACKSPACE  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.BACKSPACE  +  1;	  return    c    +    1;    	non-compiled	[CE]  cannot  find  symbol  BACKSPACE	10	None	replace
40	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM  +  1;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.END_OF_STREAM  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_STREAM  +  1;	  return    c    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	10	None	replace
41	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  3;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  c  +  3;	  return    c    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	10	9	replace
42	[BUG]  [BUGGY]  return  c  +  3;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  3;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  +  3;	  return    c    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	10	9	replace
43	[BUG]  [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_SURroundingSpaces;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	8	None	replace
44	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  +  1;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_SURroundingSpaces  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  +  1;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	8	None	replace
45	[BUG]  [BUGGY]  return  CSVFormat.END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.END_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_SURroundingSpaces;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	8	None	replace
46	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces.length;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_SURroundingSpaces.length;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces.length;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	8	None	replace
47	[BUG]  [BUGGY]  return  CSVFormat.NUMBER_OF_STREAM;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.NUMBER_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.NUMBER_OF_STREAM;	  return    NUMBER_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	14	None	replace
48	[BUG]  [BUGGY]  return  CSV_NUMBER_OF_STREAM;  [CE]  cannot  find  symbol  CSV_NUMBER_OF_STREAM  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSV_NUMBER_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV_NUMBER_OF_STREAM;	  return    NUMBER_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  CSV_NUMBER_OF_STREAM	14	None	replace
49	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  END_OF_STREAM  +  1;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  END_OF_STREAM  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    END_OF_STREAM  +  1;	  	non-compiled	[CE]  not  a  statement	15	None	add
50	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
51	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
52	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().size();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
53	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getEscapeSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getEscapeSurroundingSpaces().size();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getEscapeSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
54	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
55	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    Record  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	15	None	add
56	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getEscapeChar();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
57	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  ==  ignoreEmptyLines;  [CE]  incomparable  types:  int  and  boolean  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_STREAM  ==  ignoreEmptyLines;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  ==  ignoreEmptyLines;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	18	None	replace
58	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  ==  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  ==  ignoreEmptyLines;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces  ==  ignoreEmptyLines;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	18	None	replace
59	[BUG]  [BUGGY]  return  CR  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CR  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	18	None	replace
60	[BUG]  [BUGGY]  return  END_SPACE  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SPACE  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_SPACE  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SPACE  ||  c  ==  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	18	None	replace
61	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	18	None	replace
62	[BUG]  [BUGGY]  return  END_SURroundingSpaces  ||  c  ==  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_SURroundingSpaces  ||  c  ==  END_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURroundingSpaces  ||  c  ==  END_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	18	None	replace
63	[BUG]  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [CE]  duplicate  case  label  [FE]    IOException    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]      case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	        case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	  	non-compiled	[CE]  duplicate  case  label	11	None	add
64	[BUG]  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [CE]  duplicate  case  label  [FE]      IOException    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]      case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	        case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");	  	non-compiled	[CE]  duplicate  case  label	11	None	add
65	[BUG]  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  break;  [CE]  duplicate  case  label  [FE]        IOException    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]      case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  break;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	        case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  break;	  	non-compiled	[CE]  duplicate  case  label	11	None	add
66	[BUG]  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);  [CE]  no  suitable  constructor  found  for  IOException(String,int)  [FE]          IOException    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]      case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	        case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);	  	non-compiled	[CE]  no  suitable  constructor  found  for  IOException(String,int)	11	None	add
67	[BUG]  [BUGGY]      case  END_OF_STREAM:  return  END_OF_STREAM;  [CE]  duplicate  case  label  [FE]            IOException    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]      case  END_OF_STREAM:  return  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	        case  END_OF_STREAM:  return  END_OF_STREAM;	  	non-compiled	[CE]  duplicate  case  label	11	None	add
68	[BUG]  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence, ");  [CE]  duplicate  case  label  [FE]              IOException    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]      case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence, ");  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	        case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence, ");	  	non-compiled	[CE]  duplicate  case  label	11	None	add
69	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_STREAM  <  =  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  <  =  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
70	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  <  =  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces  <  =  END_OF_STREAM;	  return    END_OF_STREAM    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
71	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  <  =  ignoreEmptyLines;  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_STREAM  <  =  ignoreEmptyLines;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  <  =  ignoreEmptyLines;	  return    END_OF_STREAM    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
72	[BUG]  [BUGGY]  return  END_OF_STREAM  &&  c  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  &&  c  <  =  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  &&  c  <  =  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
73	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
74	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	7	None	replace
75	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  +  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  c  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  +  1;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	7	None	replace
76	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  CR;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  CR;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  CR;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	7	None	replace
77	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  DISABLED;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  DISABLED;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	7	None	replace
78	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c.length;  [CE]  int  cannot  be  dereferenced  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  c.length;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c.length;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  int  cannot  be  dereferenced	7	None	replace
79	[BUG]  [BUGGY]  return  CR  ||  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CR  ||  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  END_OF_STREAM;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	7	None	replace
80	[BUG]  [BUGGY]  return  END_OF_STREAM  &&  c;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  &&  c;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  &&  c;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	7	None	replace
81	[BUG]  [BUGGY]  return  c.intValue();  [CE]  int  cannot  be  dereferenced  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c.intValue();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c.intValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	replace
82	[BUG]  [BUGGY]  int  c  =  END_OF_STREAM.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  int  c  =  END_OF_STREAM.intValue();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  END_OF_STREAM.intValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	replace
83	[BUG]  [BUGGY]  return  END_OF_STREAM.intValue()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM.intValue()  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM.intValue()  +  1;	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	replace
84	[BUG]  [BUGGY]  return  CSVFormat.intValue();  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.intValue();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.intValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
85	[BUG]  [BUGGY]  return  BACKSPACE.intValue();  [CE]  char  cannot  be  dereferenced  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE.intValue();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE.intValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	6	None	replace
86	[BUG]  [BUGGY]  return  END_OF_STREAM.longValue();  [CE]  int  cannot  be  dereferenced  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM.longValue();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM.longValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	replace
87	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  >=  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_STREAM  >=  ignoreEmptyLines;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  >=  ignoreEmptyLines;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	20	None	replace
88	[BUG]  [BUGGY]  return  CR  ||  c  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CR  ||  c  >=  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  >=  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	20	None	replace
89	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  >=  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces  >=  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	20	None	replace
90	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_SURroundingSpaces!=  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces!=  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	20	None	replace
91	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CR;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  CR;	  return    END;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	5	8	replace
92	[BUG]  [BUGGY]  return  CR;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CR;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR;	  return    END;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	5	8	replace
93	[BUG]  [BUGGY]  return  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURroundingSpaces;	  return    END;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	5	None	replace
94	[BUG]  [BUGGY]  return  CSVFormat.END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.END_OBJECT;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OBJECT;	  return    CSVFormat.END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	13	None	replace
95	[BUG]  [BUGGY]  return  CSVFormat.END_BACKSPACE;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.END_BACKSPACE;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_BACKSPACE;	  return    CSVFormat.END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	13	None	replace
96	[BUG]  [BUGGY]  return  CSVFormat.END_EOF;  [CE]  cannot  find  symbol  END_EOF  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.END_EOF;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_EOF;	  return    CSVFormat.END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_EOF	13	None	replace
97	[BUG]  [BUGGY]  return  CSVFormat.START_OBJECT;  [CE]  cannot  find  symbol  START_OBJECT  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.START_OBJECT;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.START_OBJECT;	  return    CSVFormat.END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	13	None	replace
98	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  TAB  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  TAB  +  1;	  return    END_OF_STREAM    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	16	8	replace
99	[BUG]  [BUGGY]  return  TAB  +  1;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  TAB  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB  +  1;	  return    END_OF_STREAM    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	16	8	replace
100	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  2;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  END_OF_STREAM  +  2;	  return    END_OF_STREAM    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	16	9	replace
101	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  2;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  +  2;	  return    END_OF_STREAM    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	16	9	replace
102	[BUG]  [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  END_OF_STREAM;	  return    BACKSPACE;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	4	None	replace
103	[BUG]  [BUGGY]  return  BACKSPACE  ||  c  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE  ||  c  <  =  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  c  <  =  END_OF_STREAM;	  return    BACKSPACE;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
104	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE  -  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  BACKSPACE  -  1;	  return    BACKSPACE;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	4	9	replace
105	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE  -  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  -  1;	  return    BACKSPACE;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	4	9	replace
106	[BUG]  [BUGGY]  return  ENDSPACE  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  ENDSPACE  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  ENDSPACE  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c  ==  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	18	None	replace
107	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_STREAM  ==  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  ==  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	18	None	replace
108	[BUG]  [BUGGY]  return  END_BACKSPACE  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_BACKSPACE  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_BACKSPACE  ||  c  ==  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	18	None	replace
109	[BUG]  [BUGGY]  return  ENDSPACE  ||  c  ==  END_SURroundingSpaces;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  ENDSPACE  ||  c  ==  END_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c  ==  END_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	18	None	replace
110	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1L;  [CE]  possible  loss  of  precision  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1L;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  +  1L;	  return    END_OF_STREAM    +    1;    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
111	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_STREAM  >=  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  >=  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	20	None	replace
112	[BUG]  [BUGGY]  return  END_SPACE  ||  c  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SPACE  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_SPACE  ||  c  >=  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SPACE  ||  c  >=  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	20	None	replace
113	[BUG]  [BUGGY]  return  ENDSPACE  ||  c  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  ENDSPACE  ||  c  >=  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c  >=  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	20	None	replace
114	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_OBJECT;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  >=  END_OBJECT;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	20	None	replace
115	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_EmptyLines;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_EmptyLines;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  >=  END_EmptyLines;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	20	None	replace
116	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_OBJECT;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  END_OBJECT;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	20	None	replace
117	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  0;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  0;	  return    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	2	9	replace
118	[BUG]  [BUGGY]  return  0;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  0;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  0;	  return    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	2	9	replace
119	[BUG]  [BUGGY]  return  TEXT;  [CE]  cannot  find  symbol  TEXT  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  TEXT;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TEXT;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  TEXT	2	None	replace
120	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  DISABLED;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  DISABLED;	  return    END_OF_SURroundingSpaces;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	9	replace
121	[BUG]  [BUGGY]  return  DISABLED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  DISABLED;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED;	  return    END_OF_SURroundingSpaces;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	9	replace
122	[BUG]  [BUGGY]  return  RECORD;  [CE]  cannot  find  symbol  RECORD  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  RECORD;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  RECORD;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  RECORD	8	None	replace
123	[BUG]  [BUGGY]  return  END_OF_SURRUING;  [CE]  cannot  find  symbol  END_OF_SURRUING  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_SURRUING;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURRUING;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUING	8	None	replace
124	[BUG]  [BUGGY]  case  END_OF_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [CE]  cannot  find  symbol  END_OF_SECOND  [FE]    IOException    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  case  END_OF_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	      	non-compiled	[CE]  cannot  find  symbol  END_OF_SECOND	12	None	replace
125	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  break  c;  [CE]  undefined  label:  c  [FE]      IOException    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  break  c;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  break  c;	      	non-compiled	[CE]  undefined  label:  c	12	None	replace
126	[BUG]  [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [CE]  [FE]        IOException    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	      	non-compiled	[CE]  	12	None	replace
127	[BUG]  [BUGGY]  case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [CE]  cannot  find  symbol  END  [FE]          IOException    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	      	non-compiled	[CE]  cannot  find  symbol  END	12	None	replace
128	[BUG]  [BUGGY]  return  CSVFormat.END_SPACE;  [CE]  cannot  find  symbol  END_SPACE  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.END_SPACE;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_SPACE;	  return    CSVFormat.END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	13	None	replace
129	[BUG]  [BUGGY]  return  CSVFormat.END_ARRAY;  [CE]  cannot  find  symbol  END_ARRAY  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.END_ARRAY;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_ARRAY;	  return    CSVFormat.END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_ARRAY	13	None	replace
130	[BUG]  [BUGGY]  return  CSVFormat.END;  [CE]  cannot  find  symbol  END  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.END;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END;	  return    CSVFormat.END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END	13	None	replace
131	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	7	None	replace
132	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_BACKSPACE;  [CE]  cannot  find  symbol  END_OF_BACKSPACE  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  END_OF_BACKSPACE;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_BACKSPACE;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  cannot  find  symbol  END_OF_BACKSPACE	7	None	replace
133	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SCRIPT;  [CE]  cannot  find  symbol  END_OF_SCRIPT  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  END_OF_SCRIPT;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SCRIPT;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SCRIPT	7	None	replace
134	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM  +  1;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	7	None	replace
135	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  1;  [CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  1;	  return    c    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces	10	None	replace
136	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  +  1;  [CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_SURroundingSpaces  +  1;	  return    c    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces	10	None	replace
137	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getCurrentSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  int  c  =  getCurrentSurroundingSpaces();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    int  c  =  getCurrentSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	9	None	add
138	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getCurrentIndex();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  int  c  =  getCurrentIndex();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    int  c  =  getCurrentIndex();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	9	None	add
139	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  int  c  =  getEscapeChar();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	9	None	add
140	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getCurrentSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  int  c  =  getCurrentSurroundingSpace();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    int  c  =  getCurrentSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	9	None	add
141	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_STREAM!=  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM!=  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	19	None	replace
142	[BUG]  [BUGGY]  return  ENDSPACE  ||  c!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  ENDSPACE  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  ENDSPACE  ||  c!=  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c!=  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	19	None	replace
143	[BUG]  [BUGGY]  return  ENDSPACE  ||  c!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  ENDSPACE  ||  c!=  END_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c!=  END_SURroundingSpaces;	  return    END_OF_STREAM    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	19	None	replace
144	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c!=  END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  c!=  END_OBJECT;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c!=  END_OBJECT;	  return    END_OF_STREAM    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	19	None	replace
145	[BUG]  [BUGGY]  return  END_SPACE  ||  c!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SPACE  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_SPACE  ||  c!=  END_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SPACE  ||  c!=  END_SURroundingSpaces;	  return    END_OF_STREAM    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	19	None	replace
146	[BUG]  [BUGGY]  return  NUMBER_OF_STREAM  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  NUMBER_OF_STREAM  ||  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_STREAM  ||  END_OF_STREAM;	  return    NUMBER_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	14	None	replace
147	[BUG]  [BUGGY]  return  NUMBER_OF_STREAM  +  1;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  NUMBER_OF_STREAM  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_STREAM  +  1;	  return    NUMBER_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	14	None	replace
148	[BUG]  [BUGGY]  return  NUMBER_OF_STREAM  |  END_OF_STREAM;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  NUMBER_OF_STREAM  |  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_STREAM  |  END_OF_STREAM;	  return    NUMBER_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	14	None	replace
149	[BUG]  [BUGGY]  return  escape.intValue();  [CE]  char  cannot  be  dereferenced  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  escape.intValue();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  escape.intValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	6	None	replace
150	[BUG]  [BUGGY]  return  b.intValue();  [CE]  cannot  find  symbol  b  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  b.intValue();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  b.intValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  cannot  find  symbol  b	6	None	replace
151	[BUG]  [BUGGY]  return  END_OF_STREAM.intValue()  +  2;  [CE]  int  cannot  be  dereferenced  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM.intValue()  +  2;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM.intValue()  +  2;	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	replace
152	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  return  END_OF_STREAM  +  1;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  return  END_OF_STREAM  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    return  END_OF_STREAM  +  1;	  	non-compiled	[CE]  unreachable  statement	15	None	add
153	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	15	None	add
154	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	15	None	add
155	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	3	None	add
156	[BUG]  [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	3	None	add
157	[BUG]  [BUGGY]  return  BACKSPACE;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
158	[BUG]  [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;	  	non-compiled	[CE]  not  a  statement	3	None	add
159	[BUG]  [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;	  	non-compiled	[CE]  not  a  statement	3	None	add
160	[BUG]  [BUGGY]  return  BACKSPACE;  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Collections.emptyList();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  Collections	3	None	add
161	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(false)  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(false)  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Record  do  not  match  expected  result(false)	  	non-compiled	[CE]  not  a  statement	3	None	add
162	[BUG]  [BUGGY]  return  END_OF_STREAM;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	1	None	add
163	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
164	[BUG]  [BUGGY]  return  END_OF_STREAM;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	1	None	add
165	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpaces().size();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
166	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces().size();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    int  c  =  getEscapeSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
167	[BUG]  [BUGGY]  return  NUMBER_OF_STREAM  ||  c  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  NUMBER_OF_STREAM  ||  c  <  =  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_STREAM  ||  c  <  =  END_OF_STREAM;	  return    NUMBER_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
168	[BUG]  [BUGGY]  return  NUMBER_OF_STREAM  ||  c  >  END_OF_STREAM;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  NUMBER_OF_STREAM  ||  c  >  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_STREAM  ||  c  >  END_OF_STREAM;	  return    NUMBER_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	14	None	replace
169	[BUG]  [BUGGY]  return  END_OF_STREAM;  Return  END_OF_STREAM;  [CE]  cannot  find  symbol  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  Return  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    Return  END_OF_STREAM;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
170	[BUG]  [BUGGY]  return  END_OF_STREAM;  result  =  END_OF_STREAM;  [CE]  cannot  find  symbol  result  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  result  =  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    result  =  END_OF_STREAM;	  	non-compiled	[CE]  cannot  find  symbol  result	1	None	add
171	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpace();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    int  c  =  getSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
172	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeChar();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
173	[BUG]  [BUGGY]  return  CSV_SYNTHETIC;  [CE]  cannot  find  symbol  CSV_SYNTHETIC  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSV_SYNTHETIC;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV_SYNTHETIC;	  return    END;    	non-compiled	[CE]  cannot  find  symbol  CSV_SYNTHETIC	5	None	replace
174	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  'n';  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  'n';	  return    END;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	5	9	replace
175	[BUG]  [BUGGY]  return  'n';  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  'n';  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  'n';	  return    END;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	5	9	replace
176	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;	  	non-compiled	[CE]  not  a  statement	15	None	add
177	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(entry  -  1);  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    Record  do  not  match  expected  result(entry  -  1);	  	non-compiled	[CE]  not  a  statement	15	None	add
178	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpace();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
179	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  escape;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  escape;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  escape;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	7	None	replace
180	[BUG]  [BUGGY]  return  b  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  b  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  b  ||  END_OF_STREAM;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  b  ||  END_OF_STREAM;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  cannot  find  symbol  b	7	None	replace
181	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  escapeChar;  [CE]  cannot  find  symbol  escapeChar  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  escapeChar;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  escapeChar;	  return    END_OF_STREAM    ||    c;    	non-compiled	[CE]  cannot  find  symbol  escapeChar	7	None	replace
182	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  readEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  int  c  =  readEscapeSurroundingSpaces();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    int  c  =  readEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	9	None	add
183	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpace();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    1;    int  c  =  getSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	9	None	add
184	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM  -  1;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.END_OF_STREAM  -  1;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_STREAM  -  1;	  return    CSVFormat.END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	13	None	replace
185	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM  *  2;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  CSVFormat.END_OF_STREAM  *  2;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_STREAM  *  2;	  return    CSVFormat.END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	13	None	replace
186	[BUG]  [BUGGY]  return  _escapeChar.intValue();  [CE]  cannot  find  symbol  _escapeChar  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  _escapeChar.intValue();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  _escapeChar.intValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  cannot  find  symbol  _escapeChar	6	None	replace
187	[BUG]  [BUGGY]  return  in.intValue();  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  in.intValue();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  in.intValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
188	[BUG]  [BUGGY]  return  ch.intValue();  [CE]  cannot  find  symbol  ch  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  ch.intValue();  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ch.intValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  cannot  find  symbol  ch	6	None	replace
189	[BUG]  [BUGGY]  return  c  <  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  <  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	20	None	replace
190	[BUG]  [BUGGY]  return  c  >>  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  >>  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >>  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	20	None	replace
191	[BUG]  [BUGGY]  return  c  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  >=  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	20	None	replace
192	[BUG]  [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  =  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
193	[BUG]  [BUGGY]  return  c  ||  c  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  c  >=  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  >=  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	20	None	replace
194	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  [CE]  ';'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'	  return    END_OF_STREAM;    	non-compiled	[CE]  ';'  expected	2	None	replace
195	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM;    	non-compiled	[CE]  ';'  expected	2	None	replace
196	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM;    	non-compiled	[CE]  ';'  expected	2	None	replace
197	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM;    	non-compiled	[CE]  ';'  expected	2	None	replace
198	[BUG]  [BUGGY]  return  BACKSPACE;  return  BACKSPACE;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  return  BACKSPACE;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    return  BACKSPACE;	  	non-compiled	[CE]  unreachable  statement	3	None	add
199	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(entry  -  1);  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Record  do  not  match  expected  result(entry  -  1);	  	non-compiled	[CE]  not  a  statement	3	None	add
200	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Record  do  not  match  expected  result(entry)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	3	None	add
201	[BUG]  [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Document  do  not  match  expected  result(entry)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	3	None	add
202	[BUG]  [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE;    Document  do  not  match  expected  result(c)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	3	None	add
203	[BUG]  [BUGGY]  return  c  >  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  >  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
204	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	8	None	replace
205	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURRUARY;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURRUARY;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_SURRUARY;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	8	None	replace
206	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	18	None	replace
207	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_OF_EXPECTED;  [CE]  cannot  find  symbol  END_OF_EXPECTED  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_OF_EXPECTED;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  END_OF_EXPECTED;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_EXPECTED	18	None	replace
208	[BUG]  [BUGGY]  return  c  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  c  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	18	None	replace
209	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_EmptyLines;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?    [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_EmptyLines;  [BUGGY]    case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  END_EmptyLines;	  return    END_OF_STREAM    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	18	None	replace
